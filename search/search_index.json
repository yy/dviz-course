{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Course overview","text":""},{"location":"#course-description","title":"Course description","text":"<p>Data visualization plays a pivotal role in understanding information, from news articles to cutting-edge scientific research, and is employed across diverse settings, from home offices to the world's largest corporations. As an integral component of data analysis, data visualization has become a crucial skill for all knowledge workers.</p> <p>This introductory course delves into the core concepts of statistical data analysis and visualization. You will explore the foundations of data visualization, covering topics such as perception, integrity, design principles, statistical methods, data classifications, and various visualization techniques. Through hands-on exercises utilizing the Python stack, students will develop practical skills in data processing and visualization.</p>"},{"location":"#course-objectives","title":"Course objectives","text":"<p>Upon completing the course, you are expected to acquire the ability to produce data visualizations that are effective, accurate, and ethical.  You will also be able to critically evaluate data visualizations and effectively communicate your findings to others.  This ability will build on your understanding of the fundamental principles of data visualization, including human perception, design, data types, and visualization techniques.  Your proficiency will be showcased through a course project through which you will not only create data visualizations but also document the process of creating effective, accurate, and ethical data visualizations.</p>"},{"location":"#relationships-with-ivmooc","title":"Relationships with IVMOOC","text":"<p>This course differs from E583/Z637 in that it places greater emphasis on fundamental statistical visualizations and conducting exploratory data analysis through coding, utilizing the Python data science and visualization stack. As a result, it may be a more suitable choice for students aiming for careers in research, development, engineering, and data analysis, or for those who will directly handle and analyze complex datasets.</p>"},{"location":"#basic-information","title":"Basic Information","text":"<ul> <li>Homepage: https://yyahn.com/dviz-course/</li> <li>GitHub: https://github.com/yy/dviz-course</li> <li>Instructor: Yong-Yeol (YY) Ahn (Office Hours: Check Canvas) </li> <li>Announcements: All announcements will be sent via Canvas and Slack. </li> <li>Prerequisites: This course is open to advanced undergraduate students (I422) as well as graduate students (I590). Because programming (in Python and Javascript) is an integral part of the course, it is required to have good understanding and working knowledge of programming. The basic programming courses (Both I210/I211 or equivalent) are required prerequisites. In addition, I308: Information Representation and a basic statistics course is a recommended prerequisite. Basic understanding of design process and web (HTML, CSS, Javascript) is also highly recommended.</li> <li>Syllabus: You can download the syllabus here, but you should check this homepage for up-to-date information. </li> </ul>"},{"location":"#links","title":"Links","text":"<ul> <li>Course Wiki</li> <li>Projects</li> <li>Resources</li> </ul>"},{"location":"#special-thanks","title":"Special Thanks","text":"<ul> <li>Francisco Alfaro helped the migration with mkdocs. </li> </ul>"},{"location":"__init__/","title":"init","text":""},{"location":"communication/","title":"Communication","text":""},{"location":"communication/#channels","title":"Channels","text":"<p>We will have Canvas as the primary and official channel, but also have Slack as a more casual/quick communication channel. </p> <p>You need to use IU email or Canvas for any communication that contains your personal information or specific grade.  However, I may be able to see Slack messages more quickly (I'm often behind my emails). </p> <p>So I'd encourage to use Slack as the default, but then Canvas/Email for anything personal or sensitive. Even when you communicate via Canvas, you can still ping me on Slack to ensure that I see it quickly. </p>"},{"location":"communication/#how-to-get-your-answers-quickly-and-effectively","title":"How to get your answers quickly and effectively","text":""},{"location":"communication/#not-so-effective","title":"Not so effective","text":"<ol> <li> <p>Sending DMs to a single TA or only to the instructor individually: You are less likely to get a timely response and you may need to send multiple messages to multiple people and then coordinate them. What could be a single message in a group DM can become dozens of scattered messages. Unless it is very personal/sensitive, avoid doing this. </p> </li> <li> <p>Using Canvas/email as the primary channel: This is totally fine given that it is our primary communication channel. However, please note that the response may be much slower given that I am usually swamped with emails and cannot respond quickly. I can see Slack messages more often. </p> </li> </ol>"},{"location":"communication/#more-effective","title":"More effective","text":"<ol> <li> <p>Post in <code>#q-and-a</code> channel: this will maximize the number of people who can see and answer your question (the instructor, TAs, and other students). </p> </li> <li> <p>Create a group DM with all AIs &amp; the instructor: This again will make sure that everyone in the team see your message and everyone is on the same page. </p> </li> </ol>"},{"location":"communication/#how-to-ask-a-good-question","title":"How to ask a good question?","text":"<p>The quality and promptness of answers you get will largely depend on the quality of your question! </p> <p>provide enough context. For instance, if you encounter an error, you may want to show us, for instance, the error message, what you were doing, screenshots, what you did to solve the issue, your hypothesis about why it is happening, and the notebook file itself, and so on. Actually, one of the best ways to solve an issue is trying to ask a really good question properly.</p> <p>Show the screenshot. Since it is impossible to remember every single quiz question or parts of the assignments, not having the context right there means: open a browser, go to canvas website, type login password, wait for the duo login, navigate to the course, navigate to the module, open the right question, and read it. It creates a huge unnecessary friction. If you\u2019re looking at the question (or any text), just copy &amp; paste it. </p> <p>Don\u2019t summon, just ask your question. </p> <ul> <li>Don't: \"Hello professor? Can I ask a question?\" - Of course you can ask a question! \ud83d\ude0a You can just ask! </li> <li>Do: \"Could you clarify the following quiz question? Here's the screenshot of the quiz and it is module X review quiz. I thought that the answer was X but it was Y. blah blah ...\"</li> </ul>"},{"location":"m01-intro/class/","title":"Why?","text":"<p>Whatever we learn, we need to know why we are learning it. So, why do we need to learn visualization? </p>"},{"location":"m01-intro/class/#further-readings","title":"Further readings","text":""},{"location":"m01-intro/class/#meta-learning","title":"Meta-learning","text":"<p>Why quizzes and exams (retrievals) are more critical than reading or lecture in learning?</p> <ul> <li>Karpicke, Jeffrey D., and Henry L. Roediger. \"The critical importance of retrieval for learning.\" science 319.5865 (2008): 966-968. </li> </ul> <p>On the importance of internal motives</p> <ul> <li>RSA Animate - Drive: The surprising truth about what motivates us</li> <li>Wrzesniewski, Amy, et al. \"Multiple types of motives don't multiply the motivation of West Point cadets.\" Proceedings of the National Academy of Sciences 111.30 (2014): 10990-10995.</li> </ul>"},{"location":"m01-intro/class/#john-snows-map","title":"John Snow's map","text":"<p>Industrial revolution</p> <ul> <li>Coal, Steam, and the Industrial Revolution: Crash Course World History #32</li> </ul> <p>John Snow's Cholera map and Voronoi diagram</p> <ul> <li>Nightmen in London</li> <li>The Ghost Map: The Story of London's Most Terrifying Epidemic--and How It Changed Science, Cities, and the Modern World by Steven Johnson</li> <li> <p>The John Snow archive and research companion</p> </li> <li> <p>Wikipedia: Voronoi Diagram</p> </li> <li>https://yyiki.org/wiki/Voronoi%20diagram/</li> </ul>"},{"location":"m01-intro/class/#power-of-visualization","title":"Power of visualization","text":"<ul> <li>Anscombe's quartet</li> <li>Same Stats, Different Graphs - CHI 2017</li> <li>What data patterns can lie behind a correlation coefficient?</li> <li>Pre-attentive processing</li> </ul> <p>Visualizations</p> <ul> <li>PBS: The Art of Data Visualization</li> <li>Racial dotmap</li> <li>Pulse of the Nation</li> <li>\u2018Stop-and-Frisk\u2019 Is All but Gone From New York</li> </ul> <p>Exploratory vs. Explantory visualization</p> <ul> <li>See Exploratory vs. explanatory visualization</li> </ul>"},{"location":"m01-intro/lab01/","title":"Module 1: Python environment setup","text":"Run in Google Colab View on Github View raw on Github In\u00a0[\u00a0]: Copied! <pre>!pip install numpy scipy matplotlib seaborn pandas altair vega_datasets scikit-learn bokeh datashader holoviews wordcloud spacy\n</pre> !pip install numpy scipy matplotlib seaborn pandas altair vega_datasets scikit-learn bokeh datashader holoviews wordcloud spacy In\u00a0[\u00a0]: Copied! <pre>import numpy\nimport scipy\nimport matplotlib\nimport seaborn\nimport pandas\nimport altair\nimport vega_datasets\nimport scikit-learn\nimport bokeh\nimport datashader\nimport holoviews\nimport wordcloud\nimport spacy\n</pre> import numpy import scipy import matplotlib import seaborn import pandas import altair import vega_datasets import scikit-learn import bokeh import datashader import holoviews import wordcloud import spacy In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"m01-intro/lab01/#module-1-python-environment-setup","title":"Module 1: Python environment setup\u00b6","text":""},{"location":"m01-intro/lab01/#overview-of-python-visualization-toolkit","title":"Overview of Python Visualization Toolkit\u00b6","text":"<p>These two talks provide pretty good overview of the Python visualization landscape.</p> <ul> <li>Jake VanderPlas at PyCon 2017: The Python Visualization Landscape.</li> <li>James Bednar at AnacondaCon 2018: PyViz: Dashboards for Visualizing 1 Billion Datapoints in 30 Lines of Python.</li> </ul>"},{"location":"m01-intro/lab01/#python-environment-setup","title":"Python environment setup\u00b6","text":"<p>When you work on data visualizations, there are two main choices: local and cloud. Working locally means installing various packages in your computer and working on the cloud means using services like Google Colaboratory.</p> <p>Local installation can be nice and convenient (when it works) because everything is in your computer. You can work without network connection and everything can be configured exactly as you see fit. However, local installation can be a huge source of pain because there are multiple ways to install packages (e.g., Anaconda, System Python, etc.) and they can interfere and break. This \"dependency hell\" can be extremely frustrating. At the same time, working locally is limited by the power of your computer. For instance, you may not be able to run a heavy computational task because your laptop is 10 years old or because you refuse to delete a game for a huge dataset.</p> <p>On the other hand, working on a cloud environment can also be nice and convenient (when it works). You don't need to worry about different installation and dependency hell, as long as the environment that the cloud provider provides is adequate. All computation is done on the cloud so your computer will not suffer. But that also means you can only work within the boundary set by the cloud provider. For instance the free Google Colaboratory has a certain limit on memory and disk usage, and to go beyond you have to pay.</p> <p>My recommendation is the following: if you are comfortable with managing your computer and multiple Python installations and packages, or want to learn system management, go with local option. You can either use Anaconda or just vanilla Python (with <code>virtuanenv</code> and <code>pip</code>). If you don't want to spend time on this, use Google Colaboratory.</p>"},{"location":"m01-intro/lab01/#local-setup","title":"Local setup\u00b6","text":"<p>If you don't have much experience with Python ecosystem, we recommend using Anaconda, which makes most data analysis tasks easier. But it is totally fine not to use Anaconda.</p>"},{"location":"m01-intro/lab01/#setting-up-anaconda-environment","title":"Setting up Anaconda environment\u00b6","text":"<p>Anaconda is a popular, all-in-one Python package distribution system. If your work is focused on data analysis, machine learning, visualization, etc., then just sticking with Anaconda is probably the most convenient way to manage multiple Python versions, packages, and virtual environments. Anaconda comes with a package manager called <code>conda</code> that replaces <code>pip</code> and <code>virtualenv</code>. It allows you to install packages, create virtual environments, and more. It even allows you to set a different Python version for each virtual environment. If you use Anaconda, you want to stick to it as much as possible by exclusively using <code>conda</code> (use <code>pip</code> only when there is no way to install with <code>conda</code>).</p> <p>First, download Anaconda for your system from here. Follow the instructions and reopen your shell (or use the Anaconda GUI system). By default, Anaconda activates <code>base</code> environment. You can install packages by running</p> <pre><code>$ conda install packagename\n</code></pre> <p>Let's install core Python data packages.</p> <pre><code>$ conda install numpy scipy pandas scikit-learn matplotlib seaborn jupyter jupyterlab\n</code></pre> <p>We usually want to use a virtual environment for each of your project. By using virtual environments, you can isolate each environment from the others and maintain separate sets (versions) of packages. <code>conda</code> has a built-in support for virtual environments.</p> <pre><code>$ conda create -n dviz python=3.8\n</code></pre> <p>This command creates a virtual environment named (<code>-n</code>) <code>dviz</code> with Python 3.8. You can activate the environment (whenever you begins to work on this course) by running</p> <pre><code>$ conda activate dviz\n</code></pre> <p>and deactivate (when you're done) by running</p> <pre><code>$ conda deactivate \n</code></pre> <p>For the full documentation, see https://conda.io/docs/user-guide/tasks/manage-environments.html</p> <p>When the environment is activated, your prompt will show the name of the environment. Now if you install a package, it will be installed into this environment, but not in the other virtual environment. In other words, each virtual environment maintains its own \"world\" and totally different packages can be installed in each \"world\".</p> <p>But even if you have created a virtual environment and installed all necessary packages, you can't use this environment in the Jupyter notebook/Lab yet. Jupyter needs a special program called \"IPython kernel\" to execute code. So, for each virtual environment we need to also create a corresponding kernel. We can do manually by using <code>ipykernel</code> package like following:</p> <pre><code>$ conda activate dviz\n$ conda install ipykernel\n$ python -m ipykernel install --user --name=dviz\n</code></pre> <p>or we can use <code>nb_conda</code> package by installing it.</p> <pre><code>$ conda install nb_conda\n</code></pre> <p>Once it's installed, kernels for all virtual environments created by <code>conda</code> are automatically created and show up in Jupyter. So this is a much more convenient option.</p>"},{"location":"m01-intro/lab01/#pip-virtualenv","title":"<code>pip</code> + <code>virtualenv</code>\u00b6","text":"<p>If you are not using Anaconda, you can use Python's <code>virtualenv</code> to create virtual environments and <code>pip</code> to install packages to the virtual environments. See https://docs.python.org/3/tutorial/venv.html For instance, you can run the following to create a virtual environment in the current directory (it will create <code>dviz-env</code> folder).</p> <pre><code>$ python3 -m venv dviz-env\n</code></pre> <p>and then activate and deactivate it by</p> <pre><code>$ source dviz-env/bin/activate\n$ deactivate\n</code></pre> <p>Once you activate a virtual environment, you can install packages into it with <code>pip</code>.</p> <pre><code>$ pip install packagename\n</code></pre> <p>Like the case with <code>conda</code>, we need to install a kernel for each virtual environment to use it in Jupyter.</p> <pre><code>$ source dviz-env/bin/activate\n$ pip install ipykernel\n$ python -m ipykernel install --user --name=dviz\n</code></pre>"},{"location":"m01-intro/lab01/#jupyter","title":"Jupyter\u00b6","text":"<p>Once you have setup your local environment, you can run</p> <pre><code>$ jupyter lab \n</code></pre> <p>or use Jupyter notebook.</p> <pre><code>jupyter notebook\n</code></pre> <p>Jupyter lab is the 'next generation' notebook system with many powerful features. Some packages that we use work more nicely with Jupyter lab (for some lab assignments you may need to use jupyter notebook instead of the lab).</p> <p>Jupyter also has a desktop app: https://github.com/jupyterlab/jupyterlab-desktop</p>"},{"location":"m01-intro/lab01/#vs-code","title":"VS code\u00b6","text":"<p>Visual Studio code is a powerful editor and it supports notebooks and interactivity for Python. If you open a Jupyter notebook file, it works seamlessly within VS code. With the Remote - SSH plugin, you can also maintain almost identical experience using a computing server.</p>"},{"location":"m01-intro/lab01/#cloud-setup","title":"Cloud setup\u00b6","text":"<p>There are many cloud-based Jupyter notebook services. The best option is probably the Google Colaboratory. It allows installation of packages and you can even use GPU/TPUs!</p>"},{"location":"m01-intro/lab01/#google-colaboratory","title":"Google colaboratory\u00b6","text":"<p>Google Colaboratory is Google's collaborative Jupyter notebook service. This is the recommended cloud option. Most packages that we use are already installed and you can install additioanl packages by running</p> <pre><code>!pip install packagename\n</code></pre> <p>in the computing cell.</p>"},{"location":"m01-intro/lab01/#other-options","title":"Other options\u00b6","text":"<ul> <li>Azure notebooks: Microsoft also has a cloud notebook service called Azure notebooks. This service also allows installing new packages through <code>!pip install ...</code>.</li> <li>CoCalc (https://cocalc.com/) is a service by SageMath. You can use it freely but the free version is slow and can be turned off without warning. Most of the packages that we use are pre-installed. We may be able to provide a subscription through the school.</li> <li>Kaggle Kernels: The famous machine learning / data science competition service Kaggle offers cloud-based notebooks called Kaggle kernels. Because you can directly use all the Kaggle datasets, it is an excellent option to do your project if you use one of the Kaggle datasets. It allows uploading your own dataset and install some packages, but not all packages are supported.</li> </ul>"},{"location":"m01-intro/lab01/#assignment","title":"Assignment\u00b6","text":"<p>You can either use a local environment or a cloud environment.</p> <ol> <li>Set up your local Python environment following the instructions. You should be using a virtual environment on your local machine.</li> <li>Install Jupyter notebook and Jupyter lab.</li> <li>Launch jupyter notebook (lab)</li> <li>Create a new notebook and play with it. Print \"Hello world!\".</li> </ol> <p>If you want to use a cloud environment,</p> <ol> <li>Play with the Google colaboratory.</li> <li>Try installing/importing the following packages in the notebook.</li> <li>Create a cell that prints \"Hello world!\".</li> <li>Submit the notebook.</li> </ol> <p>Finally, these are the packages that we plan to use. So check out their homepages and figure out what they are about.</p> <ul> <li>Jupyter Notebook and Lab: https://jupyter.org/</li> <li>numpy: http://www.numpy.org/</li> <li>scipy: http://www.scipy.org/</li> <li>matplotlib: http://matplotlib.org/</li> <li>seaborn: http://seaborn.pydata.org/</li> <li>pandas: http://pandas.pydata.org/</li> <li>scikit-learn: http://scikit-learn.org/stable/</li> <li>altair: https://github.com/altair-viz/altair</li> <li>vega_datasets: https://github.com/altair-viz/vega_datasets</li> <li>bokeh: http://bokeh.pydata.org/en/latest/</li> <li>datashader: http://datashader.org/</li> <li>holoviews: http://holoviews.org/</li> <li>wordcloud: https://github.com/amueller/word_cloud</li> <li>spacy: https://spacy.io/</li> </ul> <p>Install them using your package manager (conda or pip).</p> <p>Once you have installed the Jupyter locally or succeeded with a cloud environment, run the following import cell to make sure that every package is installed successfully. Submit the notebook on the canvas.</p>"},{"location":"m01-intro/lab01supp-python_review/","title":"Module 1: Optional Python review","text":"Run in Google Colab View on Github View raw on Github <p>Are you still new to Python? Or your python skill is a bit rusty?</p> <p>Then, feel free to use this to learn or refresh Python basics! You don't have to submit this notebook. It is just for your own reference.</p> In\u00a0[\u00a0]: Copied! <pre># Declaring an integer and a float variable\nx = 10 \ny = 3.0\nk = x + y + 100\n\n# Comments start with the hash symbol\n# y = 10\n\n# The value stored in the variable can be inspected by using print statement. \n# Type of a variable var can be checked by calling type(var) \nprint(\"The value of x is\", x, \"and it is of type\", type(x))\n\n# f-strings can be used to write more elegant print statement. \nprint(f\"The value of y is {y} and it is of type {type(y)}\")\nprint(f\"The value of k is {k} and it is of type {type(k)}\")\n\n# casting int to float\nprint(f\"x is of type {type(x)}\")\nx = float(x)\nprint(f\"x is of type {type(x)} after casting\")\n</pre> # Declaring an integer and a float variable x = 10  y = 3.0 k = x + y + 100  # Comments start with the hash symbol # y = 10  # The value stored in the variable can be inspected by using print statement.  # Type of a variable var can be checked by calling type(var)  print(\"The value of x is\", x, \"and it is of type\", type(x))  # f-strings can be used to write more elegant print statement.  print(f\"The value of y is {y} and it is of type {type(y)}\") print(f\"The value of k is {k} and it is of type {type(k)}\")  # casting int to float print(f\"x is of type {type(x)}\") x = float(x) print(f\"x is of type {type(x)} after casting\") In\u00a0[\u00a0]: Copied! <pre># Arithmetic operators\n\n# Addition\nz = x + y\nprint(f\"Adding x and y gives {z}\")\n\n# Subtraction\nz = x - y\nprint(f\"Subtracting y from x gives {z}\")\n\n# Multiplication\nz = x * y\nprint(f\"Multiplying x and y gives {z}\")\n\n# Division\nz = x / y \nprint(f\"x divided by y gives {z}\") \n\n# Floor Division\nz = x // y \nprint(f\"x divided by y gives {z} as quotient\") \n\n# Modulus Operator\nz = x % y \nprint(f\"x divided by y gives {z} as reminder\")\n\n# Exponentiation\nz = x ** y\nprint(f\"x raised to y gives {z}\") \n\n# self increment by 1\nx = x + 1\n# This is equivalent to x += 1\nprint(f\"x + 1 gives {x}\")\n</pre> # Arithmetic operators  # Addition z = x + y print(f\"Adding x and y gives {z}\")  # Subtraction z = x - y print(f\"Subtracting y from x gives {z}\")  # Multiplication z = x * y print(f\"Multiplying x and y gives {z}\")  # Division z = x / y  print(f\"x divided by y gives {z}\")   # Floor Division z = x // y  print(f\"x divided by y gives {z} as quotient\")   # Modulus Operator z = x % y  print(f\"x divided by y gives {z} as reminder\")  # Exponentiation z = x ** y print(f\"x raised to y gives {z}\")   # self increment by 1 x = x + 1 # This is equivalent to x += 1 print(f\"x + 1 gives {x}\") In\u00a0[\u00a0]: Copied! <pre># True and False are the key words that represent bool values in python\na = True\nb = False\n\nprint(f\"a is {a} and b is {b}\")\nprint(f\"Type of variable a and b is {type(a)}\")\n\n# None in python represents the absence of something; similar to null value\nc = None \nprint(f\"c is {c} and is of type {type(c)}\")\n\n# Any non-zero integer value is true and zero is false.\n# Also anything with a non-zero length is true and empty sequences are false.\n</pre> # True and False are the key words that represent bool values in python a = True b = False  print(f\"a is {a} and b is {b}\") print(f\"Type of variable a and b is {type(a)}\")  # None in python represents the absence of something; similar to null value c = None  print(f\"c is {c} and is of type {type(c)}\")  # Any non-zero integer value is true and zero is false. # Also anything with a non-zero length is true and empty sequences are false. In\u00a0[\u00a0]: Copied! <pre># logical operators \n\n# and, or and not operate on bool variables\n# OR operator: Gives True when either of the expressions evaluates to True\n# expr1 or expr2\nprint(f\"a or b is {a or b}\")\nprint(f\"a or a is {a or a}\")\nprint(f\"b or b is {b or b}\")\n\n# AND operator: Gives True when both the expressions evaluates to True\n# expr1 and expr2\nprint(f\"a and b is {a and b}\")\nprint(f\"a and a is {a and a}\")\nprint(f\"b and b is {b and b}\")\n\n# NOT operator: negates a bool\n# not expr1\nprint(f\"Not of a is {not a}\")\n</pre> # logical operators   # and, or and not operate on bool variables # OR operator: Gives True when either of the expressions evaluates to True # expr1 or expr2 print(f\"a or b is {a or b}\") print(f\"a or a is {a or a}\") print(f\"b or b is {b or b}\")  # AND operator: Gives True when both the expressions evaluates to True # expr1 and expr2 print(f\"a and b is {a and b}\") print(f\"a and a is {a and a}\") print(f\"b and b is {b and b}\")  # NOT operator: negates a bool # not expr1 print(f\"Not of a is {not a}\") In\u00a0[\u00a0]: Copied! <pre># comparison operators\n\nx = 10\ny = 3.0\nz = 5\n\n# greater that, less than, greater than equal to and lesser than equal to\nx &gt; y\nx &gt;= y\nx &lt; y\nx &lt;= y\n\n# equals and not equals\nx == y\nx != y\n\n# Chained Expressions \nx &gt; y &gt; z \n(x &gt; y) or (x &gt; z)\n</pre> # comparison operators  x = 10 y = 3.0 z = 5  # greater that, less than, greater than equal to and lesser than equal to x &gt; y x &gt;= y x &lt; y x &lt;= y  # equals and not equals x == y x != y  # Chained Expressions  x &gt; y &gt; z  (x &gt; y) or (x &gt; z) In\u00a0[\u00a0]: Copied! <pre># strings are represented using single or double quotes\nfirst_name = \"Adam\" \nlast_name = 'Eve'\n\n# \\ is used to escape characters\nmiddle_name = 'zero\\'s'\n\n# string concatenation\nfull_name = first_name +' ' + middle_name + ' ' + last_name\n\nprint(f\"Full name is {full_name}\")\nprint(f\"Full name is of type {type(full_name)}\")\n\n# strings can be indexed and sliced similar to lists and tuples. \n# List indexing is discussed in the list section\n</pre> # strings are represented using single or double quotes first_name = \"Adam\"  last_name = 'Eve'  # \\ is used to escape characters middle_name = 'zero\\'s'  # string concatenation full_name = first_name +' ' + middle_name + ' ' + last_name  print(f\"Full name is {full_name}\") print(f\"Full name is of type {type(full_name)}\")  # strings can be indexed and sliced similar to lists and tuples.  # List indexing is discussed in the list section In\u00a0[\u00a0]: Copied! <pre># casting str to int  \ntotal = int('1') + int('2')\nprint(f\"The value of total is {total} and it is of type {type(total)}\")\n\n# casting int to str\n     \ntotal = str(1) + str(2)\nprint(f\"The value of total is {total} and it is of type {type(total)}\")\n</pre> # casting str to int   total = int('1') + int('2') print(f\"The value of total is {total} and it is of type {type(total)}\")  # casting int to str       total = str(1) + str(2) print(f\"The value of total is {total} and it is of type {type(total)}\") In\u00a0[\u00a0]: Copied! <pre># Arrays are implemented as lists in python\n\n# creating empty list\nnames = []\nnames = list()\n\n# list of strings\nnames = ['Zach', 'Jay']\nprint(names)\n\n# list of intergers\nnums = [1, 2, 3, 4, 5]\nprint(nums)\n\n# list of different data types\nl = ['Zach', 1, True, None]\nprint(l)\n\n# list of lists\nll = [[1, 3], [2, 3], [3, 4]]\n\n# finding the length of list\nlength = len(l)\nprint(length)\n</pre> # Arrays are implemented as lists in python  # creating empty list names = [] names = list()  # list of strings names = ['Zach', 'Jay'] print(names)  # list of intergers nums = [1, 2, 3, 4, 5] print(nums)  # list of different data types l = ['Zach', 1, True, None] print(l)  # list of lists ll = [[1, 3], [2, 3], [3, 4]]  # finding the length of list length = len(l) print(length) In\u00a0[\u00a0]: Copied! <pre># Lists are mutable\n\nnames = names + ['Ravi']\nnames.append('Richard')\nnames.extend(['Abi', 'Kevin'])\nprint(names)\n</pre> # Lists are mutable  names = names + ['Ravi'] names.append('Richard') names.extend(['Abi', 'Kevin']) print(names) In\u00a0[\u00a0]: Copied! <pre># List indexing and slicing\n# an element or a subset of list can be accessed using element's index or slice of indices\n# same notation applies for strings but at char level\n\n# some_list[index]\n# some_list[start_index: end_index(not included)]\n\nnumbers = [0, 1, 2, 3, 4, 5, 6]\n\n# indices start from 0 in python\nprint(f'The first element in numbers is {numbers[0]}')\nprint(f'The third element in numbers is {numbers[2]}')\n\nprint(f'Elements from 1st to 5th index are {numbers[1:6]}')\nprint(f'Elements from start to 5th index are {numbers[:6]}')\nprint(f'Elements from 4th index to end are {numbers[4:]}')\n\nprint(f'Last Element is {numbers[-1]}')\nprint(f'Last four element are {numbers[-4:]}')\n\n# changing 1st element in the numbers list\nnumbers[0] = 100\nprint(numbers)\n\n# changing first 3 numbers\nnumbers[0: 3] = [100, 200, 300]\nprint(numbers)\n</pre> # List indexing and slicing # an element or a subset of list can be accessed using element's index or slice of indices # same notation applies for strings but at char level  # some_list[index] # some_list[start_index: end_index(not included)]  numbers = [0, 1, 2, 3, 4, 5, 6]  # indices start from 0 in python print(f'The first element in numbers is {numbers[0]}') print(f'The third element in numbers is {numbers[2]}')  print(f'Elements from 1st to 5th index are {numbers[1:6]}') print(f'Elements from start to 5th index are {numbers[:6]}') print(f'Elements from 4th index to end are {numbers[4:]}')  print(f'Last Element is {numbers[-1]}') print(f'Last four element are {numbers[-4:]}')  # changing 1st element in the numbers list numbers[0] = 100 print(numbers)  # changing first 3 numbers numbers[0: 3] = [100, 200, 300] print(numbers) In\u00a0[\u00a0]: Copied! <pre># Tuples are immutable lists. They are created using () instead of [].\n\nnames = tuple()\nnames = ('Zach', 'Jay') \nprint(names[0])\n\n# trying to alter the tuple gives an error\nnames[0] = 'Richard'\n\n# similar to tuples, strings are also immutable\n</pre> # Tuples are immutable lists. They are created using () instead of [].  names = tuple() names = ('Zach', 'Jay')  print(names[0])  # trying to alter the tuple gives an error names[0] = 'Richard'  # similar to tuples, strings are also immutable In\u00a0[\u00a0]: Copied! <pre># hash maps in python are called Dictionaries\n# dict{key: value}\n\n# Empty dictionary\nphonebook = dict()\n\n# contruction dict using sequences of key-value pairs\ndict([('sape', 4139), ('guido', 4127), ('jack', 4098)])\n\n# Dictionary with one item\nphonebook = {'jack': 4098}\n\n# Add another item\nphonebook['guido'] = 4127\n\nprint(phonebook)\nprint(phonebook['jack'])\nprint(phonebook.items())\nprint(phonebook.keys())\nprint(phonebook.values())\n\nprint('jack' in phonebook)\nprint('Kevin' in phonebook)\n\n# Delete an item\ndel phonebook['jack'] \nprint(phonebook)\n</pre> # hash maps in python are called Dictionaries # dict{key: value}  # Empty dictionary phonebook = dict()  # contruction dict using sequences of key-value pairs dict([('sape', 4139), ('guido', 4127), ('jack', 4098)])  # Dictionary with one item phonebook = {'jack': 4098}  # Add another item phonebook['guido'] = 4127  print(phonebook) print(phonebook['jack']) print(phonebook.items()) print(phonebook.keys()) print(phonebook.values())  print('jack' in phonebook) print('Kevin' in phonebook)  # Delete an item del phonebook['jack']  print(phonebook) In\u00a0[\u00a0]: Copied! <pre># if expr1:\n#     code1\n# elif expr2:\n#     code2\n#   .\n#   .\n#   .\n#   .\n# else:\n#     code_n\n\n# code1 is executed if expr1 is evaluated to true. Else it moves to expr2 and checks for true \n# condition and moves to the next if not true. \n# Finally if all the excpression's are false, code_n is executed\n\nx = int(input(\"Please enter an integer: \"))\n\nif x &lt; 0:\n    x = 0\n    print('Negative changed to zero')\nelif x == 0:\n    print('Zero')\nelif x == 1:\n    print('Single')\nelse:\n    print('More')\n</pre> # if expr1: #     code1 # elif expr2: #     code2 #   . #   . #   . #   . # else: #     code_n  # code1 is executed if expr1 is evaluated to true. Else it moves to expr2 and checks for true  # condition and moves to the next if not true.  # Finally if all the excpression's are false, code_n is executed  x = int(input(\"Please enter an integer: \"))  if x &lt; 0:     x = 0     print('Negative changed to zero') elif x == 0:     print('Zero') elif x == 1:     print('Single') else:     print('More') In\u00a0[\u00a0]: Copied! <pre># for loop is used to iter over any iterable object\n\n# iterating over list\nfor name in ['Steve', 'Jill', 'Venus']:\n    print(name)\n</pre> # for loop is used to iter over any iterable object  # iterating over list for name in ['Steve', 'Jill', 'Venus']:     print(name) In\u00a0[\u00a0]: Copied! <pre># iterating over string\nfor char in \"Hellooooo\":\n    print(char)\n</pre> # iterating over string for char in \"Hellooooo\":     print(char) In\u00a0[\u00a0]: Copied! <pre># iterating over dict keys\nphone_nos = {\"Henry\": 6091237458,\n             \"James\": 1234556789, \n             \"Larry\": 5698327549, \n             \"Rocky\": 8593876589}\nfor name, no in phone_nos.items():\n    print(name, no)\n</pre> # iterating over dict keys phone_nos = {\"Henry\": 6091237458,              \"James\": 1234556789,               \"Larry\": 5698327549,               \"Rocky\": 8593876589} for name, no in phone_nos.items():     print(name, no) In\u00a0[\u00a0]: Copied! <pre># To iterate over a sequence of numbers we use range() function. \n# range(start=0, end, step=1)\nfor i in range(2, 20, 2):\n    print(i)\n</pre> # To iterate over a sequence of numbers we use range() function.  # range(start=0, end, step=1) for i in range(2, 20, 2):     print(i) In\u00a0[\u00a0]: Copied! <pre># using len of list/tuple in range\nnames = ['Steve', 'Rock', 'Harry']\nfor i in range(len(names)):\n    print(names[i])\n</pre> # using len of list/tuple in range names = ['Steve', 'Rock', 'Harry'] for i in range(len(names)):     print(names[i]) In\u00a0[\u00a0]: Copied! <pre># While loop executes as long as the condition remains true.\n# while cond1:\n#     pass\n\ni = 0\nwhile i &lt; 10:\n    print(i)\n    i += 1\n</pre> # While loop executes as long as the condition remains true. # while cond1: #     pass  i = 0 while i &lt; 10:     print(i)     i += 1 In\u00a0[\u00a0]: Copied! <pre># Forever loop: The below code runs for ever\n\n# while True:\n#     print('Forever...')\n</pre> # Forever loop: The below code runs for ever  # while True: #     print('Forever...') In\u00a0[\u00a0]: Copied! <pre># break statement breaks out of the the loop\nwhile True:\n    print('We\u2019re stuck in a loop...')\n    break # Break out of the while loop\nprint(\"not!\")\n</pre> # break statement breaks out of the the loop while True:     print('We\u2019re stuck in a loop...')     break # Break out of the while loop print(\"not!\") In\u00a0[\u00a0]: Copied! <pre># continue statement skips a loop\nfor i in range(5):\n    continue \n    print(i)\n</pre> # continue statement skips a loop for i in range(5):     continue      print(i) In\u00a0[\u00a0]: Copied! <pre># pass statement does nothing and is used as a placeholder\nfor i in range(10):\n    pass\n</pre> # pass statement does nothing and is used as a placeholder for i in range(10):     pass In\u00a0[\u00a0]: Copied! <pre># importing modules using import statement\nimport math\n\n# Import under an alias (avoid this pattern except with the most \n# common modules like pandas, numpy, etc.)\nimport math as m\n\n# Access components with pkg.fn\nm.pow(2, 3) \n\n# Import specific submodules/functions (not usually recommended \n# because it can be confusing to know where a function comes from)\nfrom math import pow\npow(2, 3)\n</pre> # importing modules using import statement import math  # Import under an alias (avoid this pattern except with the most  # common modules like pandas, numpy, etc.) import math as m  # Access components with pkg.fn m.pow(2, 3)   # Import specific submodules/functions (not usually recommended  # because it can be confusing to know where a function comes from) from math import pow pow(2, 3) In\u00a0[\u00a0]: Copied! <pre># Functions in python are defined using key word \"def\"\n\n# simple function to print greetings `greet_word` is an optional argument.\ndef greet(name, greet_word='Hello'):\n    print(f\"{greet_word} {name}. How are you doing?\")\n\n# here greet has 'Hello' as default argument for greet_word\nprint(greet('James'))\nprint(greet(\"Steven\", greet_word=\"Howdy\"))\n\n# Observe that the function by default returns None\n</pre> # Functions in python are defined using key word \"def\"  # simple function to print greetings `greet_word` is an optional argument. def greet(name, greet_word='Hello'):     print(f\"{greet_word} {name}. How are you doing?\")  # here greet has 'Hello' as default argument for greet_word print(greet('James')) print(greet(\"Steven\", greet_word=\"Howdy\"))  # Observe that the function by default returns None In\u00a0[\u00a0]: Copied! <pre># Function to print nth fibonacci number\ndef fib(n):\n    if n &lt;= 1:\n        return 1\n    else:\n        return fib(n-1)+fib(n-2)\nn = 10\nprint(f\"{n}th fibonacci number is {fib(n)}\")\n</pre> # Function to print nth fibonacci number def fib(n):     if n &lt;= 1:         return 1     else:         return fib(n-1)+fib(n-2) n = 10 print(f\"{n}th fibonacci number is {fib(n)}\") In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[\u00a0]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE"},{"location":"m01-intro/lab01supp-python_review/#module-1-optional-python-review","title":"Module 1: Optional Python review\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#1-built-in-object-types","title":"1. Built-in object types\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#11-int-and-float","title":"1.1 Int and Float\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#12-booleans-and-none","title":"1.2 Booleans and None\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#13-strings","title":"1.3 Strings\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#14-lists-and-tuples","title":"1.4 Lists and Tuples\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#15-dictionary","title":"1.5 Dictionary\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#2-flow-control-statements","title":"2. Flow control statements\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#21-if-elif-else","title":"2.1 if... elif... else...\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#3-loops","title":"3. Loops\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#31-for-loops","title":"3.1 For loops\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#32-while-loop","title":"3.2 While Loop\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#33-break-continue-and-pass-statements","title":"3.3 Break, Continue and Pass statements\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#4-importing-modules","title":"4. Importing Modules\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#5-defining-functions","title":"5. Defining Functions\u00b6","text":""},{"location":"m01-intro/lab01supp-python_review/#questions","title":"Questions\u00b6","text":"<p>For each of the following question, first think about the result without running the code. Then test it by running the code. Reach out if you don't understand why!</p>"},{"location":"m01-intro/lab01supp-python_review/#whats-the-output","title":"What's the output?\u00b6","text":"<pre><code>def func(a):\n    a = a + 2\n    a = a * 2\n    return a\n \nprint(func(2))\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#true-false-why","title":"True? False? Why?\u00b6","text":"<pre><code>0.1 + 0.2 == 0.3\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#3-what-is-list_1-and-list_2-and-why","title":"3. What is <code>list_1</code> and <code>list_2</code> and why?\u00b6","text":"<pre><code>list_1 = [1,2,3]\nlist_2 = list_1\nlist_1.append(4)\nlist_2 += [5]\nlist_2 = list_2 + [10]\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#whats-the-output","title":"What's the output?\u00b6","text":"<pre><code>l = [i**2 for i in range(10)]\nl[-4:2:-3]\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#what-does-the-code-do-if-the-ordering-doesnt-matter-how-can-it-be-simplified","title":"What does the code do? If the ordering doesn't matter, how can it be simplified?\u00b6","text":"<pre><code>def func1(lst):\n    a = []\n    for i in lst:\n        if i not in a:\n            a.append(i)\n    return a\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#what-would-be-the-output","title":"What would be the output?\u00b6","text":"<pre><code>val = [0, 10, 15, 20]\ndata = 15\ntry:\n    data = data/val[0]\nexcept ZeroDivisionError:\n    print(\"zero division error - 1\")\nexcept:\n    print(\"zero division error - 2\")\nfinally:\n    print(\"zero division error - 3\")\n\nval = [0, 10, 15, 20]\ndata = 15\ntry:\n    data = data/val[4]\nexcept ZeroDivisionError:\n    print(\"zero division error - 1\")\nexcept:\n    print(\"zero division error - 2\")\nfinally:\n    print(\"zero division error - 3\")\n\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#what-does-the-code-do","title":"What does the code do?\u00b6","text":"<pre><code>def func(s):\n    d = {}\n    for c in s:\n        if c in d:\n            d[n] += 1\n        else:\n            d[n] = 1\n    return d\n</code></pre> <p>(Btw, the same operation can be done by simply running <code>Counter(s)</code> by using <code>Counter</code> data structure in the <code>collections</code> module.)</p>"},{"location":"m01-intro/lab01supp-python_review/#whats-the-output","title":"What's the output?\u00b6","text":"<pre><code>def func(l):\n    l.append(10)\n    return l\n\na = [1,2,3]\nb = func(a)\na == b\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#whats-happening-to-a-in-each-step-why","title":"What's happening to <code>a</code> in each step? Why?\u00b6","text":"<pre><code># step 1\na = [ [ ] ] * 5\n# step 2\na[0].append(10)\n# step 3\na[1].append(20)\n# step 4\na.append(30)\n\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#whats-the-output","title":"What's the output?\u00b6","text":"<pre><code>L = list('abcdefghijk')\nL[1] = L[4] = 'x'\nL[3] = L[-3]\nprint(L)\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#whats-the-output","title":"What's the output?\u00b6","text":"<pre><code>y = 8\nz = lambda x : x * y\nprint (z(6))\n</code></pre>"},{"location":"m01-intro/lab01supp-python_review/#whats-the-output","title":"What's the output?\u00b6","text":"<pre><code>count = 1 \n\ndef func(count):\n    for i in (1, 2, 3): \n        count += 1\nfunc(count = 10)\ncount += 5\nprint(count)\n</code></pre>"},{"location":"m02-history/class/","title":"History of visualization","text":""},{"location":"m02-history/class/#further-reading","title":"Further reading","text":"<ul> <li>E. R. Tufte, Visual Display of Quantitative Information, Ch. 1 and 2. </li> <li>M. Friendly, A brief history of data visualization, Handbook of Computational Statistics: Data Visualization</li> </ul>"},{"location":"m02-history/lab02/","title":"Module 2: John Snow's map","text":"Run in Google Colab View on Github View raw on Github <p>Jupyter notebook (lab) and Pandas may be the two most important libraries responsible for the <code>Python</code>'s rise in data science. <code>Jupyter</code> lets you interactively explore datasets and code; <code>Pandas</code> lets you handle tabular datasets with superb speed and convenience. And they work so well together! In many cases, <code>Jupyter</code> and <code>Pandas</code> are all you need to load, clean, transform, visualize, and understand a dataset.</p> <p>If you are not familiar with <code>Pandas</code>, you may want to follow their official tutorial called 10 Minutes to pandas now or in the near future.</p> In\u00a0[1]: Copied! <pre>import pandas as pd\n</pre> import pandas as pd <p>You can check the version of the library. Because pandas is fast-evolving library, you want to make sure that you have the up-to-date version of the library.</p> In\u00a0[3]: Copied! <pre>pd.__version__\n</pre> pd.__version__ Out[3]: <pre>'2.1.1'</pre> <p>You also need <code>matplotlib</code>, which is used by <code>pandas</code> to plot figures. The following is the most common convention to import <code>matplotlib</code> library.</p> In\u00a0[4]: Copied! <pre>import matplotlib.pyplot as plt\n</pre> import matplotlib.pyplot as plt <p>Let's check its version too.</p> In\u00a0[5]: Copied! <pre>import matplotlib\nmatplotlib.__version__\n</pre> import matplotlib matplotlib.__version__ Out[5]: <pre>'3.8.0'</pre> In\u00a0[6]: Copied! <pre>pump_df = pd.read_csv('https://raw.githubusercontent.com/yy/dviz-course/master/data/pumps.csv')\n</pre> pump_df = pd.read_csv('https://raw.githubusercontent.com/yy/dviz-course/master/data/pumps.csv') <p><code>df</code> stands for \"Data Frame\", which is a fundamental data object in Pandas. You can take a look at the dataset by looking at the first few lines.</p> In\u00a0[7]: Copied! <pre>pump_df.head()\n</pre> pump_df.head()  Out[7]: X Y 0 8.651201 17.891600 1 10.984780 18.517851 2 13.378190 17.394541 3 14.879830 17.809919 4 8.694768 14.905470 <p>Q1: can you print only the first three lines? Refer: http://pandas.pydata.org/pandas-docs/stable/index.html</p> In\u00a0[8]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[8]: X Y 0 8.651201 17.891600 1 10.984780 18.517851 2 13.378190 17.394541 <p>You can also sample several rows randomly. If the data is sorted in some ways, sampling may give you a rather unbiased view of the dataset.</p> In\u00a0[9]: Copied! <pre>pump_df.sample(5)\n</pre> pump_df.sample(5) Out[9]: X Y 12 8.999440 5.101023 2 13.378190 17.394541 7 10.660970 7.428647 10 18.914391 9.737819 0 8.651201 17.891600 <p>You can also figure out the number of rows in the dataset by running</p> In\u00a0[10]: Copied! <pre>len(pump_df)\n</pre> len(pump_df) Out[10]: <pre>13</pre> <p>Note that <code>df.size</code> does not give you the number of rows. It tells you the number of elements.</p> In\u00a0[11]: Copied! <pre>pump_df.size\n</pre> pump_df.size Out[11]: <pre>26</pre> <p>You can also look into the shape of the dataset as well as what are the columns in the dataset.</p> In\u00a0[12]: Copied! <pre>pump_df.shape  # 13 rows and 2 columns\n</pre> pump_df.shape  # 13 rows and 2 columns Out[12]: <pre>(13, 2)</pre> In\u00a0[13]: Copied! <pre>pump_df.columns\n</pre> pump_df.columns Out[13]: <pre>Index(['X', 'Y'], dtype='object')</pre> <p>You can also check out basic descriptive statistics of the whole dataset by using <code>describe()</code> method.</p> In\u00a0[14]: Copied! <pre>pump_df.describe()\n</pre> pump_df.describe() Out[14]: X Y count 13.000000 13.000000 mean 12.504677 11.963446 std 3.376869 4.957821 min 8.651201 5.046838 25% 8.999440 7.958250 50% 12.571360 11.727170 75% 14.879830 17.394541 max 18.914391 18.517851 <p>You can slice the data like a list</p> In\u00a0[15]: Copied! <pre>pump_df[:2]\n</pre> pump_df[:2] Out[15]: X Y 0 8.651201 17.891600 1 10.984780 18.517851 In\u00a0[16]: Copied! <pre>pump_df[-2:]\n</pre> pump_df[-2:] Out[16]: X Y 11 16.00511 5.046838 12 8.99944 5.101023 In\u00a0[17]: Copied! <pre>pump_df[1:5]\n</pre> pump_df[1:5] Out[17]: X Y 1 10.984780 18.517851 2 13.378190 17.394541 3 14.879830 17.809919 4 8.694768 14.905470 <p>or filter rows using some conditions.</p> In\u00a0[18]: Copied! <pre>pump_df[pump_df.X &gt; 13]\n</pre> pump_df[pump_df.X &gt; 13] Out[18]: X Y 2 13.378190 17.394541 3 14.879830 17.809919 8 13.521460 7.958250 9 16.434891 9.252130 10 18.914391 9.737819 11 16.005110 5.046838 <p>Now let's load another CSV file that documents the cholera deaths. The URL is https://raw.githubusercontent.com/yy/dviz-course/master/data/deaths.csv</p> <p>Q2: load the death dataset and inspect it</p> <ol> <li>load this dataset as <code>death_df</code>.</li> <li>show the first 2 rows.</li> <li>show the total number of rows.</li> </ol> In\u00a0[19]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[20]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[20]: X Y 0 13.588010 11.09560 1 9.878124 12.55918 In\u00a0[21]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[21]: <pre>578</pre> In\u00a0[22]: Copied! <pre>death_df.plot()\n</pre> death_df.plot() Out[22]: <pre>&lt;Axes: &gt;</pre> <p>This is not what we want! When asked to plot the data, it tries to figure out what we want based on the type of the data. However, that doesn't mean that it will successfully do so!</p> <p>Oh by the way, depending on your environment, you may not see any plot. If you don't see anything run the following command.</p> In\u00a0[23]: Copied! <pre>%matplotlib inline\n</pre> %matplotlib inline <p>The commands that start with <code>%</code> is called the magic commands, which are available in IPython and Jupyter. The purpose of this command is telling the IPython / Jupyter to show the plot right here instead of trying to use other external viewers.</p> <p>Anyway, this doesn't seem like the plot we want. Instead of putting each row as a point in a 2D plane by using the X and Y as the coordinate, it just created a line chart. Let's fix it. Please take a look at the plot method documentation. How should we change the command? Which <code>kind</code> of plot do we want to draw?</p> <p>Yes, we want to draw a scatter plot using x and y as the Cartesian coordinates.</p> In\u00a0[24]: Copied! <pre>death_df.plot(x='X', y='Y', kind='scatter', label='Deaths')\n</pre> death_df.plot(x='X', y='Y', kind='scatter', label='Deaths') Out[24]: <pre>&lt;Axes: xlabel='X', ylabel='Y'&gt;</pre> <p>I think I want to reduce the size of the dots and change the color to black. But it is difficult to find how to do that! It is sometimes quite annoying to figure out how to change how the visualization looks, especially when we use <code>matplotlib</code>. Unlike some other advanced tools, <code>matplotlib</code> does not provide a very coherent way to adjust your visualizations. That's one of the reasons why there are lots of visualization libraries that wrap <code>matplotlib</code>. Anyway, this is how you do it.</p> In\u00a0[25]: Copied! <pre>death_df.plot(x='X', y='Y', kind='scatter', label='Deaths', s=2, c='black')\n</pre> death_df.plot(x='X', y='Y', kind='scatter', label='Deaths', s=2, c='black') Out[25]: <pre>&lt;Axes: xlabel='X', ylabel='Y'&gt;</pre> <p>Can we visualize both deaths and pumps?</p> In\u00a0[26]: Copied! <pre>death_df.plot(x='X', y='Y', s=2, c='black', kind='scatter', label='Deaths')\npump_df.plot(x='X', y='Y', kind='scatter', c='red', s=8, label='Pumps')\n</pre> death_df.plot(x='X', y='Y', s=2, c='black', kind='scatter', label='Deaths') pump_df.plot(x='X', y='Y', kind='scatter', c='red', s=8, label='Pumps') Out[26]: <pre>&lt;Axes: xlabel='X', ylabel='Y'&gt;</pre> <p>Oh well, this is not what we want! We want to overlay them to see them together, right? How can we do that? Before going into that, we probably want to understand some key components of matplotlib figures.</p> In\u00a0[27]: Copied! <pre>ax = death_df.plot(x='X', y='Y', s=2, c='black', kind='scatter', label='Deaths')\n</pre> ax = death_df.plot(x='X', y='Y', s=2, c='black', kind='scatter', label='Deaths') In\u00a0[28]: Copied! <pre>ax\n</pre> ax Out[28]: <pre>&lt;Axes: xlabel='X', ylabel='Y'&gt;</pre> <p>This object contains all the information and objects in the plot we see. Whatever we want to do with this axes (e.g., changing x or y scale, overlaying other data, changing the color or size of symbols, etc.) can be done by accessing this object.</p> <p>Then you can pass this axes object to another plot to put both plots in the same axes. Note <code>ax=ax</code> in the second plot command. It tells the plot command where to draw the points.</p> In\u00a0[29]: Copied! <pre>ax = death_df.plot(x='X', y='Y', s=2, c='black', alpha=0.5, kind='scatter', label='Deaths')\npump_df.plot(x='X', y='Y', kind='scatter', c='red', s=8, label='Pumps', ax=ax)\n</pre> ax = death_df.plot(x='X', y='Y', s=2, c='black', alpha=0.5, kind='scatter', label='Deaths') pump_df.plot(x='X', y='Y', kind='scatter', c='red', s=8, label='Pumps', ax=ax) Out[29]: <pre>&lt;Axes: xlabel='X', ylabel='Y'&gt;</pre> <p>Although simply invoking the <code>plot()</code> command is quick and easy when doing an exploratory data analysis, it is usually better to be formal about figure and axes objects.</p> <p>Here is the recommended way to create a plot. Call the <code>subplots()</code> method (see https://matplotlib.org/3.2.1/api/_as_gen/matplotlib.pyplot.subplots.html) to get the figure and axes objects explicitly.</p> <p>As you can see below, <code>subplots()</code> creates an empty figure and returns the figure and axes object to you. Then you can fill this empty canvas with your plots. Whatever manipulation you want to make about your figure (e.g., changing the size of the figure) or axes (e.g., drawing a new plot on it) can be done with <code>fig</code> and <code>ax</code> objects. So whenever possible, use this method!</p> <p>Now, can you use this method to produce the same plot just above?</p> In\u00a0[30]: Copied! <pre>import matplotlib.pyplot as plt\nfig, ax = plt.subplots()\n\n# YOUR SOLUTION HERE\n</pre> import matplotlib.pyplot as plt fig, ax = plt.subplots()  # YOUR SOLUTION HERE Out[30]: <pre>&lt;Axes: xlabel='X', ylabel='Y'&gt;</pre> In\u00a0[31]: Copied! <pre>from scipy.spatial import Voronoi, voronoi_plot_2d\n</pre> from scipy.spatial import Voronoi, voronoi_plot_2d <p>Take a look at the documentation of Voronoi and voronoi_plot_2d and</p> <p>Q3: produce a Voronoi diagram that shows the deaths, pumps, and voronoi cells</p> In\u00a0[32]: Copied! <pre># you'll need this\npoints = pump_df.values\npoints\n</pre> # you'll need this points = pump_df.values points Out[32]: <pre>array([[ 8.6512012, 17.8915997],\n       [10.9847803, 18.5178509],\n       [13.37819  , 17.3945408],\n       [14.8798304, 17.8099194],\n       [ 8.694768 , 14.9054699],\n       [ 8.8644161, 12.75354  ],\n       [12.5713596, 11.72717  ],\n       [10.6609697,  7.428647 ],\n       [13.5214596,  7.95825  ],\n       [16.4348907,  9.2521296],\n       [18.9143906,  9.7378187],\n       [16.0051098,  5.0468378],\n       [ 8.9994402,  5.1010232]])</pre> In\u00a0[33]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[34]: Copied! <pre>import matplotlib.pyplot as plt\nplt.plot([1,2,3], [4,2,3])\nplt.savefig('foo.png')\n</pre> import matplotlib.pyplot as plt plt.plot([1,2,3], [4,2,3]) plt.savefig('foo.png') <p>Q4: Save your Voronoi diagram. Make sure that your plot contains the scatterplot of deaths &amp; pumps as well as the Voronoi cells</p> In\u00a0[35]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>Ok, that was a brief introduction to <code>pandas</code> and some simple visualizations. Now let's talk about web a little bit.</p> <p>Q5: Create a simple HTML page that displays the Voronoi diagram that you saved. Feel free to add more plots, explanations, and any styles. Make sure to check you can run the Python webserver and open the HTML file that you created.</p> <p>Btw, you can also export Jupyter notebook into various formats. Click <code>File -&gt; Export Notebook As</code> and play with it.</p> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"m02-history/lab02/#module-2-john-snows-map","title":"Module 2: John Snow's map\u00b6","text":"<p>Follow the contents of this notebook and answer all questions (e.g. Q1: ...)</p>"},{"location":"m02-history/lab02/#jupyter-pandas-awesomeness","title":"Jupyter + Pandas = Awesomeness\u00b6","text":""},{"location":"m02-history/lab02/#importing-pandas","title":"Importing pandas\u00b6","text":"<p>The convention for importing <code>pandas</code> is the following</p>"},{"location":"m02-history/lab02/#loading-a-csv-data-file","title":"Loading a CSV data file\u00b6","text":"<p>Using pandas, you can read tabular data files in many formats and through many protocols. Pandas supports not only flat files such as <code>.csv</code>, but also various other formats including clipboard, Excel, JSON, HTML, Feather, Parquet, SQL, Google BigQuery, and so on. Moreover, you can pass a local file path or a URL. If it's on Amazon S3, just pass a url like <code>s3://path/to/file.csv</code>. If it's on a webpage, then just use <code>https://some/url.csv</code>.</p> <p>Let's load a dataset about the location of pumps in the John Snow's map. You can download the file to your computer and try to load it using the local path too.</p>"},{"location":"m02-history/lab02/#some-visualizations","title":"Some visualizations?\u00b6","text":"<p>Let's visualize them! Pandas actually provides a nice visualization interface that uses matplotlib under the hood. You can do many basic plots without learning <code>matplotlib</code>. So let's try.</p>"},{"location":"m02-history/lab02/#figure-and-axes","title":"Figure and Axes\u00b6","text":"<p>Why do we have two separate plots? The reason is that, by default, the <code>plot</code> method creates a new \\emph{figure} instead of putting them inside a single figure. In order to avoid it, we need to either create an Axes and tell <code>plot</code> to use that axes. What is an <code>axes</code>? See this illustration.</p> <p></p> <p>A figure can contain multiple axes (link). The figure below contains two axes:</p> <p></p> <p>and an axes can contain multiple plots (link).</p> <p></p> <p>Conveniently, when you call <code>plot</code> method, it creates an axes and returns it to you</p>"},{"location":"m02-history/lab02/#voronoi-diagram","title":"Voronoi diagram\u00b6","text":"<p>Let's try the Voronoi diagram. You can use the <code>scipy.spatial.Voronoi</code> and <code>scipy.spatial.voronoi_plot_2d</code> from <code>scipy</code>, the scientific python library.</p>"},{"location":"m02-history/lab02/#saving-the-figure","title":"Saving the figure\u00b6","text":"<p>You can also save your figure into PDF, PNG, etc. If you run the following, the plot will not only be displayed here, but also be saved as <code>foo.png</code>.</p>"},{"location":"m02-history/lab02/#html-css-basics","title":"HTML &amp; CSS Basics\u00b6","text":""},{"location":"m02-history/lab02/#html-review","title":"HTML review\u00b6","text":"<p>Webpages are written in a standard markup language called HTML (HyperText Markup Language). The basic syntax of HTML consists of elements enclosed within <code>&lt;</code> and <code>&gt;</code> symbols. Markup tags often come in a pair, the opening tag without <code>/</code> and the closing tag with <code>/</code>. For instance, when we assign the title of the webpage, we write <code>&lt;title&gt;This is the title of the page&lt;/title&gt;</code>. You can find tutorials and references from many websites, including W3Schools. Here is an example of a simple HTML document (from w3schools homepage):</p> <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;title&gt;HTML Tutorial&lt;/title&gt;\n&lt;body&gt;\n\n&lt;h1&gt;This is a heading&lt;/h1&gt;\n&lt;p&gt;This is a paragraph.&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</pre> <p>Here is a list of important tags and their descriptions.</p> <ul> <li><p><code>&lt;html&gt;</code> - Surrounds the entire document.</p> </li> <li><p><code>&lt;head&gt;</code> - Contains information about the document. E.g. the title, metadata, scripts to load, stylesheets, etc.</p> </li> <li><p><code>&lt;title&gt;</code> - Assigns title to the page. This is what you see in the tab and what you have when the page is bookmarked.</p> </li> <li><p><code>&lt;body&gt;</code> - The main part of the document.</p> </li> <li><p><code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, ... - Headings (Smaller the number, larger the size).</p> </li> <li><p><code>&lt;p&gt;</code> - Paragraph. e.g., <code>&lt;p&gt;Here is a paragraph&lt;/p&gt;</code></p> </li> <li><p><code>&lt;br&gt;</code> - Line break.</p> </li> <li><p><code>&lt;em&gt;</code> - emphasize text.</p> </li> <li><p><code>&lt;strong&gt;</code> - Bold font.</p> </li> <li><p><code>&lt;a&gt;</code> - Defines a hyperlink and allows you to link out to the other webpages. See examples</p> </li> <li><p><code>&lt;img&gt;</code> - Place an image. See examples</p> </li> <li><p><code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code>, <code>&lt;li&gt;</code> - Unordered lists with bullets, ordered lists with numbers and each item in list respectively. See examples</p> </li> <li><p><code>&lt;table&gt;</code> - Make a table, specifying contents of each cell. See examples</p> </li> <li><p><code>&lt;!--&gt;</code> - Comments \u2013 will not be displayed.</p> </li> <li><p><code>&lt;span&gt;</code> - This will mark a certain part of text but will not necessarily change how they look. CSS or Javascript can access them and change how they look or behave.</p> </li> <li><p><code>&lt;div&gt;</code> - Similar to <code>&lt;span&gt;</code>, but used for a block that contains many elements.</p> </li> </ul>"},{"location":"m02-history/lab02/#css-review","title":"CSS review\u00b6","text":"<p>While HTML specifies the content and structure, it does not say how they should look.</p> <p>CSS (Cascading Style Sheets) is the primary language that is used for the look and formatting of a web document. In the context of creating visualization, CSS becomes critical when you create web-based (Javascript-based) visualizations.</p> <p>A CSS stylesheet consists of one or more selectors, properties and values. For example:</p> <pre>body {   \n    background-color: white;   \n    color: steelblue;   \n}\n</pre> <p>Selectors are the HTML elements to which the specific styles (combination of properties and values) will be applied. In the above example, all text within the <code>body</code> tags will be in steelblue.</p> <p>There are three ways to include CSS code in HTML. This is called \"referencing\".</p> <p>Embed CSS in HTML - You can place the CSS code within <code>style</code> tags inside the <code>head</code> tags. This way you can keep everything within a single HTML file but does make the code lengthy.</p> <pre>&lt;head&gt;  \t\t\t\n  &lt;style type=\"text/css\"&gt;\n      .description {\n      font: 16px times-new-roman;\n      }\n      .viz {\n      font: 10px sans-serif;\n      } \n  &lt;/style&gt;\n&lt;/head&gt;\n</pre> <p>Reference an external stylesheet from HTML is a much cleaner way but results in the creation of another file. To do this, you can copy the CSS code into a text file and save it as a <code>.css</code> file in the same folder as the HTML file. In the document head in the HTML code, you can then do the following:</p> <pre>&lt;head&gt;\n  &lt;link rel=\"stylesheet\" href=\"main.css\"&gt;\n&lt;/head&gt;\n</pre> <p>Attach inline styles - You can also directly attach the styles in-line along with the main HTML code in the body. This makes it easy to customize specific elements but makes the code very messy, because the design and content get mixed up.</p> <pre>&lt;p style=\"color: green; font-size:36px; font-weight:bold;\"&gt;Inline styles can be handy sometimes.&lt;/p&gt;\n</pre>"},{"location":"m02-history/lab02/#now-submit-your-work","title":"Now submit your work\u00b6","text":"<p>Export your notebook to HTML (<code>lab02_notebook_lastname_firstname.html</code>). Then also rename your <code>HTML</code> (CSS) files from HTML/CSS exercise in the format of <code>lab02_lastname_firstname</code>. Upload these files to Canvas.</p>"},{"location":"m03-integrity/class/","title":"Visualization integrity","text":""},{"location":"m03-integrity/class/#before-the-class","title":"Before the class","text":"<ul> <li>Read E. R. Tufte, Visual Display of Quantitative Information, Ch. 1 and 2 (see Canvas). </li> </ul>"},{"location":"m03-integrity/class/#learning-outcomes","title":"Learning outcomes","text":"<ul> <li>You will be able to explain the history of visualization in a broad sense and in doing so will be able to appreciate the leap from concrete to abstract thinking in visualization</li> <li>You will be able to explain why it is very easy to fool with (or be fooled by) data visualizations and the common ways that visualizations deceive. </li> <li>You will be able to explain basic reasons why correlation does not mean causation. </li> <li>You will be able to explain the impact of the choice of scales. </li> <li>You will be able to explain the motivation behind Tufte's \"lie factor\"</li> <li>You will be able to list several ways to create good visualizations (or not to create bad visualizations). </li> </ul>"},{"location":"m03-integrity/class/#if-you-want-to-know-more","title":"If you want to know more","text":""},{"location":"m03-integrity/class/#seeing-is-believing","title":"Seeing is believing","text":"<p>As our brain tries to integrate information from multiple sources and as our vision is a dominent sensory input, vision can interfere and dominate other sensory inputs. For instance, what you see can distort what you hear and it's called the McGurk Effect.</p> <p></p> <p>Probably more striking example is so-called rubber hand illusion. </p> <p></p> <p>Apparently, it is very easy to create an illusion that a crude rubber hand is yours. </p>"},{"location":"m03-integrity/class/#bad-visualizations","title":"Bad visualizations","text":"<p>There have been a lot of bad data visualizations from News media. They seem to decrease as data visualization is highlighted more and more. But still you will be able to find some glaring errors in data visualizations in news. For instance, </p> <ul> <li>WTF Visualizations </li> <li>The most misleading charts of 2015, fixed</li> <li>Flowing data: Ugly visualization</li> <li>Unemployment rate under president Obama</li> <li>Zika virus</li> </ul>"},{"location":"m03-integrity/class/#correlation-causation","title":"Correlation != causation","text":"<p> xkcd: Correlation</p> <p>As this comic beautifully captured, the correlation does not guarantee causation, but the fact is usually not very intuitive to many people. First of all, if you have a lot of numbers, it is very easy to conjure spurious correlations. </p> <p> xkcd: Significant</p> <p>On the following website, you can find really weird and hillarious correlations that do not make any sense. </p> <ul> <li>Spurious correlations </li> <li>Correlation or Causation?</li> </ul> <p>And then, it is often not easy to realize the existence of potential confounding variables (factors). For instance, if there is a negative correlation between maternal mortality and births by C-sections, it is very easy to fall into a trap to think, \"Oh, this indicates that C-section saves lives!\" However, if number of C-sections in a country is strongly affected by the wealth of the country, and if the maternal mortality is also strongly affected by the wealth of the country, the negative correlation can be clearly visible even if C-section increases maternal mortality slightly! </p> <p>With the power of visual images, it is easy to mislead people by showing strong correlation and arguing the existence of causality. </p>"},{"location":"m03-integrity/class/#there-are-three-kinds-of-lies-lies-damned-lies-and-statistics","title":"There are three kinds of lies: lies, damned lies, and statistics.","text":"<p>Although I believe that statistics is one of the best tools that we have to make informed decisions, it is still true that you can be fooled by hidden details. The following book explains how one can be fooled by statistics and statistical graphics. This book is concise, witty, and extremely useful!  </p> <ul> <li>How to Lie with Statistics</li> </ul> <p></p> <p>The book talks about how you can manipulate perception by showing certain range of values for the vertical axis (mainly by not starting at zero). But it should not be followed religiously. The following video by Vox, titled Shut up about the y-axis. It shouldn\u2019t always start at zero, explains this point nicely.</p> <p></p>"},{"location":"m03-integrity/lab03/","title":"Module 3: Fix it or break it!","text":"Run in Google Colab View on Github View raw on Github"},{"location":"m03-integrity/lab03/#module-3-fix-it-or-break-it","title":"Module 3: Fix it or break it!\u00b6","text":"<p>In this assignment, you choose to be either a good \ud83d\ude07 or a bad \ud83d\ude08 person. Follow the instruction below and submit your paper to Canvas.</p>"},{"location":"m03-integrity/lab03/","title":"\ud83d\ude07\u00b6","text":"<p>Find a highly misleading visualization (you can have more than one!). Write a short paper (also feel free to publish in your blog or something) that</p> <ul> <li>dissects and explains why the visualizations are misleading.</li> <li>explains how the visualization can be fixed.</li> <li>provides a fixed visualization (either hand-drawn or plotted with any tool)</li> </ul>"},{"location":"m03-integrity/lab03/","title":"\ud83d\ude08\u00b6","text":"<p>Find a perfectly fine visualization (you can have more than one!). Write a short paper that</p> <ul> <li>how can those visualization can be manipulated to mislead one way or the other</li> <li>provides a manipulated version of the visualization (either hand-drawn or plotted with any tool) - the more malicious and subtle it is, the better!</li> </ul> <p>NOTE: For assignment, You are required to write a paper on one of the above two (good or bad) and not both but if you are interested, you can write for both.</p>"},{"location":"m04-perception/class/","title":"Perception","text":""},{"location":"m04-perception/class/#psychophysics","title":"Psychophysics","text":"<ul> <li>Just-noticeable difference</li> <li>http://www.jnd.org/</li> <li>Weber's law and thresholds</li> <li>Weber\u2013Fechner law</li> <li>Stevens's power law</li> </ul>"},{"location":"m04-perception/class/#stevens-power-law","title":"Stevens' power law","text":""},{"location":"m04-perception/class/#appearance-compensation","title":"Appearance compensation","text":"<ul> <li>Perceptual Scaling of Map Symbols</li> </ul>"},{"location":"m04-perception/class/#colors","title":"Colors","text":"<ul> <li>Blender Guru: Understanding Color</li> <li>Beginning Graphic Design: color</li> <li>This study called \"Value-Suppressing Uncertainty Palettes\" from UW Interactive Data Lab is an interesting example of exploiting the human color perception. </li> <li>Physics Girl: Does this look white to you?</li> <li>A Better Default Colormap for Matplotlib | SciPy 2015 | Nathaniel Smith and St\u00e9fan van der Walt</li> <li>Introducing makeitpop, a tool to perceptually warp your data!</li> <li>Value-Suppressing Uncertainty Palettes</li> </ul>"},{"location":"m04-perception/class/#pre-attentive-processing","title":"Pre-attentive processing","text":"<ul> <li>Christopher Healey: Perception in Visualization</li> </ul>"},{"location":"m04-perception/class/#further-readings","title":"Further readings","text":"<ul> <li>Colin Ware, Visual Thinking: for Design</li> <li>M. Agrawala, W. Li, and F. Berthouzoz, Design principles for visual communication</li> <li>Bang Wong, from \"Points of View\" (they are very short columns)</li> <li>Color coding</li> <li>Design of data figures</li> <li>Salience</li> <li>Gestalt principles (Part 1)</li> <li>Avoiding color</li> <li>39 studies about human perception in 30 minutes</li> <li>Crowdsourcing Graphical Perception: Using Mechanical Turk to Assess Visualization Design</li> </ul>"},{"location":"m04-perception/lab04/","title":"Module 4: Perception","text":"Run in Google Colab View on Github View raw on Github In\u00a0[1]: Copied! <pre>import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n</pre> import pandas as pd import matplotlib.pyplot as plt %matplotlib inline In\u00a0[2]: Copied! <pre>from vega_datasets import data\n\ndata.list_datasets()\n</pre> from vega_datasets import data  data.list_datasets() Out[2]: <pre>['7zip',\n 'airports',\n 'annual-precip',\n 'anscombe',\n 'barley',\n 'birdstrikes',\n 'budget',\n 'budgets',\n 'burtin',\n 'cars',\n 'climate',\n 'co2-concentration',\n 'countries',\n 'crimea',\n 'disasters',\n 'driving',\n 'earthquakes',\n 'ffox',\n 'flare',\n 'flare-dependencies',\n 'flights-10k',\n 'flights-200k',\n 'flights-20k',\n 'flights-2k',\n 'flights-3m',\n 'flights-5k',\n 'flights-airport',\n 'gapminder',\n 'gapminder-health-income',\n 'gimp',\n 'github',\n 'graticule',\n 'income',\n 'iowa-electricity',\n 'iris',\n 'jobs',\n 'la-riots',\n 'londonBoroughs',\n 'londonCentroids',\n 'londonTubeLines',\n 'lookup_groups',\n 'lookup_people',\n 'miserables',\n 'monarchs',\n 'movies',\n 'normal-2d',\n 'obesity',\n 'ohlc',\n 'points',\n 'population',\n 'population_engineers_hurricanes',\n 'seattle-temps',\n 'seattle-weather',\n 'sf-temps',\n 'sp500',\n 'stocks',\n 'udistrict',\n 'unemployment',\n 'unemployment-across-industries',\n 'uniform-2d',\n 'us-10m',\n 'us-employment',\n 'us-state-capitals',\n 'volcano',\n 'weather',\n 'weball26',\n 'wheat',\n 'windvectors',\n 'world-110m',\n 'zipcodes']</pre> <p>or you can work with only smaller, local datasets.</p> In\u00a0[3]: Copied! <pre>from vega_datasets import local_data\nlocal_data.list_datasets()\n</pre> from vega_datasets import local_data local_data.list_datasets() Out[3]: <pre>['airports',\n 'anscombe',\n 'barley',\n 'burtin',\n 'cars',\n 'crimea',\n 'driving',\n 'iowa-electricity',\n 'iris',\n 'la-riots',\n 'ohlc',\n 'seattle-temps',\n 'seattle-weather',\n 'sf-temps',\n 'stocks',\n 'us-employment',\n 'wheat']</pre> <p>Ah, we have the <code>anscombe</code> data here! Let's see the description of the dataset.</p> In\u00a0[5]: Copied! <pre>print(local_data.anscombe.description)\n</pre> print(local_data.anscombe.description) <pre>Anscombe's Quartet is a famous dataset constructed by Francis Anscombe [1]_. Common summary statistics are identical for each subset of the data, despite the subsets having vastly different characteristics.\n</pre> In\u00a0[6]: Copied! <pre>df = local_data.anscombe()\ndf.head()\n</pre> df = local_data.anscombe() df.head() Out[6]: Series X Y 0 I 10 8.04 1 I 8 6.95 2 I 13 7.58 3 I 9 8.81 4 I 11 8.33 <p>Q1: can you draw a scatterplot of the dataset \"I\"? You can filter the dataframe based on the <code>Series</code> column and use <code>plot</code> function that you used for the Snow's map. We have already learned how to filter a dataframe. If you're unsure, you can check the Getting started tutorials.</p> In\u00a0[7]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[7]: <pre>&lt;Axes: xlabel='X', ylabel='Y'&gt;</pre> <p>Let's look at a slightly more complicated dataset.</p> In\u00a0[8]: Copied! <pre>car_df = local_data.cars()\ncar_df.head()\n</pre> car_df = local_data.cars() car_df.head() Out[8]: Name Miles_per_Gallon Cylinders Displacement Horsepower Weight_in_lbs Acceleration Year Origin 0 chevrolet chevelle malibu 18.0 8 307.0 130.0 3504 12.0 1970-01-01 USA 1 buick skylark 320 15.0 8 350.0 165.0 3693 11.5 1970-01-01 USA 2 plymouth satellite 18.0 8 318.0 150.0 3436 11.0 1970-01-01 USA 3 amc rebel sst 16.0 8 304.0 150.0 3433 12.0 1970-01-01 USA 4 ford torino 17.0 8 302.0 140.0 3449 10.5 1970-01-01 USA <p>Pandas provides useful summary functions. It identifies numerical data columns and provides you with a table of summary statistics.</p> In\u00a0[10]: Copied! <pre>car_df.describe()\n</pre> car_df.describe() Out[10]: Miles_per_Gallon Cylinders Displacement Horsepower Weight_in_lbs Acceleration Year count 398.000000 406.000000 406.000000 400.000000 406.000000 406.000000 406 mean 23.514573 5.475369 194.779557 105.082500 2979.413793 15.519704 1975-12-30 13:49:57.044334976 min 9.000000 3.000000 68.000000 46.000000 1613.000000 8.000000 1970-01-01 00:00:00 25% 17.500000 4.000000 105.000000 75.750000 2226.500000 13.700000 1973-01-01 00:00:00 50% 23.000000 4.000000 151.000000 95.000000 2822.500000 15.500000 1976-01-01 00:00:00 75% 29.000000 8.000000 302.000000 130.000000 3618.250000 17.175000 1979-01-01 00:00:00 max 46.600000 8.000000 455.000000 230.000000 5140.000000 24.800000 1982-01-01 00:00:00 std 7.815984 1.712160 104.922458 38.768779 847.004328 2.803359 NaN <p>If you ask to draw a histogram, you get all of them. :)</p> In\u00a0[11]: Copied! <pre>car_df.hist()\n</pre> car_df.hist() Out[11]: <pre>array([[&lt;Axes: title={'center': 'Miles_per_Gallon'}&gt;,\n        &lt;Axes: title={'center': 'Cylinders'}&gt;,\n        &lt;Axes: title={'center': 'Displacement'}&gt;],\n       [&lt;Axes: title={'center': 'Horsepower'}&gt;,\n        &lt;Axes: title={'center': 'Weight_in_lbs'}&gt;,\n        &lt;Axes: title={'center': 'Acceleration'}&gt;],\n       [&lt;Axes: title={'center': 'Year'}&gt;, &lt;Axes: &gt;, &lt;Axes: &gt;]],\n      dtype=object)</pre> <p>Well this is too small. You can check out the documentation and change the size of the figure.</p> <p>Q2: by consulting the documentation, can you make the figure larger so that we can see all the labels clearly? And then change the layout so that there are two rows and four columns? Then change the number of bins to 20.</p> In\u00a0[16]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>Let's do an experiment! The procedure is as follows:</p> <ol> <li>Generate a random number between [1, 10];</li> <li>Use a horizontal bar to represent the number, i.e., the length of the bar is equal to the number;</li> <li>Guess the length of the bar by comparing it to two other bars with length 1 and 10 respectively;</li> <li>Store your guess (perceived length) and actual length to two separate lists;</li> <li>Repeat the above steps many times;</li> <li>Check whether Steven's power-law holds.</li> </ol> <p>First, let's define the length of a short and a long bar. We also create two empty lists to store perceived and actual length.</p> In\u00a0[17]: Copied! <pre>import random\nimport time\nimport numpy as np\n\nl_short_bar = 1\nl_long_bar = 10\n\nperceived_length_list = []\nactual_length_list = []\n</pre> import random import time import numpy as np  l_short_bar = 1 l_long_bar = 10  perceived_length_list = [] actual_length_list = [] In\u00a0[18]: Copied! <pre>mystery_length = random.uniform(1, 10)  # generate a number between 1 and 10. this is the *actual* length.\n\nplt.barh(np.arange(3), [l_short_bar, mystery_length, l_long_bar], align='center')\nplt.yticks(np.arange(3), ('1', '?', '10'))\nplt.xticks([]) # no hint!\n</pre> mystery_length = random.uniform(1, 10)  # generate a number between 1 and 10. this is the *actual* length.  plt.barh(np.arange(3), [l_short_bar, mystery_length, l_long_bar], align='center') plt.yticks(np.arange(3), ('1', '?', '10')) plt.xticks([]) # no hint! Out[18]: <pre>([], [])</pre> <p>Btw, <code>np.arange</code> is used to create a simple integer list <code>[0, 1, 2]</code>.</p> In\u00a0[19]: Copied! <pre>np.arange(3)\n</pre> np.arange(3) Out[19]: <pre>array([0, 1, 2])</pre> <p>Now let's define a function to perform the experiment once. When you run this function, it picks a random number between 1.0 and 10.0 and show the bar chart. Then it asks you to input your estimate of the length of the middle bar. It then saves that number to the <code>perceived_length_list</code> and the actual answer to the <code>actual_length_list</code>.</p> <p>Note, if the input box does not appear for you try (1) switching to firefox, OR (2) removing the input line from the code and manually record the numbers in a cell, OR (3) adding a prompt to it like input(\"enter estimation\")</p> In\u00a0[20]: Copied! <pre>def run_exp_once():\n    mystery_length = random.uniform(1, 10)  # generate a number between 1 and 10. \n\n    plt.barh(np.arange(3), [l_short_bar, mystery_length, l_long_bar], height=0.5, align='center')\n    plt.yticks(np.arange(3), ('1', '?', '10'))\n    plt.xticks([]) # no hint!\n    plt.show()\n    \n    perceived_length_list.append( float(input()) )\n    actual_length_list.append(mystery_length)\n</pre> def run_exp_once():     mystery_length = random.uniform(1, 10)  # generate a number between 1 and 10.       plt.barh(np.arange(3), [l_short_bar, mystery_length, l_long_bar], height=0.5, align='center')     plt.yticks(np.arange(3), ('1', '?', '10'))     plt.xticks([]) # no hint!     plt.show()          perceived_length_list.append( float(input()) )     actual_length_list.append(mystery_length) In\u00a0[21]: Copied! <pre>run_exp_once()\n</pre> run_exp_once() <p>Now, run the experiment many times to gather your data. Check the two lists to make sure that you have the proper dataset. The length of the two lists should be the same.</p> In\u00a0[22]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[23]: Copied! <pre>plt.scatter(x=[1,5,10], y=[1,10, 5])\n</pre> plt.scatter(x=[1,5,10], y=[1,10, 5]) Out[23]: <pre>&lt;matplotlib.collections.PathCollection at 0x10d813e10&gt;</pre> <p>Q3: Now plot your result using the <code>scatter()</code> function. You should also use <code>plt.title()</code>, <code>plt.xlabel()</code>, and <code>plt.ylabel()</code> to label your axes and the plot itself.</p> In\u00a0[24]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[24]: <pre>Text(0, 0.5, 'Perceived')</pre> <p>After plotting, let's fit the relation between actual and perceived lengths using a polynomial function. We can easily do it using <code>curve_fit(f, x, y)</code> in Scipy, which is to fit $x$ and $y$ using the function <code>f</code>. In our case, $f = a*x^b +c$. For instance, we can check whether this works by creating a fake dataset that follows the exact form:</p> In\u00a0[25]: Copied! <pre>from scipy.optimize import curve_fit\n\ndef func(x, a, b, c):\n    return a * np.power(x, b) + c\n\nx = np.arange(20)  # [0,1,2,3, ..., 19]\ny = np.power(x, 2) # [0,1,4,9, ... ]\n\npopt, pcov = curve_fit(func, x, y)\nprint('{:.2f} x^{:.2f} + {:.2f}'.format(*popt))\n</pre> from scipy.optimize import curve_fit  def func(x, a, b, c):     return a * np.power(x, b) + c  x = np.arange(20)  # [0,1,2,3, ..., 19] y = np.power(x, 2) # [0,1,4,9, ... ]  popt, pcov = curve_fit(func, x, y) print('{:.2f} x^{:.2f} + {:.2f}'.format(*popt)) <pre>1.00 x^2.00 + 0.00\n</pre> <p>Q4: Now fit your data! Do you see roughly linear relationship between the actual and the perceived lengths? It's ok if you don't!</p> In\u00a0[26]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <pre>0.52 x^1.18 + 1.76\n</pre> In\u00a0[27]: Copied! <pre>n1 = 0.005\nn2 = 0.05\n\nradius1 = np.sqrt(n1/np.pi) # area = pi * r * r\nradius2 = np.sqrt(n2/np.pi)\nrandom_radius = np.sqrt(n1*random.uniform(1,10)/np.pi)\n\nplt.axis('equal')\nplt.axis('off')\ncirc1 = plt.Circle( (0,0),         radius1, clip_on=False )\ncirc2 = plt.Circle( (4*radius2,0), radius2, clip_on=False )\nrand_circ = plt.Circle((2*radius2,0), random_radius, clip_on=False )\n\nplt.gca().add_artist(circ1)\nplt.gca().add_artist(circ2)\nplt.gca().add_artist(rand_circ)\n</pre> n1 = 0.005 n2 = 0.05  radius1 = np.sqrt(n1/np.pi) # area = pi * r * r radius2 = np.sqrt(n2/np.pi) random_radius = np.sqrt(n1*random.uniform(1,10)/np.pi)  plt.axis('equal') plt.axis('off') circ1 = plt.Circle( (0,0),         radius1, clip_on=False ) circ2 = plt.Circle( (4*radius2,0), radius2, clip_on=False ) rand_circ = plt.Circle((2*radius2,0), random_radius, clip_on=False )  plt.gca().add_artist(circ1) plt.gca().add_artist(circ2) plt.gca().add_artist(rand_circ) Out[27]: <pre>&lt;matplotlib.patches.Circle at 0x10db1ac10&gt;</pre> <p>Let's have two lists for this experiment.</p> In\u00a0[28]: Copied! <pre>perceived_area_list = []\nactual_area_list = []\n</pre> perceived_area_list = [] actual_area_list = [] <p>And define a function for the experiment.</p> <p>Note, if the input box does not appear for you try (1) switching to firefox, OR (2) removing the input line from the code and manually record the numbers in a cell, OR (3) adding a prompt to it like input(\"enter estimation\")</p> In\u00a0[29]: Copied! <pre>def run_area_exp_once(n1=0.005, n2=0.05):    \n    radius1 = np.sqrt(n1/np.pi) # area = pi * r * r\n    radius2 = np.sqrt(n2/np.pi)\n    \n    mystery_number = random.uniform(1,10)\n    random_radius = np.sqrt(n1*mystery_number/math.pi)\n\n    plt.axis('equal')\n    plt.axis('off')\n    circ1 = plt.Circle( (0,0),         radius1, clip_on=False )\n    circ2 = plt.Circle( (4*radius2,0), radius2, clip_on=False )\n    rand_circ = plt.Circle((2*radius2,0), random_radius, clip_on=False )\n    plt.gca().add_artist(circ1)\n    plt.gca().add_artist(circ2)\n    plt.gca().add_artist(rand_circ)    \n    plt.show()\n    \n    perceived_area_list.append( float(input()) )\n    actual_area_list.append(mystery_number)\n</pre> def run_area_exp_once(n1=0.005, n2=0.05):         radius1 = np.sqrt(n1/np.pi) # area = pi * r * r     radius2 = np.sqrt(n2/np.pi)          mystery_number = random.uniform(1,10)     random_radius = np.sqrt(n1*mystery_number/math.pi)      plt.axis('equal')     plt.axis('off')     circ1 = plt.Circle( (0,0),         radius1, clip_on=False )     circ2 = plt.Circle( (4*radius2,0), radius2, clip_on=False )     rand_circ = plt.Circle((2*radius2,0), random_radius, clip_on=False )     plt.gca().add_artist(circ1)     plt.gca().add_artist(circ2)     plt.gca().add_artist(rand_circ)         plt.show()          perceived_area_list.append( float(input()) )     actual_area_list.append(mystery_number) <p>Q5: Now you can run the experiment many times, plot the result, and fit a power-law curve to test the Stevens' power-law!</p> In\u00a0[33]: Copied! <pre># TODO: put your code here. You can use multiple cells. \nimport math\n\n# YOUR SOLUTION HERE\n</pre> # TODO: put your code here. You can use multiple cells.  import math  # YOUR SOLUTION HERE <pre>11.55 x^0.24 + -10.48\n</pre> <p>What is your result? How are the exponents different from each other? Have you observed a result consistent with the Stevens' power-law?</p>"},{"location":"m04-perception/lab04/#module-4-perception","title":"Module 4: Perception\u00b6","text":"<p>In this lab, we will learn basic usage of <code>pandas</code> library and then perform a small experiment to test the Stevens' power law.</p>"},{"location":"m04-perception/lab04/#vega-datasets","title":"Vega datasets\u00b6","text":"<p>Before going into the perception experiment, let's first talk about some handy datasets that you can play with.</p> <p>It's nice to have clean datasets handy to practice data visualization. And there is this nice small package called <code>vega-datasets</code>, from the altair project.</p> <p>You can install the package by running</p> <pre><code>$ pip install vega-datasets</code></pre> <p>or</p> <pre><code>$ pip3 install vega-datasets</code></pre> <p>Once you install the package, you can import and see the list of datasets:</p>"},{"location":"m04-perception/lab04/#anscombes-quartet-dataset","title":"Anscombe's quartet dataset\u00b6","text":"<p>How does the actual data look like? Very conveniently, calling the dataset returns a Pandas dataframe for you.</p>"},{"location":"m04-perception/lab04/#some-histograms-with-pandas","title":"Some histograms with pandas\u00b6","text":""},{"location":"m04-perception/lab04/#stevens-power-law-and-your-own-psychophysics-experiment","title":"Stevens\u2019 power-law and your own psychophysics experiment!\u00b6","text":""},{"location":"m04-perception/lab04/#perception-of-length","title":"Perception of length\u00b6","text":"<p>Let's run the experiment.</p> <p>The <code>random</code> module in Python provides various random number generators, and the <code>random.uniform(a,b)</code> function returns a floating point number in [a,b].</p> <p>We can plot horizontal bars using the <code>pyplot.barh()</code> function. Using this function, we can produce a bar graph that looks like this:</p>"},{"location":"m04-perception/lab04/#plotting-the-result","title":"Plotting the result\u00b6","text":"<p>Now we can draw the scatter plot of perceived and actual length. The <code>matplotlib</code>'s <code>scatter()</code> function will do this. This is the backend of the pandas' scatterplot. Here is an example of how to use <code>scatter</code>:</p>"},{"location":"m04-perception/lab04/#perception-of-area","title":"Perception of area\u00b6","text":"<p>Similar to the above experiment, we now represent a random number as a circle, and the area of the circle is equal to the number.</p> <p>First, calculate the radius of a circle from its area and then plot using the <code>Circle()</code> function. <code>plt.Circle((0,0), r)</code> will plot a circle centered at (0,0) with radius <code>r</code>.</p>"},{"location":"m05-design/class/","title":"Perception","text":"<p>One of the things that make data visualization fun and interesting is its artistic aspect. A beautiful visualization may not only pleasing to the eyes, but also can be more effective and engaging in communicating the message. At the same time, the design principles are not arbitrary, but are based on the human perception and cognition that we covered. </p> <p>To think about the importance of design in visualization, let us start with two visualization examples.  The first one is \"Gun deaths in Florida\" from Reuters: https://www.businessinsider.com/gun-deaths-in-florida-increased-with-stand-your-ground-2014-2  This graphic shows the number of murders committed using firearms in Florida for a couple of decades, highlighting the year (2005) when the \"Stand Your Ground\" law was enacted. It shows that the number of murders may be increasing after the law was enacted.  As we discussed earlier, it is hard to conclude anything from this single graph given the complex contexts that this graph does not show.</p> <p>You may wonder, \"wait, what do you mean by increasing? I think the number of murders is going down.\" Yeah, that's the problem.  This visualization is super confusing! The y-axis is flipped\u2014the top is 0 and the bottom is 1,000!  Indeed, this visualization is often mentioned as one of the most confusing visualizations.</p> <p>Here is another one: https://www.simonscarr.com/iraqs-bloody-toll  Sorry for all these morbid examples, but these two are the best examples that I know of.  It is similar to the previous one, in a sense that it flipped the y-axis and used the same red color.  However, I would say this visualization is extremely well-done and effective and conveying the message of \"bloody toll\"!</p> <p>This visualization also lets us understand the idea behind the first visualization.  \"Ah, the first visualization was trying to have the same effect, representing the number of murders as the blood dripping down!\" Actually, the creator of the first visualization said that they were directly inspired by the second one.  But the problem is that it failed to do so (spectacularly), not because the data was bad, not because the idea was bad, not because bad visual encodings were used, but because of the design!</p>"},{"location":"m05-design/class/#tuftes-data-ink-ratio","title":"Tufte's Data-ink ratio","text":"<ul> <li>Tufte, Data-Ink Ratio (Canvas)</li> <li>S. Bateman et al., Useful Junk? The Effects of Visual Embellishment on comprehension and memorability of charts, CHI'10</li> <li>Thomas Haslwanter, An Introduction to Statistics: basic principles</li> <li>The Best Stats You've Ever Seen | Hans Rosling</li> </ul>"},{"location":"m05-design/class/#more-on-colors","title":"More on colors","text":"<ul> <li>Beginning Graphic Design: Color</li> <li>Your Friendly Guide to Colors in Data Visualisation</li> <li>YYiki: Color</li> </ul>"},{"location":"m05-design/class/#chartjunk","title":"Chartjunk","text":"<p>Chartjunk has attracted some interests in academia, particularly about their effect on memorability or engagement.  - Bateman et al., Useful junk?: the effects of visual embellishment on comprehension and memorability of charts - Borkin et al., What Makes a Visualization Memorable?</p>"},{"location":"m05-design/class/#design","title":"Design","text":"<ul> <li>The Non-Designer's Design Book by Robin Williams concisely and easily explains some of the most fundamental design principles. </li> <li>99% invisible is a podcast about \"invisible\" designs that surround us. It is one of the most fascinating podcast. </li> </ul>"},{"location":"m05-design/class/#data-visualization-zoo","title":"Data visualization zoo","text":"<ul> <li>A tour through the visualization zoo</li> <li>The Grammar of Graphics</li> </ul>"},{"location":"m05-design/class/#sparkline","title":"Sparkline","text":"<p>Sparkline is a nice, minimalistic visualization technique that fits perfectly with E. Tufte's minimalism. It is useful when you want to communicate general trends and shapes of many timeseries quickly, particularly within a text. For instance, FiveThirtyEight uses it to display the historical primary endorsement trends in the text. </p>"},{"location":"m05-design/lab05/","title":"Module 5: Design","text":"Run in Google Colab View on Github View raw on Github <p>First, import <code>numpy</code> and <code>matplotlib</code> libraries (don't forget the <code>matplotlib inline</code> magic command if you are using Jupyter Notebook).</p> In\u00a0[2]: Copied! <pre>import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n</pre> import numpy as np import matplotlib.pyplot as plt %matplotlib inline  In\u00a0[3]: Copied! <pre>np.linspace(0, 3)\n</pre> np.linspace(0, 3) Out[3]: <pre>array([0.        , 0.06122449, 0.12244898, 0.18367347, 0.24489796,\n       0.30612245, 0.36734694, 0.42857143, 0.48979592, 0.55102041,\n       0.6122449 , 0.67346939, 0.73469388, 0.79591837, 0.85714286,\n       0.91836735, 0.97959184, 1.04081633, 1.10204082, 1.16326531,\n       1.2244898 , 1.28571429, 1.34693878, 1.40816327, 1.46938776,\n       1.53061224, 1.59183673, 1.65306122, 1.71428571, 1.7755102 ,\n       1.83673469, 1.89795918, 1.95918367, 2.02040816, 2.08163265,\n       2.14285714, 2.20408163, 2.26530612, 2.32653061, 2.3877551 ,\n       2.44897959, 2.51020408, 2.57142857, 2.63265306, 2.69387755,\n       2.75510204, 2.81632653, 2.87755102, 2.93877551, 3.        ])</pre> <p>Let's just work with 10 numbers to make it easier to see.</p> In\u00a0[4]: Copied! <pre>a = np.linspace(0, 3, 10)     # 10 numbers instead of 50 \na\n</pre> a = np.linspace(0, 3, 10)     # 10 numbers instead of 50  a Out[4]: <pre>array([0.        , 0.33333333, 0.66666667, 1.        , 1.33333333,\n       1.66666667, 2.        , 2.33333333, 2.66666667, 3.        ])</pre> <p>A nice thing about <code>numpy</code> is that you can apply many mathematical operations as if you are dealing with a single number.</p> In\u00a0[5]: Copied! <pre># add 1 to each element of the array\na_plus_1 = a + 1\nprint(a_plus_1)\n\n# multiply each element of the array by 3\na_times_3 = a * 3\nprint(a_times_3)\n\n# raise each element of the array to the power of 2\na_squared = a ** 2\nprint(a_squared)\n\n# take the square root of each element of the array\na_sqrt = np.sqrt(a)\nprint(a_sqrt)\n</pre> # add 1 to each element of the array a_plus_1 = a + 1 print(a_plus_1)  # multiply each element of the array by 3 a_times_3 = a * 3 print(a_times_3)  # raise each element of the array to the power of 2 a_squared = a ** 2 print(a_squared)  # take the square root of each element of the array a_sqrt = np.sqrt(a) print(a_sqrt)  <pre>[1.         1.33333333 1.66666667 2.         2.33333333 2.66666667\n 3.         3.33333333 3.66666667 4.        ]\n[0. 1. 2. 3. 4. 5. 6. 7. 8. 9.]\n[0.         0.11111111 0.44444444 1.         1.77777778 2.77777778\n 4.         5.44444444 7.11111111 9.        ]\n[0.         0.57735027 0.81649658 1.         1.15470054 1.29099445\n 1.41421356 1.52752523 1.63299316 1.73205081]\n</pre> <p>These are called \"vectorized\" operations. Whenever you can, you should use vectorized operations instead of looping over the elements because they are way way faster and efficient.</p> <p>Q: Let's plot some <code>sin</code> and <code>cos</code> functions.</p> <p>use <code>numpy</code>'s <code>sin</code> and <code>cos</code> functions with <code>matplotlib</code>'s <code>plot</code> function to plot.</p> In\u00a0[6]: Copied! <pre>x = np.linspace(0, 3*np.pi)\n\n# YOUR SOLUTION HERE\n</pre> x = np.linspace(0, 3*np.pi)  # YOUR SOLUTION HERE Out[6]: <pre>[&lt;matplotlib.lines.Line2D at 0x118dffbf0&gt;]</pre> <p><code>matplotlib</code> picks a pretty good color pair by default! Orange-blue pair is colorblind-safe and it is like the color pair of every movie.</p> <p><code>matplotlib</code> has many qualitative (categorical) colorschemes. https://matplotlib.org/users/colormaps.html</p> <p></p> <p>You can access them through the following ways:</p> In\u00a0[7]: Copied! <pre>plt.cm.Pastel1\n</pre> plt.cm.Pastel1 Out[7]: Pastel1  underbad over  <p>or</p> In\u00a0[8]: Copied! <pre>pastel1 = plt.get_cmap('Pastel1')\npastel1\n</pre> pastel1 = plt.get_cmap('Pastel1') pastel1 Out[8]: Pastel1  underbad over  <p>You can also see the colors in the colormap in RGB (remember what each number means?).</p> In\u00a0[9]: Copied! <pre>pastel1.colors\n</pre> pastel1.colors Out[9]: <pre>((0.984313725490196, 0.7058823529411765, 0.6823529411764706),\n (0.7019607843137254, 0.803921568627451, 0.8901960784313725),\n (0.8, 0.9215686274509803, 0.7725490196078432),\n (0.8705882352941177, 0.796078431372549, 0.8941176470588236),\n (0.996078431372549, 0.8509803921568627, 0.6509803921568628),\n (1.0, 1.0, 0.8),\n (0.8980392156862745, 0.8470588235294118, 0.7411764705882353),\n (0.9921568627450981, 0.8549019607843137, 0.9254901960784314),\n (0.9490196078431372, 0.9490196078431372, 0.9490196078431372))</pre> <p>To get the first and second colors, you can use either ways:</p> In\u00a0[10]: Copied! <pre>plt.plot(x, np.sin(x), color=plt.cm.Pastel1(0))\nplt.plot(x, np.cos(x), color=pastel1(1))\n</pre> plt.plot(x, np.sin(x), color=plt.cm.Pastel1(0)) plt.plot(x, np.cos(x), color=pastel1(1)) Out[10]: <pre>[&lt;matplotlib.lines.Line2D at 0x118ee5d30&gt;]</pre> <p>Q: pick a qualitative colormap and then draw four different curves with four different colors in the colormap.</p> <p>Note that the colorschemes are not necessarily colorblindness-safe nor lightness-varied! Think about whether the colormap you chose is a good one or not based on the criteria that we discussed.</p> In\u00a0[11]: Copied! <pre># TODO: put your code here\n# YOUR SOLUTION HERE\n</pre> # TODO: put your code here # YOUR SOLUTION HERE In\u00a0[12]: Copied! <pre>import matplotlib.image as mpimg\nimport PIL\nimport urllib\n</pre> import matplotlib.image as mpimg import PIL import urllib In\u00a0[13]: Copied! <pre>img = np.array(PIL.Image.open('sneakySnake.png'))\n</pre> img = np.array(PIL.Image.open('sneakySnake.png')) In\u00a0[14]: Copied! <pre>plt.imshow(img)\n</pre> plt.imshow(img) Out[14]: <pre>&lt;matplotlib.image.AxesImage at 0x118f93fb0&gt;</pre> <p>Alternatively, you can use BytesIO to read the image from the URL.</p> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[16]: Copied! <pre>import requests \nfrom io import BytesIO\n\nurl = 'https://raw.githubusercontent.com/yy/dviz-course/master/docs/m05-design/sneakySnake.png'\n\n# Fetch the image from the URL\nresponse = requests.get(url)\nimg = np.array(PIL.Image.open(BytesIO(response.content)))\n\nplt.imshow(img)\n</pre> import requests  from io import BytesIO  url = 'https://raw.githubusercontent.com/yy/dviz-course/master/docs/m05-design/sneakySnake.png'  # Fetch the image from the URL response = requests.get(url) img = np.array(PIL.Image.open(BytesIO(response.content)))  plt.imshow(img) Out[16]: <pre>&lt;matplotlib.image.AxesImage at 0x118907650&gt;</pre> <p>How is the image stored?</p> In\u00a0[15]: Copied! <pre>img\n</pre> img Out[15]: <pre>array([[[ 39,  55,  36, 255],\n        [ 42,  58,  40, 255],\n        [ 44,  63,  37, 255],\n        ...,\n        [ 48,  57,  45, 255],\n        [ 48,  61,  46, 255],\n        [ 56,  76,  54, 255]],\n\n       [[ 48,  65,  45, 255],\n        [ 47,  67,  42, 255],\n        [ 77, 103,  64, 255],\n        ...,\n        [ 47,  54,  46, 255],\n        [ 46,  56,  47, 255],\n        [ 44,  58,  45, 255]],\n\n       [[ 47,  64,  46, 255],\n        [ 63,  87,  51, 255],\n        [107, 141,  81, 255],\n        ...,\n        [ 51,  61,  50, 255],\n        [ 44,  54,  45, 255],\n        [ 45,  57,  47, 255]],\n\n       ...,\n\n       [[ 86, 105,  45, 255],\n        [ 76,  97,  37, 255],\n        [ 72,  91,  35, 255],\n        ...,\n        [ 32,  45,  24, 255],\n        [ 26,  38,  19, 255],\n        [ 17,  28,  15, 255]],\n\n       [[ 72,  90,  39, 255],\n        [ 65,  83,  31, 255],\n        [ 66,  82,  33, 255],\n        ...,\n        [ 17,  22,  16, 255],\n        [ 15,  20,  14, 255],\n        [ 16,  21,  17, 255]],\n\n       [[ 53,  70,  25, 255],\n        [ 55,  68,  22, 255],\n        [ 62,  71,  26, 255],\n        ...,\n        [ 13,  15,  14, 255],\n        [ 17,  19,  18, 255],\n        [ 19,  21,  20, 255]]], dtype=uint8)</pre> <p><code>shape()</code> method lets you know the dimensions of the array.</p> In\u00a0[16]: Copied! <pre>np.shape(img)\n</pre> np.shape(img) Out[16]: <pre>(219, 329, 4)</pre> <p>This means that <code>img</code> is a three-dimensional array with 219 x 329 x 4 numbers. If you look at the image, you can easily see that 219 and 329 are the dimensions (height and width in terms of the number of pixels) of the image. What is 4?</p> <p>We can actually create our own small image to investigate. Let's create a 3x3 image.</p> In\u00a0[17]: Copied! <pre>myimg = np.array([ [[1,0,0,1], [1,1,1,1], [1,1,1,1]], \n                   [[1,1,1,1], [1,1,1,1], [1,0,0,1]], \n                   [[1,1,1,1], [1,1,1,1], [1,0,1,0.5]] ])\nplt.imshow(myimg)\n</pre> myimg = np.array([ [[1,0,0,1], [1,1,1,1], [1,1,1,1]],                     [[1,1,1,1], [1,1,1,1], [1,0,0,1]],                     [[1,1,1,1], [1,1,1,1], [1,0,1,0.5]] ]) plt.imshow(myimg) Out[17]: <pre>&lt;matplotlib.image.AxesImage at 0x10d963350&gt;</pre> <p>Q: Play with the values of the matrix, and explain what are each of the four dimensions (this matrix is 3x3x4) below.</p> In\u00a0[18]: Copied! <pre>plt.pcolormesh(img[:,:,0], cmap=plt.cm.viridis)\nplt.colorbar()\n</pre> plt.pcolormesh(img[:,:,0], cmap=plt.cm.viridis) plt.colorbar() Out[18]: <pre>&lt;matplotlib.colorbar.Colorbar at 0x10d82fb60&gt;</pre> <p>Q: Why is it flipped upside down? Take a look at the previous <code>imshow</code> example closely and compare the axes across these two displays. Let's flip the figure upside down to show it properly. This function <code>numpy.flipud()</code> may be handy.</p> In\u00a0[19]: Copied! <pre># TODO: put your code here\n\n# YOUR SOLUTION HERE\n</pre> # TODO: put your code here  # YOUR SOLUTION HERE Out[19]: <pre>&lt;matplotlib.colorbar.Colorbar at 0x10d4b2330&gt;</pre> <p>Q: Try another sequential colormap here.</p> In\u00a0[20]: Copied! <pre># TODO: put your code here\n\n# YOUR SOLUTION HERE\n</pre> # TODO: put your code here  # YOUR SOLUTION HERE Out[20]: <pre>&lt;matplotlib.colorbar.Colorbar at 0x10f4a8c50&gt;</pre> <p>Q: Try a diverging colormap, say <code>coolwarm</code>.</p> In\u00a0[21]: Copied! <pre># TODO: put your code here\n\n# YOUR SOLUTION HERE\n</pre> # TODO: put your code here  # YOUR SOLUTION HERE Out[21]: <pre>&lt;matplotlib.colorbar.Colorbar at 0x10f500a40&gt;</pre> <p>Although there are clear choices such as <code>viridis</code> for quantitative data, you can come up with various custom colormaps depending on your application. For instance, take a look at this video about colormaps for Oceanography: https://www.youtube.com/watch?v=XjHzLUnHeM0 There is a colormap designed specifically for the oxygen level, which has three regimes.</p> <p>First of all, always label your axes!</p> <p>https://flowingdata.com/2012/06/07/always-label-your-axes/</p> <p></p> In\u00a0[22]: Copied! <pre>x = np.linspace(0, 3*np.pi)\n\nplt.xlabel(\"Some variable\")\nplt.ylabel(\"Another variable\")\nplt.plot(x, np.sin(x))\nplt.plot(x, np.cos(x))\n</pre> x = np.linspace(0, 3*np.pi)  plt.xlabel(\"Some variable\") plt.ylabel(\"Another variable\") plt.plot(x, np.sin(x)) plt.plot(x, np.cos(x)) Out[22]: <pre>[&lt;matplotlib.lines.Line2D at 0x10f65e360&gt;]</pre> <p>You can change the size of the whole figure by using <code>figsize</code> option. You specify the horizontal and vertical dimension in inches.</p> In\u00a0[23]: Copied! <pre>plt.figure(figsize=(4,3))\nplt.xlabel(\"Some variable\")\nplt.ylabel(\"Another variable\")\nplt.plot(x, np.sin(x))\nplt.plot(x, np.cos(x))\n</pre> plt.figure(figsize=(4,3)) plt.xlabel(\"Some variable\") plt.ylabel(\"Another variable\") plt.plot(x, np.sin(x)) plt.plot(x, np.cos(x)) Out[23]: <pre>[&lt;matplotlib.lines.Line2D at 0x10f6bfa40&gt;]</pre> <p>A very common mistake is making the plot too big compared to the labels and ticks.</p> In\u00a0[24]: Copied! <pre>plt.figure(figsize=(80, 20))\nplt.xlabel(\"Some variable\")\nplt.ylabel(\"Another variable\")\nplt.plot(x, np.sin(x))\nplt.plot(x, np.cos(x))\n</pre> plt.figure(figsize=(80, 20)) plt.xlabel(\"Some variable\") plt.ylabel(\"Another variable\") plt.plot(x, np.sin(x)) plt.plot(x, np.cos(x)) Out[24]: <pre>[&lt;matplotlib.lines.Line2D at 0x10f737320&gt;]</pre> <p>Once you shrink this plot into a reasonable size, you cannot read the labels anymore! Actually this is one of the most common comments that I provide to my students!</p> <p>You can adjust the range using <code>xlim</code> and <code>ylim</code></p> In\u00a0[25]: Copied! <pre>plt.figure(figsize=(4,3))\nplt.xlabel(\"Some variable\")\nplt.ylabel(\"Another variable\")\nplt.plot(x, np.sin(x))\nplt.plot(x, np.cos(x))\nplt.xlim((0,4))\nplt.ylim((-0.5, 1))\n</pre> plt.figure(figsize=(4,3)) plt.xlabel(\"Some variable\") plt.ylabel(\"Another variable\") plt.plot(x, np.sin(x)) plt.plot(x, np.cos(x)) plt.xlim((0,4)) plt.ylim((-0.5, 1)) Out[25]: <pre>(-0.5, 1.0)</pre> <p>You can adjust the ticks.</p> In\u00a0[26]: Copied! <pre>plt.figure(figsize=(4,3))\nplt.xlabel(\"Some variable\")\nplt.ylabel(\"Another variable\")\nplt.plot(x, np.sin(x))\nplt.plot(x, np.cos(x))\nplt.xticks(np.arange(0, 10, 4))\n</pre> plt.figure(figsize=(4,3)) plt.xlabel(\"Some variable\") plt.ylabel(\"Another variable\") plt.plot(x, np.sin(x)) plt.plot(x, np.cos(x)) plt.xticks(np.arange(0, 10, 4)) Out[26]: <pre>([&lt;matplotlib.axis.XTick at 0x10f804f50&gt;,\n  &lt;matplotlib.axis.XTick at 0x10f804f20&gt;,\n  &lt;matplotlib.axis.XTick at 0x10f804740&gt;],\n [Text(0, 0, '0'), Text(4, 0, '4'), Text(8, 0, '8')])</pre> <p>colors, linewidth, and so on.</p> In\u00a0[27]: Copied! <pre>plt.figure(figsize=(7,4))\nplt.xlabel(\"Some variable\")\nplt.ylabel(\"Another variable\")\nplt.plot(x, np.sin(x), color='red', linewidth=5, label=\"sine\")\nplt.plot(x, np.cos(x), label='cosine')\nplt.legend(loc='lower left')\n</pre> plt.figure(figsize=(7,4)) plt.xlabel(\"Some variable\") plt.ylabel(\"Another variable\") plt.plot(x, np.sin(x), color='red', linewidth=5, label=\"sine\") plt.plot(x, np.cos(x), label='cosine') plt.legend(loc='lower left') Out[27]: <pre>&lt;matplotlib.legend.Legend at 0x10f4aa600&gt;</pre> <p>For more information, take a look at this excellent tutorial: https://github.com/rougier/matplotlib-tutorial</p> <p>Q: Now, pick an interesting dataset (e.g. from <code>vega_datasets</code> package) and create a plot. Adjust the size of the figure, labels, colors, and many other aspects of the plot to obtain a nicely designed figure. Explain your rationales for each choice.</p> In\u00a0[28]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>First of all, think about various ways to store an image, which can be a beautiful scenary or a geometric shape. How can you efficiently store them in a computer? Consider pros and cons of different approaches. Which methods would work best for a photograph? Which methods would work best for a blueprint or a histogram?</p> <p></p> <p>There are two approaches. One is storing the color of each pixel as shown above. This assumes that each pixel in the image contains some information, which is true in the case of photographs. Obviously, in this case, you cannot zoom in more than the original resolution of the image (if you're not in the movie). Also if you just want to store some geometric shapes, you will be wasting a lot of space. This is called raster graphics.</p> <p>Another approach is using vector graphics, where you store the instructions to draw the image rather than the color values of each pixel. For instance, you can store \"draw a circle with a radius of 5 at (100,100) with a red line\" instead of storing all the red pixels corresponding to the circle. Compared to raster graphics, vector graphics won't lose quality when zooming in.</p> <p>Since a lot of data visualization tasks are about drawing geometric shapes, vector graphics is a common option. Most libraries allow you to save the figures in vector formats.</p> <p>On the web, a common standard format is SVG. SVG stands for \"Scalable Vector Graphics\". Because it's really a list of instructions to draw figures, you can create one even using a basic text editor. What many web-based drawing libraries do is simply writeing down the instructions (SVG) into a webpage, so that a web browser can show the figure. The SVG format can be edited in many vector graphics software such as Adobe Illustrator and Inkscape. Although we rarely touch the SVG directly when we create data visualizations, I think it's very useful to understand what's going on under the hood. So let's get some intuitive understanding of SVG.</p> <p>You can put an SVG figure by simply inserting a <code>&lt;svg&gt;</code> tag in an HTML file. It  tells the browser to reserve some space for a drawing. For example,</p> <pre>&lt;svg width=\"200\" height=\"200\"&gt;\n\t&lt;circle cx=\"100\" cy=\"100\" r=\"22\" fill=\"yellow\" stroke=\"orange\" stroke-width=\"5\"/&gt;\n&lt;/svg&gt;\n</pre> <p>This code creates a drawing space of 200x200 pixels. And then draw a circle of radius 22 at (100,100). The circle is filled with yellow color and stroked with 5-pixel wide orange line. That's pretty simple, isn't it? Place this code into an HTML file and open with your browser. Do you see this circle?</p> <p>Another cool thing is that, because <code>svg</code> is an HTML tag, you can use <code>CSS</code> to change the styles of your shapes. You can adjust all kinds of styles using <code>CSS</code>:</p> <pre>&lt;head&gt;\n&lt;style&gt;\n.krypton_sun {\n\tfill: red;\n\tstroke: orange;\n\tstroke-width: 10;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;svg width=\"500\" height=\"500\"&gt;\n\t&lt;circle cx=\"200\" cy=\"200\" r=\"50\" class=\"krypton_sun\"/&gt;\n&lt;/svg&gt;\n&lt;/body&gt;\n</pre> <p>This code says \"draw a circle with a radius 50 at (200, 200), with the style defined for <code>krypton_sun</code>\". The style <code>krypton_sun</code> is defined with the <code>&lt;style&gt;</code> tag.</p> <p>There are other shapes in SVG, such as ellipse, line, polygon (this can be used to create triangles), and path (for curved and other complex lines). You can even place text with advanced formatting inside an <code>svg</code> element.</p>"},{"location":"m05-design/lab05/#module-5-design","title":"Module 5: Design\u00b6","text":"<p>The aims of this lab are:</p> <ol> <li>Learn about <code>matplotlib</code>'s colormaps, including the awesome <code>vidiris</code>.</li> <li>Learn how to adjust the design element of a basic plot in <code>matplotlib</code>.</li> <li>Understand the differences between bitmap and vector graphics.</li> <li>Learn what is SVG and how to create simple shapes in SVG.</li> </ol>"},{"location":"m05-design/lab05/#colors","title":"Colors\u00b6","text":"<p>We discussed colors for categorical and quantitative data. We can further specify the quantitative cases into sequential and diverging. \"Sequential\" means that the underlying value has a sequential ordering and the color also just needs to change sequentially and monotonically.</p> <p>In the \"diverging\" case, there should be a meaningful anchor point. For instance, the correlation values may be positive or negative. Both large positive correlation and large negative correlation are important and the sign of the correlation has an important meaning. Therefore, we would like to stitch two sequential colormap together, one from zero to +1, the other from zero to -1.</p>"},{"location":"m05-design/lab05/#categorical-qualitative-colormaps","title":"Categorical (qualitative) colormaps\u00b6","text":"<p>To experiment with colormpas, let's create some data first. We will use the <code>numpy</code>'s <code>random</code> module to create some random data.</p>"},{"location":"m05-design/lab05/#numpy","title":"<code>numpy</code>\u00b6","text":"<p><code>numpy</code> is one of the most important packages in Python. As the name suggests (<code>num</code> + <code>py</code>), it handles all kinds of numerical manipulations and is the basis of pretty much all scientific packages. Actually, a <code>pandas</code> \"series\" is essentially a <code>numpy</code> array and a dataframe is essentially a bunch of <code>numpy</code> arrays grouped together. If you use it wisely, it can easily give you 10x, 100x or even 1000x speed-up!</p> <p>If you use <code>pandas</code> or other packages, they may do all these numpy optimization under the hood for you. However, it is still good to know some basic <code>numpy</code> operations. If you want to study <code>numpy</code> more, check out the official tutorial and \"From Python to Numpy\" book:</p> <ul> <li>Numpy Quickstart tutorial</li> <li>From Python to Numpy</li> </ul>"},{"location":"m05-design/lab05/#plotting-some-trigonometric-functions","title":"Plotting some trigonometric functions\u00b6","text":"<p>Let's plot a sine and cosine function. By the way, a common trick to plot a function is creating a list of x coordinate values (evenly spaced numbers over an interval) first. <code>numpy</code> has a function called <code>linspace</code> for that (\"LINear SPACE\"). By default, it creates 50 numbers that fill the interval that you pass.</p>"},{"location":"m05-design/lab05/#quantitative-colormaps","title":"Quantitative colormaps\u00b6","text":"<p>Take a look at the tutorial about image processing in <code>matplotlib</code>: https://matplotlib.org/stable/tutorials/introductory/images.html#sphx-glr-tutorials-introductory-images-py</p> <p>We can also display an image using quantitative (sequential) colormaps. Download the image of a snake: https://github.com/yy/dviz-course/blob/master/docs/m05-design/sneakySnake.png or use other image of your liking.</p> <p>Check out <code>imread()</code> function that returns an <code>numpy.array()</code>.</p>"},{"location":"m05-design/lab05/#your-solution-here","title":"YOUR SOLUTION HERE\u00b6","text":""},{"location":"m05-design/lab05/#applying-other-colormaps","title":"Applying other colormaps\u00b6","text":"<p>Let's assume that the first value of the four dimensions represents some data of your interest. You can obtain <code>height x width x 1</code> matrix by doing <code>img[:,:,0]</code>, which means give me the all of the first dimension (<code>:</code>), all of the second dimension (<code>:</code>), but only the first one from the last dimension (<code>0</code>).</p>"},{"location":"m05-design/lab05/#adjusting-a-plot","title":"Adjusting a plot\u00b6","text":""},{"location":"m05-design/lab05/#svg","title":"SVG\u00b6","text":""},{"location":"m05-design/lab05/#exercise","title":"Exercise:\u00b6","text":"<p>Let's reproduce the symbol for the Deathly Hallows (as shown below) with SVG. It doesn't need to be a perfect duplication (an equilateral triangle, etc), just be visually as close as you can. What's the most efficient way of drawing this? Color it in the way you like. Upload this file to canvas.</p> <p></p>"},{"location":"m06-data/class/","title":"Data","text":""},{"location":"m06-data/class/#tidy-data","title":"Tidy data","text":"<ul> <li>Tidy Data by Hadley Wickham</li> </ul>"},{"location":"m06-data/lab06/","title":"Module 6 assignment: Data types and tidy data","text":"Run in Google Colab View on Github View raw on Github In\u00a0[1]: Copied! <pre>import pandas as pd\n</pre> import pandas as pd In\u00a0[2]: Copied! <pre>pew_df = pd.read_csv('https://raw.githubusercontent.com/tidyverse/tidyr/main/data-raw/relig_income.csv')\npew_df\n</pre> pew_df = pd.read_csv('https://raw.githubusercontent.com/tidyverse/tidyr/main/data-raw/relig_income.csv') pew_df Out[2]: religion &lt;$10k $10-20k $20-30k $30-40k $40-50k $50-75k $75-100k $100-150k &gt;150k Don't know/refused 0 Agnostic 27 34 60 81 76 137 122 109 84 96 1 Atheist 12 27 37 52 35 70 73 59 74 76 2 Buddhist 27 21 30 34 33 58 62 39 53 54 3 Catholic 418 617 732 670 638 1116 949 792 633 1489 4 Don\u2019t know/refused 15 14 15 11 10 35 21 17 18 116 5 Evangelical Prot 575 869 1064 982 881 1486 949 723 414 1529 6 Hindu 1 9 7 9 11 34 47 48 54 37 7 Historically Black Prot 228 244 236 238 197 223 131 81 78 339 8 Jehovah's Witness 20 27 24 24 21 30 15 11 6 37 9 Jewish 19 19 25 25 30 95 69 87 151 162 10 Mainline Prot 289 495 619 655 651 1107 939 753 634 1328 11 Mormon 29 40 48 51 56 112 85 49 42 69 12 Muslim 6 7 9 10 9 23 16 8 6 22 13 Orthodox 13 17 23 32 32 47 38 42 46 73 14 Other Christian 9 7 11 13 13 14 18 14 12 18 15 Other Faiths 20 33 40 46 49 63 46 40 41 71 16 Other World Religions 5 2 3 4 2 7 3 4 4 8 17 Unaffiliated 217 299 374 365 341 528 407 321 258 597 <p>This dataset is about the relationships between income and religion, assembled from a research by the Pew Research Center. Is this dataset tidy or not? Why?</p> <p>Yes, many of the columns are values, not variable names. How should we fix it?</p> <p>Pandas provides a convenient function called melt. You specify the <code>id_vars</code> that are variable columns, and <code>value_vars</code> that are value columns, and provide the name for the variable as well as the name for the values.</p> <p>Q: so please go ahead and tidy it up! I'd suggest to use the variable name \"income\" and value name \"frequency\"</p> In\u00a0[3]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>If you were successful, you'll have something like this:</p> In\u00a0[4]: Copied! <pre>pew_tidy_df\n</pre> pew_tidy_df Out[4]: religion income frequency 0 Agnostic &lt;$10k 27 1 Atheist &lt;$10k 12 2 Buddhist &lt;$10k 27 3 Catholic &lt;$10k 418 4 Don\u2019t know/refused &lt;$10k 15 ... ... ... ... 175 Orthodox Don't know/refused 73 176 Other Christian Don't know/refused 18 177 Other Faiths Don't know/refused 71 178 Other World Religions Don't know/refused 8 179 Unaffiliated Don't know/refused 597 <p>180 rows \u00d7 3 columns</p> <p>This \"tidy\" form is the default form that you want to keep your datasets. It is easy to filter, manipulate, and plot. Many of the visualization libraries we'll use in this course expect the data to be in this form.</p> In\u00a0[5]: Copied! <pre>pew_tidy_df.income.value_counts()\n</pre> pew_tidy_df.income.value_counts() Out[5]: <pre>income\n&lt;$10k                 18\n$10-20k               18\n$20-30k               18\n$30-40k               18\n$40-50k               18\n$50-75k               18\n$75-100k              18\n$100-150k             18\n&gt;150k                 18\nDon't know/refused    18\nName: count, dtype: int64</pre> <p>These were the column names in the original non-tidy data. The value can take only one of these income ranges and thus it is a categorical data. What is the data type that pandas use to store this column?</p> In\u00a0[6]: Copied! <pre>pew_tidy_df.income.dtype\n</pre> pew_tidy_df.income.dtype Out[6]: <pre>dtype('O')</pre> <p>The <code>O</code> means that it is an Object data type, which does not have a fixed size like integer or float. The series contains a sort of pointer to the actual text objects. You can actually inspect the amount of memory used by the dataset.</p> In\u00a0[9]: Copied! <pre>pew_tidy_df.memory_usage()\n</pre> pew_tidy_df.memory_usage() Out[9]: <pre>Index         132\nreligion     1440\nincome       1440\nfrequency    1440\ndtype: int64</pre> In\u00a0[10]: Copied! <pre>pew_tidy_df.memory_usage(deep=True)\n</pre> pew_tidy_df.memory_usage(deep=True) Out[10]: <pre>Index          132\nreligion     11260\nincome       10260\nfrequency     1440\ndtype: int64</pre> <p>What's going on with the <code>deep=True</code> option? When you don't specify <code>deep=True</code>, the memory usage method just tells you the amount of memory used by the numpy arrays in the pandas dataframe. When you pass <code>deep=True</code>, it tells you the total amount of memory by including the memory used by all the text objects. So, the <code>religion</code> and <code>income</code> columns occupies almost ten times of memory than the <code>frequency</code> column, which is simply an array of integers.</p> In\u00a0[11]: Copied! <pre>pew_tidy_df.frequency.dtype\n</pre> pew_tidy_df.frequency.dtype Out[11]: <pre>dtype('int64')</pre> <p>Is there any way to save up the memory? Note that there are only 10 categories in the income variable. That means we just need 10 numbers to represent the categories! Of course we need to store the names of each category, but that's just one-time cost. The simplest way to convert a column is using <code>astype</code> method.</p> In\u00a0[12]: Copied! <pre>income_categorical_series = pew_tidy_df.income.astype('category')\n# you can do pew_tidy_df.income = pew_tidy_df.income.astype('category')\n</pre> income_categorical_series = pew_tidy_df.income.astype('category') # you can do pew_tidy_df.income = pew_tidy_df.income.astype('category') <p>Now, this series has the <code>CategoricalDtype</code> dtype.</p> In\u00a0[13]: Copied! <pre>income_categorical_series.dtype\n</pre> income_categorical_series.dtype Out[13]: <pre>CategoricalDtype(categories=['$10-20k', '$100-150k', '$20-30k', '$30-40k', '$40-50k',\n                  '$50-75k', '$75-100k', '&lt;$10k', '&gt;150k',\n                  'Don't know/refused'],\n, ordered=False, categories_dtype=object)</pre> <p>How much memory do we use?</p> In\u00a0[14]: Copied! <pre>income_categorical_series.memory_usage(deep=True)\n</pre> income_categorical_series.memory_usage(deep=True) Out[14]: <pre>1182</pre> <p>Compared with the original column?</p> In\u00a0[15]: Copied! <pre>pew_tidy_df.income.memory_usage(deep=True)\n</pre> pew_tidy_df.income.memory_usage(deep=True) Out[15]: <pre>10392</pre> <p>We have reduced the memory usage by almost 10 fold! Not only that, because now the values are just numbers, it will be much faster to match, filter, manipulate. If your dataset is huge, this can save up a lot of space and time.</p> <p>If the categories have ordering, you can specify the ordering too.</p> In\u00a0[16]: Copied! <pre>from pandas.api.types import CategoricalDtype\nincome_type = CategoricalDtype(categories=[\"Don't know/refused\", '&lt;$10k', '$10-20k', '$20-30k', '$30-40k',\n                                           '$40-50k', '$50-75k', '$75-100k', '$100-150k', '&gt;150k'], ordered=True)\nincome_type\n</pre> from pandas.api.types import CategoricalDtype income_type = CategoricalDtype(categories=[\"Don't know/refused\", '&lt;$10k', '$10-20k', '$20-30k', '$30-40k',                                            '$40-50k', '$50-75k', '$75-100k', '$100-150k', '&gt;150k'], ordered=True) income_type Out[16]: <pre>CategoricalDtype(categories=['Don't know/refused', '&lt;$10k', '$10-20k', '$20-30k',\n                  '$30-40k', '$40-50k', '$50-75k', '$75-100k', '$100-150k',\n                  '&gt;150k'],\n, ordered=True, categories_dtype=object)</pre> In\u00a0[17]: Copied! <pre>pew_tidy_df.income.astype(income_type).dtype\n</pre> pew_tidy_df.income.astype(income_type).dtype Out[17]: <pre>CategoricalDtype(categories=['Don't know/refused', '&lt;$10k', '$10-20k', '$20-30k',\n                  '$30-40k', '$40-50k', '$50-75k', '$75-100k', '$100-150k',\n                  '&gt;150k'],\n, ordered=True, categories_dtype=object)</pre> <p>This data type now allows you to compare and sort based on the ordering.</p> <p>Q: ok, now convert both religion and income columns of <code>pew_tidy_df</code> as categorical dtype (in place) and show that <code>pew_tidy_df</code> now uses much less memory</p> In\u00a0[18]: Copied! <pre># YOUR SOLUTION HERE\n\npew_tidy_df.memory_usage(deep=True)\n</pre> # YOUR SOLUTION HERE  pew_tidy_df.memory_usage(deep=True) Out[18]: <pre>Index         132\nreligion     1883\nincome       1050\nfrequency    1440\ndtype: int64</pre>"},{"location":"m06-data/lab06/#module-6-assignment-data-types-and-tidy-data","title":"Module 6 assignment: Data types and tidy data\u00b6","text":""},{"location":"m06-data/lab06/#tidy-data","title":"Tidy data\u00b6","text":"<p>Let's take a look at this small dataset: https://raw.githubusercontent.com/tidyverse/tidyr/main/data-raw/relig_income.csv</p>"},{"location":"m06-data/lab06/#data-types","title":"Data types\u00b6","text":"<p>Let's talk about data types briefly. Understanding data types is not only important for choosing the right visualizations, but also important for efficient computing and storage of data. You may not have thought about how pandas represent data in memory. A Pandas <code>Dataframe</code> is essentially a bunch of <code>Series</code>, and those <code>Series</code> are essentially <code>numpy</code> arrays. An array may contain a fixed-length items such as integers or variable length items such as strings. Putting some efforts to think about the correct data type can potentially save a lot of memory as well as time.</p> <p>A nice example would be the categorical data type. If you have a variable that only has several possible values, it's essentially a categorical data. Take a look at the <code>income</code> variable.</p>"},{"location":"m06-data/lab06/#if-you-want-to-know-more","title":"If you want to know more\u00b6","text":"<ul> <li>Jean-Nicholas Hould: Tidy Data in Python</li> <li>Stephen Simmons | Pandas from the Inside</li> <li>Data school: How do I make my pandas DataFrame smaller and faster?</li> </ul>"},{"location":"m07-1D/class/","title":"Univariate data","text":""},{"location":"m07-1D/class/#if-you-want-to-know-more","title":"If you want to know more","text":"<ul> <li>https://en.wikipedia.org/wiki/Histogram</li> <li>Head First Statistics very nicely explains basic concepts of statistics as well as statistical visualizations like histogram. </li> <li>Pascal's triangle and binomial coefficient</li> </ul>"},{"location":"m07-1D/lab07/","title":"Module 7: 1D data","text":"Run in Google Colab View on Github View raw on Github In\u00a0[1]: Copied! <pre>import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom vega_datasets import data\n</pre> import numpy as np import pandas as pd import matplotlib.pyplot as plt %matplotlib inline  from vega_datasets import data In\u00a0[2]: Copied! <pre>cars = data.cars()\ncars.head()\n</pre> cars = data.cars() cars.head() Out[2]: Name Miles_per_Gallon Cylinders Displacement Horsepower Weight_in_lbs Acceleration Year Origin 0 chevrolet chevelle malibu 18.0 8 307.0 130.0 3504 12.0 1970-01-01 USA 1 buick skylark 320 15.0 8 350.0 165.0 3693 11.5 1970-01-01 USA 2 plymouth satellite 18.0 8 318.0 150.0 3436 11.0 1970-01-01 USA 3 amc rebel sst 16.0 8 304.0 150.0 3433 12.0 1970-01-01 USA 4 ford torino 17.0 8 302.0 140.0 3449 10.5 1970-01-01 USA <p>Let's consider the <code>Acceleration</code> column as our 1D data. If we ask pandas to plot this series, it'll produce a line graph where the index becomes the horizontal axis.</p> In\u00a0[3]: Copied! <pre>cars.Acceleration.plot()\n</pre> cars.Acceleration.plot() Out[3]: <pre>&lt;Axes: &gt;</pre> <p>Because the index is not really meaningful, drawing line between subsequent values is misleading! This is definitely not the plot we want!</p> <p>It's actually not trivial to use pandas to create an 1-D scatter plot. Instead, we can use <code>matploblib</code>'s <code>scatter</code> function. We can first create an array with zeros that we can use as the vertical coordinates of the points that we will plot.  <code>np.zeros_like</code> returns an array with zeros that matches the shape of the input array.</p> In\u00a0[4]: Copied! <pre>np.zeros_like([1,2,3])\n</pre> np.zeros_like([1,2,3]) Out[4]: <pre>array([0, 0, 0])</pre> <p>Q: now can you create an 1D scatter plot wit <code>matplotlib</code>'s scatter function? Make the figure wide (e.g. set <code>figsize=(10,2)</code>) and then remove the y tics.</p> In\u00a0[5]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[5]: <pre>&lt;matplotlib.collections.PathCollection at 0x129e03fe0&gt;</pre> <p>As you can see, there are lots of occlusions. So this plot cannot show the distribution properly and we would like to fix it. How about adding some jitters? You can use <code>numpy</code>'s <code>random.rand()</code> function to generate random numbers, instead of using an array with zeros.</p> <p>Q: create a jittered 1D scatter plot.</p> In\u00a0[6]: Copied! <pre># jittered_y = ...\n\n# YOUR SOLUTION HERE\n</pre> # jittered_y = ...  # YOUR SOLUTION HERE <p>We can further improve this by adding transparency to the symbols. The transparency option for <code>scatter</code> function is called <code>alpha</code>. Set it to be 0.2.</p> <p>Q: create a jittered 1D scatter plot with transparency (alpha=0.2)</p> In\u00a0[7]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>Another strategy is using empty symbols. The option is <code>facecolors</code>. You can also change the stroke color (<code>edgecolors</code>).</p> <p>Q: create a jittered 1D scatter plot with empty symbols.</p> In\u00a0[8]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[9]: Copied! <pre># TODO: play with N and see what happens. \nN = 100000\nx = np.random.rand(N)\njittered_y = np.random.rand(N)\n\n# YOUR SOLUTION HERE\n</pre> # TODO: play with N and see what happens.  N = 100000 x = np.random.rand(N) jittered_y = np.random.rand(N)  # YOUR SOLUTION HERE In\u00a0[10]: Copied! <pre>cars.Acceleration.hist()\n</pre> cars.Acceleration.hist() Out[10]: <pre>&lt;Axes: &gt;</pre> <p>You can adjust the bin size, which is the main parameter of the histogram.</p> In\u00a0[11]: Copied! <pre>cars.Acceleration.hist(bins=15)\n</pre> cars.Acceleration.hist(bins=15) Out[11]: <pre>&lt;Axes: &gt;</pre> <p>You can even specify the actual bins.</p> In\u00a0[12]: Copied! <pre>bins = [7.5, 8.5, 10, 15, 30]\ncars.Acceleration.hist(bins=bins)\n</pre> bins = [7.5, 8.5, 10, 15, 30] cars.Acceleration.hist(bins=bins) Out[12]: <pre>&lt;Axes: &gt;</pre> <p>Do you see anything funky going on with this histogram? What's wrong? Can you fix it?</p> <p>Q: Explain what's wrong with this histogram and fix it.</p> <p>(hints: do you remember what we discussed regarding histogram? Also pandas documentation does not show the option that you should use. You should take a look at the <code>matplotlib</code>'s documentation.</p> In\u00a0[13]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[13]: <pre>&lt;Axes: &gt;</pre> In\u00a0[14]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[14]: <pre>&lt;Axes: &gt;</pre> In\u00a0[15]: Copied! <pre>import seaborn as sns\nimport altair as alt\n\n# Uncomment the following line if you are using Jupyter notebook\n# alt.renderers.enable('notebook')\n</pre> import seaborn as sns import altair as alt  # Uncomment the following line if you are using Jupyter notebook # alt.renderers.enable('notebook') In\u00a0[16]: Copied! <pre>cars.head()\n</pre> cars.head() Out[16]: Name Miles_per_Gallon Cylinders Displacement Horsepower Weight_in_lbs Acceleration Year Origin 0 chevrolet chevelle malibu 18.0 8 307.0 130.0 3504 12.0 1970-01-01 USA 1 buick skylark 320 15.0 8 350.0 165.0 3693 11.5 1970-01-01 USA 2 plymouth satellite 18.0 8 318.0 150.0 3436 11.0 1970-01-01 USA 3 amc rebel sst 16.0 8 304.0 150.0 3433 12.0 1970-01-01 USA 4 ford torino 17.0 8 302.0 140.0 3449 10.5 1970-01-01 USA In\u00a0[17]: Copied! <pre>sns.stripplot(x='Origin', y='Acceleration', data=cars)\n</pre> sns.stripplot(x='Origin', y='Acceleration', data=cars) Out[17]: <pre>&lt;Axes: xlabel='Origin', ylabel='Acceleration'&gt;</pre> <p>And you can easily add jitters or even create a beeswarm plot.</p> In\u00a0[18]: Copied! <pre>sns.stripplot(x='Origin', y='Acceleration', data=cars, jitter=True)\n</pre> sns.stripplot(x='Origin', y='Acceleration', data=cars, jitter=True) Out[18]: <pre>&lt;Axes: xlabel='Origin', ylabel='Acceleration'&gt;</pre> <p>Seems like European cars tend to have good acceleration. \ud83d\ude0e Let's look at the beeswarm plot, which is a pretty nice option for fairly small datasets.</p> In\u00a0[19]: Copied! <pre>sns.swarmplot(x='Origin', y='Acceleration', data=cars)\n</pre> sns.swarmplot(x='Origin', y='Acceleration', data=cars) Out[19]: <pre>&lt;Axes: xlabel='Origin', ylabel='Acceleration'&gt;</pre> <p>Seaborn also allows you to use colors for another categorical variable. The option is <code>hue</code>.</p> <p>Q: can you create a beeswarm plot where the swarms are grouped by <code>Cylinders</code>, y-values are <code>Acceleration</code>, and colors represent the <code>Origin</code>?</p> In\u00a0[20]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[20]: <pre>&lt;Axes: xlabel='Cylinders', ylabel='Acceleration'&gt;</pre> <p>And of course you can create box plots too.</p> <p>Q: Create boxplots to show the relationships between <code>Cylinders</code> and <code>Acceleration</code>.</p> In\u00a0[21]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[21]: <pre>&lt;Axes: xlabel='Cylinders', ylabel='Acceleration'&gt;</pre> <p>With <code>altair</code>, you're thinking in terms of a whole dataframe, rather than vectors for x or vectors for y. Passing the dataset to <code>Chart</code> creates an empty plot. If you try to run <code>alt.Chart(cars)</code>, it will complain. You need to say what's the visual encoding of the data.</p> In\u00a0[22]: Copied! <pre>alt.Chart(cars)\n</pre> alt.Chart(cars) <pre>\n---------------------------------------------------------------------------\nSchemaValidationError                     Traceback (most recent call last)\nFile ~/git/dataviz-solutions/.venv/lib/python3.12/site-packages/altair/vegalite/v5/api.py:2975, in Chart.to_dict(self, validate, format, ignore, context)\n   2971     copy.data = core.InlineData(values=[{}])  # type: ignore[assignment]\n   2972     return super(Chart, copy).to_dict(\n   2973         validate=validate, format=format, ignore=ignore, context=context\n   2974     )\n-&gt; 2975 return super().to_dict(\n   2976     validate=validate, format=format, ignore=ignore, context=context\n   2977 )\n\nFile ~/git/dataviz-solutions/.venv/lib/python3.12/site-packages/altair/vegalite/v5/api.py:961, in TopLevelMixin.to_dict(self, validate, format, ignore, context)\n    956 context[\"top_level\"] = False\n    958 # TopLevelMixin instance does not necessarily have to_dict defined\n    959 # but due to how Altair is set up this should hold.\n    960 # Too complex to type hint right now\n--&gt; 961 vegalite_spec = super(TopLevelMixin, copy).to_dict(  # type: ignore[misc]\n    962     validate=validate, ignore=ignore, context=dict(context, pre_transform=False)\n    963 )\n    965 # TODO: following entries are added after validation. Should they be validated?\n    966 if is_top_level:\n    967     # since this is top-level we add $schema if it's missing\n\nFile ~/git/dataviz-solutions/.venv/lib/python3.12/site-packages/altair/utils/schemapi.py:978, in SchemaBase.to_dict(self, validate, ignore, context)\n    971         self.validate(result)\n    972     except jsonschema.ValidationError as err:\n    973         # We do not raise `from err` as else the resulting\n    974         # traceback is very long as it contains part\n    975         # of the Vega-Lite schema. It would also first\n    976         # show the less helpful ValidationError instead of\n    977         # the more user friendly SchemaValidationError\n--&gt; 978         raise SchemaValidationError(self, err) from None\n    979 return result\n\nSchemaValidationError: '{'data': {'name': 'data-583e73726c1545c56c203344161a975c'}}' is an invalid value.\n\n'mark' is a required property</pre> Out[22]: <pre>alt.Chart(...)</pre> In\u00a0[23]: Copied! <pre>alt.Chart(cars).mark_point()\n</pre>  alt.Chart(cars).mark_point() Out[23]: <p>So you just see one point. But actually this is not a single point. This is every row of the dataset represented as a point at the same location. Because there is no specification about where to put the points, it simply draws everything on top of each other. Let's specify how to spread them across the horizontal axis.</p> In\u00a0[24]: Copied! <pre>alt.Chart(cars).mark_point().encode(\n    x='Acceleration',\n)\n</pre> alt.Chart(cars).mark_point().encode(     x='Acceleration', ) Out[24]: <p>There is another nice mark called <code>tick</code>:</p> In\u00a0[25]: Copied! <pre>alt.Chart(cars).mark_tick().encode(\n    x='Acceleration',\n)\n</pre> alt.Chart(cars).mark_tick().encode(     x='Acceleration', ) Out[25]: <p>In <code>altair</code>, histogram is not a special type of visualization, but simply a plot with bars where a variable is binned and a counting aggregation function is used.</p> In\u00a0[26]: Copied! <pre>alt.Chart(cars).mark_bar().encode(\n    x=alt.X('Acceleration', bin=True),\n    y='count()'\n)\n</pre> alt.Chart(cars).mark_bar().encode(     x=alt.X('Acceleration', bin=True),     y='count()' )  Out[26]: <p>Q: can you create a 2D scatterplot with <code>Acceleration</code> and <code>Horsepower</code>? Use <code>Origin</code> for the colors.</p> In\u00a0[27]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[27]: <p>Because altair/vega-lite/vega are essentially drawing the chart using javascript (and D3.js), it is very easy to export it on the web. Probably the simplest way is just exporting it into an HTML file: https://altair-viz.github.io/getting_started/starting.html#publishing-your-visualization</p> <p>Save the chart to m07.html and upload it too.</p> In\u00a0[28]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE"},{"location":"m07-1D/lab07/#module-7-1d-data","title":"Module 7: 1D data\u00b6","text":"<p>Let's first import basic packages and then load a dataset from <code>vega_datasets</code> package. If you don't have <code>vega_datasets</code> or <code>altair</code> installed yet, use <code>pip</code> or <code>conda</code> to install them.</p>"},{"location":"m07-1D/lab07/#1d-scatter-plot","title":"1D scatter plot\u00b6","text":""},{"location":"m07-1D/lab07/#what-happens-if-you-have-lots-and-lots-of-points","title":"What happens if you have lots and lots of points?\u00b6","text":"<p>Whatever strategy that you use, it's almost useless if you have too many data points. Let's play with different number of data points and see how it looks.</p> <p>It not only becomes completely useless, it also take a while to draw the plot itself.</p>"},{"location":"m07-1D/lab07/#histogram-and-boxplot","title":"Histogram and boxplot\u00b6","text":"<p>When you have lots of data points, you can't no longer use the scatter plots. Even when you don't have millions of data points, you often want to get a quick summary of the distribution rather than seeing the whole dataset. For 1-D datasets, two major approaches are histogram and boxplot. Histogram is about aggregating and counting the data while boxplot is about summarizing the data. Let's first draw some histograms.</p>"},{"location":"m07-1D/lab07/#histogram","title":"Histogram\u00b6","text":"<p>It's very easy to draw a histogram with pandas.</p>"},{"location":"m07-1D/lab07/#boxplot","title":"Boxplot\u00b6","text":"<p>Boxplot can be created with pandas very easily. Check out the <code>plot</code> documentation: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.plot.html</p> <p>Q: create a box plot of <code>Acceleration</code></p>"},{"location":"m07-1D/lab07/#1d-scatter-plot-with-seaborn-and-altair","title":"1D scatter plot with Seaborn and Altair\u00b6","text":"<p>As you may have noticed, it is not very easy to use <code>matplotlib</code>. The organization of plot functions and parameters are not very systematic. Whenever you draw something, you should search how to do it, what are the parameters you can tweak, etc. You need to manually tweak a lot of things when you work with <code>matplotlib</code>.</p> <p>There are more systematic approaches towards data visualization, such as the \"Grammar of Graphics\". This idea of grammar led to the famous <code>ggplot2</code> (http://ggplot2.tidyverse.org) package in R as well as the Vega &amp; Vega-lite for the web. The grammar-based approach lets you work with tidy data in a natural way, and also lets you approach the data visualization systematically. In other words, they are very cool. \ud83d\ude0e</p> <p>I'd like to introduce two nice Python libraries. One is called <code>seaborn</code> (https://seaborn.pydata.org), which is focused on creating complex statistical data visualizations, and the other is called <code>altair</code> (https://altair-viz.github.io/) and it is a Python library that lets you define a visualization and translates it into vega-lite json.</p> <p>Seaborn would be useful when you are doing exploratory data analysis; altair may be useful if you are thinking about creating and putting an interactive visualization on the web.</p> <p>If you don't have them yet, check the installation page of altair. In <code>conda</code>,</p> <pre><code>$ conda install -c conda-forge altair vega_datasets jupyterlab </code></pre> <p>Let's play with it.</p>"},{"location":"m07-1D/lab07/#beeswarm-plots-with-seaborn","title":"Beeswarm plots with seaborn\u00b6","text":"<p>Seaborn has a built-in function to create 1D scatter plots with multiple categories.</p>"},{"location":"m07-1D/lab07/#altair-basics","title":"Altair basics\u00b6","text":""},{"location":"m08-histogram/class/","title":"Histogram","text":""},{"location":"m08-histogram/class/#number-of-bins-in-a-histogram","title":"Number of bins in a histogram","text":"<ul> <li>Nick Strayer: Histograms are fantastic, but make sure your bin-width/number is chosen well. This is the exact same data, plotted with different bin-widths. Notice that the pattern doesn't necessarily get clearer as bin num increases.<ul> <li>Interactive version on the web</li> </ul> </li> </ul>"},{"location":"m08-histogram/class/#histogram-vs-boxplot","title":"Histogram vs. Boxplot","text":"<p>What are there strengths and weaknesses? </p> <p>As a summarization method, a boxplot may be useful if you want to compare multiple (well-behaving) distributions. Boxplots will immediately and precisely show the median, the quartiles, and the rough range of the distribution. </p> <p>On the other hand, a boxplot may hide details in the distribution, particularly when the distribution is far from a normal distribution. </p>"},{"location":"m08-histogram/lab08/","title":"Module 8: Histogram and CDF","text":"Run in Google Colab View on Github View raw on Github In\u00a0[2]: Copied! <pre>import matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport altair as alt\nimport pandas as pd\n</pre> import matplotlib.pyplot as plt import numpy as np import seaborn as sns import altair as alt import pandas as pd <p>Let's revisit the table from the class</p> Hours Frequency 0-1 4,300 1-3 6,900 3-5 4,900 5-10 2,000 10-24 2,100 <p>You can draw a histogram by just providing bins and counts instead of a list of numbers. So, let's try that.</p> In\u00a0[4]: Copied! <pre>bins = [0, 1, 3, 5, 10, 24]\ndata = {0.5: 4300, 2: 6900, 4: 4900, 7: 2000, 15: 2100}\n</pre> bins = [0, 1, 3, 5, 10, 24] data = {0.5: 4300, 2: 6900, 4: 4900, 7: 2000, 15: 2100} In\u00a0[5]: Copied! <pre>data.keys()\n</pre> data.keys() Out[5]: <pre>dict_keys([0.5, 2, 4, 7, 15])</pre> <p>Q: Draw histogram using this data. Useful query: Google search: matplotlib histogram pre-counted</p> In\u00a0[6]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[6]: <pre>Text(0, 0.5, 'Frequency')</pre> <p>As you can see, the default histogram does not normalize with binwidth and simply shows the counts! This can be very misleading if you are working with variable bin width (e.g. logarithmic bins). So please be mindful about histograms when you work with variable bins.</p> <p>Q: You can fix this by using the <code>density</code> option.</p> In\u00a0[7]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[7]: <pre>Text(0, 0.5, 'Density')</pre> In\u00a0[8]: Copied! <pre>import vega_datasets\n</pre> import vega_datasets In\u00a0[9]: Copied! <pre>movies = vega_datasets.data.movies()\nmovies.head()\n</pre> movies = vega_datasets.data.movies() movies.head() Out[9]: Title US_Gross Worldwide_Gross US_DVD_Sales Production_Budget Release_Date MPAA_Rating Running_Time_min Distributor Source Major_Genre Creative_Type Director Rotten_Tomatoes_Rating IMDB_Rating IMDB_Votes 0 The Land Girls 146083.0 146083.0 NaN 8000000.0 Jun 12 1998 R NaN Gramercy None None None None NaN 6.1 1071.0 1 First Love, Last Rites 10876.0 10876.0 NaN 300000.0 Aug 07 1998 R NaN Strand None Drama None None NaN 6.9 207.0 2 I Married a Strange Person 203134.0 203134.0 NaN 250000.0 Aug 28 1998 None NaN Lionsgate None Comedy None None NaN 6.8 865.0 3 Let's Talk About Sex 373615.0 373615.0 NaN 300000.0 Sep 11 1998 None NaN Fine Line None Comedy None None 13.0 NaN NaN 4 Slam 1009819.0 1087521.0 NaN 1000000.0 Oct 09 1998 R NaN Trimark Original Screenplay Drama Contemporary Fiction None 62.0 3.4 165.0 <p>Let's plot the histogram of IMDB ratings.</p> In\u00a0[10]: Copied! <pre>plt.hist(movies.IMDB_Rating)\n</pre> plt.hist(movies.IMDB_Rating) Out[10]: <pre>(array([  9.,  39.,  76., 133., 293., 599., 784., 684., 323.,  48.]),\n array([1.4 , 2.18, 2.96, 3.74, 4.52, 5.3 , 6.08, 6.86, 7.64, 8.42, 9.2 ]),\n &lt;BarContainer object of 10 artists&gt;)</pre> <p>Did you get an error or a warning? What's going on?</p> <p>The problem is that the column contains <code>NaN</code> (Not a Number) values, which represent missing data points. The following command check whether each value is a <code>NaN</code> and returns the result.</p> In\u00a0[11]: Copied! <pre>movies.IMDB_Rating.isna()\n</pre> movies.IMDB_Rating.isna() Out[11]: <pre>0       False\n1       False\n2       False\n3        True\n4       False\n        ...  \n3196    False\n3197     True\n3198    False\n3199    False\n3200    False\nName: IMDB_Rating, Length: 3201, dtype: bool</pre> <p>As you can see there are a bunch of missing rows. You can count them.</p> In\u00a0[12]: Copied! <pre>sum(movies.IMDB_Rating.isna())\n</pre> sum(movies.IMDB_Rating.isna()) Out[12]: <pre>213</pre> <p>or drop them.</p> In\u00a0[13]: Copied! <pre>IMDB_ratings_nan_dropped = movies.IMDB_Rating.dropna()\nlen(IMDB_ratings_nan_dropped)\n</pre> IMDB_ratings_nan_dropped = movies.IMDB_Rating.dropna() len(IMDB_ratings_nan_dropped) Out[13]: <pre>2988</pre> In\u00a0[14]: Copied! <pre>213 + 2988\n</pre> 213 + 2988 Out[14]: <pre>3201</pre> <p>The <code>dropna</code> can be applied to the dataframe too.</p> <p>Q: drop rows from <code>movies</code> dataframe where either <code>IMDB_Rating</code> or <code>IMDB_Votes</code> is <code>NaN</code>.</p> In\u00a0[15]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[16]: Copied! <pre># Both should be zero.\nprint(sum(movies.IMDB_Rating.isna()), sum(movies.IMDB_Votes.isna()))\n</pre> # Both should be zero. print(sum(movies.IMDB_Rating.isna()), sum(movies.IMDB_Votes.isna())) <pre>0 0\n</pre> <p>How does <code>matplotlib</code> decides the bins? Actually <code>matplotlib</code>'s <code>hist</code> function uses <code>numpy</code>'s <code>histogram</code> function under the hood.</p> <p>Q: Plot the histogram of movie ratings (<code>IMDB_Rating</code>) using the <code>plt.hist()</code> function.</p> In\u00a0[17]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[17]: <pre>Text(0, 0.5, 'Frequency')</pre> <p>Have you noticed that this function returns three objects? Take a look at the documentation here to figure out what they are.</p> <p>To get the returned three objects:</p> In\u00a0[18]: Copied! <pre>n_raw, bins_raw, patches = plt.hist(movies.IMDB_Rating)\nprint(n_raw)\nprint(bins_raw)\n</pre> n_raw, bins_raw, patches = plt.hist(movies.IMDB_Rating) print(n_raw) print(bins_raw) <pre>[  9.  39.  76. 133. 293. 599. 784. 684. 323.  48.]\n[1.4  2.18 2.96 3.74 4.52 5.3  6.08 6.86 7.64 8.42 9.2 ]\n</pre> <p>Here, <code>n_raw</code> contains the values of histograms, i.e., the number of movies in each of the 10 bins. Thus, the sum of the elements in <code>n_raw</code> should be equal to the total number of movies.</p> <p>Q: Test whether the sum of values in <code>n_raw</code> is equal to the number of movies in the <code>movies</code> dataset</p> In\u00a0[19]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <pre>2988.0\n2988\n</pre> Out[19]: <pre>True</pre> <p>The second returned object (<code>bins_raw</code>) is a list containing the edges of the 10 bins: the first bin is [1.4, 2.18], the second [2.18, 2.96], and so on. What's the width of the bins?</p> In\u00a0[20]: Copied! <pre>np.diff(bins_raw)\n</pre> np.diff(bins_raw) Out[20]: <pre>array([0.78, 0.78, 0.78, 0.78, 0.78, 0.78, 0.78, 0.78, 0.78, 0.78])</pre> <p>The width is same as the maximum value minus minimum value, divided by 10.</p> In\u00a0[21]: Copied! <pre>min_rating = min(movies.IMDB_Rating)\nmax_rating = max(movies.IMDB_Rating)\nprint(min_rating, max_rating)\nprint( (max_rating-min_rating) / 10 )\n</pre> min_rating = min(movies.IMDB_Rating) max_rating = max(movies.IMDB_Rating) print(min_rating, max_rating) print( (max_rating-min_rating) / 10 ) <pre>1.4 9.2\n0.7799999999999999\n</pre> <p>Now, let's plot a normalized (density) histogram.</p> In\u00a0[22]: Copied! <pre>n, bins, patches = plt.hist(movies.IMDB_Rating, density=True)\nprint(n)\nprint(bins)\n</pre> n, bins, patches = plt.hist(movies.IMDB_Rating, density=True) print(n) print(bins) <pre>[0.0038616  0.0167336  0.03260907 0.05706587 0.12571654 0.25701095\n 0.33638829 0.29348162 0.13858854 0.0205952 ]\n[1.4  2.18 2.96 3.74 4.52 5.3  6.08 6.86 7.64 8.42 9.2 ]\n</pre> <p>The ten bins do not change. But now <code>n</code> represents the density of the data inside each bin. In other words, the sum of the area of each bar will equal to 1.</p> <p>Q: Can you verify this?</p> <p>Hint: the area of each bar is calculated as height * width. You may get something like 0.99999999999999978 instead of 1.</p> In\u00a0[23]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[23]: <pre>1.0</pre> <p>Anyway, these data generated from the <code>hist</code> function is calculated from <code>numpy</code>'s <code>histogram</code> function. https://docs.scipy.org/doc/numpy/reference/generated/numpy.histogram.html</p> <p>Note that the result of <code>np.histogram()</code> is same as that of <code>plt.hist()</code>.</p> In\u00a0[24]: Copied! <pre>np.histogram(movies.IMDB_Rating)\n</pre> np.histogram(movies.IMDB_Rating) Out[24]: <pre>(array([  9,  39,  76, 133, 293, 599, 784, 684, 323,  48]),\n array([1.4 , 2.18, 2.96, 3.74, 4.52, 5.3 , 6.08, 6.86, 7.64, 8.42, 9.2 ]))</pre> In\u00a0[25]: Copied! <pre>plt.hist(movies.IMDB_Rating)\n</pre> plt.hist(movies.IMDB_Rating) Out[25]: <pre>(array([  9.,  39.,  76., 133., 293., 599., 784., 684., 323.,  48.]),\n array([1.4 , 2.18, 2.96, 3.74, 4.52, 5.3 , 6.08, 6.86, 7.64, 8.42, 9.2 ]),\n &lt;BarContainer object of 10 artists&gt;)</pre> <p>If you look at the documentation, you can see that <code>numpy</code> uses simply 10 as the default number of bins. But you can set it manually or set it to be <code>auto</code>, which is the \"Maximum of the <code>sturges</code> and <code>fd</code> estimators.\". Let's try this <code>auto</code> option.</p> In\u00a0[26]: Copied! <pre>_ = plt.hist(movies.IMDB_Rating, bins='auto')\n</pre> _ = plt.hist(movies.IMDB_Rating, bins='auto') In\u00a0[27]: Copied! <pre>plt.figure(figsize=(10,5))\nplt.subplot(1,2,1)\nmovies.IMDB_Rating.hist(bins=3)\nplt.subplot(1,2,2)\nmovies.IMDB_Rating.hist(bins=20)\n</pre> plt.figure(figsize=(10,5)) plt.subplot(1,2,1) movies.IMDB_Rating.hist(bins=3) plt.subplot(1,2,2) movies.IMDB_Rating.hist(bins=20) Out[27]: <pre>&lt;Axes: &gt;</pre> <p>What does the argument in <code>plt.subplot(1,2,1)</code> mean? If you're not sure, check out: http://stackoverflow.com/questions/3584805/in-matplotlib-what-does-the-argument-mean-in-fig-add-subplot111</p> <p>Q: create 8 subplots (2 rows and 4 columns) with the following <code>binsizes</code>.</p> In\u00a0[28]: Copied! <pre>nbins = [2, 3, 5, 10, 30, 40, 60, 100 ]\nfigsize = (18, 10)\n\n# TODO\n\n# YOUR SOLUTION HERE\n</pre> nbins = [2, 3, 5, 10, 30, 40, 60, 100 ] figsize = (18, 10)  # TODO  # YOUR SOLUTION HERE <p>Do you see the issues with having too few bins or too many bins? In particular, do you notice weird patterns that emerge from <code>bins=30</code>?</p> <p>Q: Can you guess why do you see such patterns? What are the peaks and what are the empty bars? What do they tell you about choosing the binsize in histograms?</p> In\u00a0[29]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[30]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[30]: <pre>40</pre> In\u00a0[33]: Copied! <pre>N = len(movies)\n\nplt.figure(figsize=(12,4))\n\n# Sqrt\nnbins = int(np.sqrt(N))\n\nplt.subplot(1,3,1)\nplt.title(\"SQRT, {} bins\".format(nbins))\nmovies.IMDB_Rating.hist(bins=nbins)\n\n# Sturge's formula\nnbins = int(np.ceil(np.log2(N) + 1))\n\nplt.subplot(1,3,2)\nplt.title(\"Sturge, {} bins\".format(nbins))\nmovies.IMDB_Rating.hist(bins=nbins)\n\n# Freedman-Diaconis\niqr = np.percentile(movies.IMDB_Rating, 75) - np.percentile(movies.IMDB_Rating, 25)\nwidth = 2*iqr/np.power(N, 1/3)\nnbins = int((max(movies.IMDB_Rating) - min(movies.IMDB_Rating)) / width)\n\nplt.subplot(1,3,3)\nplt.title(\"F-D, {} bins\".format(nbins))\nmovies.IMDB_Rating.hist(bins=nbins)\n</pre> N = len(movies)  plt.figure(figsize=(12,4))  # Sqrt nbins = int(np.sqrt(N))  plt.subplot(1,3,1) plt.title(\"SQRT, {} bins\".format(nbins)) movies.IMDB_Rating.hist(bins=nbins)  # Sturge's formula nbins = int(np.ceil(np.log2(N) + 1))  plt.subplot(1,3,2) plt.title(\"Sturge, {} bins\".format(nbins)) movies.IMDB_Rating.hist(bins=nbins)  # Freedman-Diaconis iqr = np.percentile(movies.IMDB_Rating, 75) - np.percentile(movies.IMDB_Rating, 25) width = 2*iqr/np.power(N, 1/3) nbins = int((max(movies.IMDB_Rating) - min(movies.IMDB_Rating)) / width)  plt.subplot(1,3,3) plt.title(\"F-D, {} bins\".format(nbins)) movies.IMDB_Rating.hist(bins=nbins)   Out[33]: <pre>&lt;Axes: title={'center': 'F-D, 35 bins'}&gt;</pre> <p>But we can also use built-in formulae too. Let's try all of them.</p> In\u00a0[34]: Copied! <pre>plt.figure(figsize=(20,4))\n\nplt.subplot(161)\nmovies.IMDB_Rating.hist(bins='fd')\n\nplt.subplot(162)\nmovies.IMDB_Rating.hist(bins='doane')\n\nplt.subplot(163)\nmovies.IMDB_Rating.hist(bins='scott')\n\nplt.subplot(164)\nmovies.IMDB_Rating.hist(bins='rice')\n\nplt.subplot(165)\nmovies.IMDB_Rating.hist(bins='sturges')\n\nplt.subplot(166)\nmovies.IMDB_Rating.hist(bins='sqrt')\n</pre> plt.figure(figsize=(20,4))  plt.subplot(161) movies.IMDB_Rating.hist(bins='fd')  plt.subplot(162) movies.IMDB_Rating.hist(bins='doane')  plt.subplot(163) movies.IMDB_Rating.hist(bins='scott')  plt.subplot(164) movies.IMDB_Rating.hist(bins='rice')  plt.subplot(165) movies.IMDB_Rating.hist(bins='sturges')  plt.subplot(166) movies.IMDB_Rating.hist(bins='sqrt') Out[34]: <pre>&lt;Axes: &gt;</pre> <p>Some are decent, but several of them tend to overestimate the good number of bins. As you have more data points, some of the formulae may overestimate the necessary number of bins. Particularly in our case, because of the precision issue, we shouldn't increase the number of bins too much.</p> <p>So what's the conclusion? use Scott's rule or Sturges' formula?</p> <p>No, I think the take-away is that you should understand how the inappropriate number of bins can mislead you and you should try multiple number of bins to obtain the most accurate picture of the data. Although the 'default' may work in most cases, don't blindly trust it! Don't judge the distribution of a dataset based on a single histogram. Try multiple parameters to get the full picture!</p> In\u00a0[35]: Copied! <pre>movies.IMDB_Rating.hist(cumulative=True)\n</pre> movies.IMDB_Rating.hist(cumulative=True) Out[35]: <pre>&lt;Axes: &gt;</pre> <p>You can also combine with options such as <code>histtype</code> and <code>density</code>.</p> In\u00a0[36]: Copied! <pre>movies.IMDB_Rating.hist(histtype='step', cumulative=True, density=True)\n</pre> movies.IMDB_Rating.hist(histtype='step', cumulative=True, density=True) Out[36]: <pre>&lt;Axes: &gt;</pre> <p>And increase the number of bins.</p> In\u00a0[37]: Copied! <pre>movies.IMDB_Rating.hist(cumulative=True, density=True, bins=1000)\n</pre> movies.IMDB_Rating.hist(cumulative=True, density=True, bins=1000) Out[37]: <pre>&lt;Axes: &gt;</pre> <p>This method works fine. By increasing the number of bins, you can get a CDF in the resolution that you want. But let's also try it manually to better understand what's going on. First, we should sort all the values.</p> In\u00a0[38]: Copied! <pre>rating_sorted = movies.IMDB_Rating.sort_values()\nrating_sorted.head()\n</pre> rating_sorted = movies.IMDB_Rating.sort_values() rating_sorted.head() Out[38]: <pre>1247    1.4\n406     1.5\n1754    1.6\n1590    1.7\n1515    1.7\nName: IMDB_Rating, dtype: float64</pre> <p>We need to know the number of data points,</p> In\u00a0[39]: Copied! <pre>N = len(rating_sorted)\nN\n</pre> N = len(rating_sorted) N Out[39]: <pre>2988</pre> <p>And I think this may be useful for you.</p> In\u00a0[40]: Copied! <pre>n = 50\nnp.linspace(1/n, 1.0, num=n)\n</pre> n = 50 np.linspace(1/n, 1.0, num=n) Out[40]: <pre>array([0.02, 0.04, 0.06, 0.08, 0.1 , 0.12, 0.14, 0.16, 0.18, 0.2 , 0.22,\n       0.24, 0.26, 0.28, 0.3 , 0.32, 0.34, 0.36, 0.38, 0.4 , 0.42, 0.44,\n       0.46, 0.48, 0.5 , 0.52, 0.54, 0.56, 0.58, 0.6 , 0.62, 0.64, 0.66,\n       0.68, 0.7 , 0.72, 0.74, 0.76, 0.78, 0.8 , 0.82, 0.84, 0.86, 0.88,\n       0.9 , 0.92, 0.94, 0.96, 0.98, 1.  ])</pre> <p>Q: now you're ready to draw a proper CDF. Draw the CDF plot of this data.</p> In\u00a0[41]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[42]: Copied! <pre>vega_datasets.data.movies.url\n</pre> vega_datasets.data.movies.url Out[42]: <pre>'https://cdn.jsdelivr.net/npm/vega-datasets@v1.29.0/data/movies.json'</pre> In\u00a0[43]: Copied! <pre># Choose based on your environment\nalt.renderers.enable('jupyterlab')\n# alt.renderers.enable('notebook')\n</pre> # Choose based on your environment alt.renderers.enable('jupyterlab') # alt.renderers.enable('notebook') Out[43]: <pre>RendererRegistry.enable('jupyterlab')</pre> <p>As mentioned before, in <code>altair</code> histogram is not special. It is just a plot that use bars (<code>mark_bar()</code>) where X axis is defined by <code>IMDB_Rating</code> with bins (<code>bin=True</code>), and Y axis is defined by <code>count()</code> aggregation function.</p> In\u00a0[44]: Copied! <pre>alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(\n    alt.X(\"IMDB_Rating:Q\",  bin=True),\n    alt.Y('count()')\n)\n</pre> alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(     alt.X(\"IMDB_Rating:Q\",  bin=True),     alt.Y('count()') ) Out[44]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre> <p>Have you noted that it is <code>IMDB_Rating:Q</code> not <code>IMDB_Rating</code>? This is a shorthand for</p> In\u00a0[45]: Copied! <pre>alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(\n    alt.X('IMDB_Rating', type='quantitative', bin=True),\n    alt.Y(aggregate='count', type='quantitative')\n)\n</pre> alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(     alt.X('IMDB_Rating', type='quantitative', bin=True),     alt.Y(aggregate='count', type='quantitative') ) Out[45]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre> <p>In altair, you want to specify the data types using one of the four categories: quantitative, ordinal, nominal, and temporal. https://altair-viz.github.io/user_guide/encoding.html#data-types</p> <p>Although you can adjust the bins in <code>altair</code>, it does not encourage you to set the bins directly. For instance, although there is <code>step</code> parameter that directly sets the bin size, there are parameters such as <code>maxbins</code> (maximum number of bins) or <code>minstep</code> (minimum allowable step size), or <code>nice</code> (attemps to make the bin boundaries more human-friendly), that encourage you not to specify the bins directly.</p> In\u00a0[46]: Copied! <pre>from altair import Bin\n\nalt.Chart(vega_datasets.data.movies.url).mark_bar().encode(\n    alt.X(\"IMDB_Rating:Q\",  bin=Bin(step=0.09)),\n    alt.Y('count()')\n)\n</pre> from altair import Bin  alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(     alt.X(\"IMDB_Rating:Q\",  bin=Bin(step=0.09)),     alt.Y('count()') ) Out[46]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre> In\u00a0[47]: Copied! <pre>alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(\n    alt.X(\"IMDB_Rating:Q\",  bin=Bin(nice=True, maxbins=20)),\n    alt.Y('count()')\n)\n</pre> alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(     alt.X(\"IMDB_Rating:Q\",  bin=Bin(nice=True, maxbins=20)),     alt.Y('count()') ) Out[47]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre> In\u00a0[48]: Copied! <pre>chart1 = alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(\n    alt.X(\"IMDB_Rating:Q\",  bin=Bin(step=0.1)),\n    alt.Y('count()')\n).properties(\n    width=300,\n    height=150\n)\nchart2 = alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(\n    alt.X(\"IMDB_Rating:Q\",  bin=Bin(nice=True, maxbins=20)),\n    alt.Y('count()')\n).properties(\n    width=300,\n    height=150\n)\n</pre> chart1 = alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(     alt.X(\"IMDB_Rating:Q\",  bin=Bin(step=0.1)),     alt.Y('count()') ).properties(     width=300,     height=150 ) chart2 = alt.Chart(vega_datasets.data.movies.url).mark_bar().encode(     alt.X(\"IMDB_Rating:Q\",  bin=Bin(nice=True, maxbins=20)),     alt.Y('count()') ).properties(     width=300,     height=150 ) In\u00a0[49]: Copied! <pre>chart1 | chart2\n</pre> chart1 | chart2 Out[49]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre> In\u00a0[50]: Copied! <pre>alt.hconcat(chart1, chart2)\n</pre> alt.hconcat(chart1, chart2) Out[50]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre> <p>Vertical commposition?</p> In\u00a0[51]: Copied! <pre>alt.vconcat(chart1, chart2)\n</pre> alt.vconcat(chart1, chart2) Out[51]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre> In\u00a0[52]: Copied! <pre>chart1 &amp; chart2\n</pre> chart1 &amp; chart2 Out[52]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre> <p>Shall we avoid some repetitions? You can define a base empty chart first and then assign encodings later when you put together multiple charts together. Here is an example: https://altair-viz.github.io/user_guide/compound_charts.html#repeated-charts</p> <p>Q: Using the base chart approach to create a 2x2 chart where the top row shows the two histograms of <code>IMDB_Rating</code> with <code>maxbins</code>=10 and 50 respectively, and the bottom row shows another two histograms of <code>IMDB_Votes</code> with <code>maxbins</code>=10 and 50.</p> In\u00a0[53]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE  Out[53]: <pre>&lt;VegaLite 5 object&gt;\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/display_frontends.html#troubleshooting\n</pre>"},{"location":"m08-histogram/lab08/#module-8-histogram-and-cdf","title":"Module 8: Histogram and CDF\u00b6","text":"<p>A deep dive into Histogram and boxplot.</p>"},{"location":"m08-histogram/lab08/#the-tricky-histogram-with-pre-counted-data","title":"The tricky histogram with pre-counted data\u00b6","text":""},{"location":"m08-histogram/lab08/#lets-use-an-actual-dataset","title":"Let's use an actual dataset\u00b6","text":""},{"location":"m08-histogram/lab08/#consequences-of-the-binning-parameter","title":"Consequences of the binning parameter\u00b6","text":"<p>Let's explore the effect of bin size using small multiples. In <code>matplotlib</code>, you can use subplot to put multiple plots into a single figure.</p> <p>For instance, you can do something like:</p>"},{"location":"m08-histogram/lab08/#your-solution-here","title":"YOUR SOLUTION HERE\u00b6","text":""},{"location":"m08-histogram/lab08/#formulae-for-choosing-the-number-of-bins","title":"Formulae for choosing the number of bins.\u00b6","text":"<p>We can manually choose the number of bins based on those formulae.</p>"},{"location":"m08-histogram/lab08/#then-how-should-we-choose-the-number-of-bins","title":"Then, how should we choose the number of bins?\u00b6","text":""},{"location":"m08-histogram/lab08/#cdf-cumulative-distribution-function","title":"CDF (Cumulative distribution function)\u00b6","text":"<p>Drawing a CDF is easy. Because it's very common data visualization, histogram has an option called <code>cumulative</code>.</p>"},{"location":"m08-histogram/lab08/#a-bit-more-histogram-with-altair","title":"A bit more histogram with altair\u00b6","text":"<p>As you may remember, you can get a pandas dataframe from <code>vega_datasets</code> package and use it to create visualizations. But, if you use <code>altair</code>, you can simply pass the URL instead of the actual data.</p>"},{"location":"m08-histogram/lab08/#composing-charts-in-altair","title":"Composing charts in altair\u00b6","text":"<p><code>altair</code> has a very nice way to compose multiple plots. Two histograms side by side? just do the following.</p>"},{"location":"m09-estimation/class/","title":"Estimation","text":""},{"location":"m09-estimation/class/#before-the-class","title":"Before the class","text":"<ul> <li>Khan academy: Logarithmic scale</li> <li>Vi and Sal talk about the mysteries of Benford's law</li> <li>https://en.wikipedia.org/wiki/Interpolation</li> </ul>"},{"location":"m09-estimation/class/#if-you-want-to-know-more","title":"If you want to know more","text":"<ul> <li>An introduction to kernel density estimation</li> <li>Aaron Clauset, Cosma Rohilla Shalizi, M. E. J. Newman, Power-law distributions in empirical data</li> <li>Aaron Clauset: Power-law distributions</li> <li>40 years of boxplots by Hadley Wickham and Lisa Stryjewski</li> </ul>"},{"location":"m09-estimation/kde_drawback/","title":"Kde drawback","text":"In\u00a0[\u00a0]: Copied! <pre>import matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport imageio\nimport os\n</pre> import matplotlib.pyplot as plt import seaborn as sns import numpy as np import imageio import os In\u00a0[\u00a0]: Copied! <pre># Parameters\nn_frames = 30  # Number of frames in the GIF\nn_max_points = 100  # Maximum number of data points\n</pre> # Parameters n_frames = 30  # Number of frames in the GIF n_max_points = 100  # Maximum number of data points In\u00a0[\u00a0]: Copied! <pre># Generate data\nnp.random.seed(42)\ndata = np.random.normal(size=(n_max_points, 2))\n</pre> # Generate data np.random.seed(42) data = np.random.normal(size=(n_max_points, 2)) In\u00a0[\u00a0]: Copied! <pre># Directory for temporary image files\nos.makedirs('temp_images', exist_ok=True)\n</pre> # Directory for temporary image files os.makedirs('temp_images', exist_ok=True) In\u00a0[\u00a0]: Copied! <pre># Create each frame\nfilenames = []\nfor i in range(1, n_frames + 1):\n    n_points = int(i * n_max_points / n_frames)\n    current_data = data[:n_points, :]\n\n    # Create figure with two subplots\n    fig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n    # Scatter plot of data points\n    axs[0].scatter(current_data[:, 0], current_data[:, 1])\n    axs[0].set_title(f\"Data Points (n={n_points})\")\n    \n    # KDE plot\n    if n_points &gt; 1:  # KDE requires at least 2 points\n        sns.kdeplot(x=current_data[:, 0], y=current_data[:, 1], ax=axs[1])\n    axs[1].set_title(\"Kernel Density Estimation\")\n\n    # Save the plot as an image\n    filename = f'temp_images/frame_{i:03d}.png'\n    plt.savefig(filename)\n    plt.close()\n    filenames.append(filename)\n</pre> # Create each frame filenames = [] for i in range(1, n_frames + 1):     n_points = int(i * n_max_points / n_frames)     current_data = data[:n_points, :]      # Create figure with two subplots     fig, axs = plt.subplots(1, 2, figsize=(10, 5))      # Scatter plot of data points     axs[0].scatter(current_data[:, 0], current_data[:, 1])     axs[0].set_title(f\"Data Points (n={n_points})\")          # KDE plot     if n_points &gt; 1:  # KDE requires at least 2 points         sns.kdeplot(x=current_data[:, 0], y=current_data[:, 1], ax=axs[1])     axs[1].set_title(\"Kernel Density Estimation\")      # Save the plot as an image     filename = f'temp_images/frame_{i:03d}.png'     plt.savefig(filename)     plt.close()     filenames.append(filename) In\u00a0[\u00a0]: Copied! <pre># Create GIF\nwith imageio.get_writer('data_kde_animation.gif', mode='I') as writer:\n    for filename in filenames:\n        image = imageio.imread(filename)\n        writer.append_data(image)\n        os.remove(filename)  # Optionally remove the temporary file\n</pre> # Create GIF with imageio.get_writer('data_kde_animation.gif', mode='I') as writer:     for filename in filenames:         image = imageio.imread(filename)         writer.append_data(image)         os.remove(filename)  # Optionally remove the temporary file In\u00a0[\u00a0]: Copied! <pre># Clean up directory\nos.rmdir('temp_images')\n</pre> # Clean up directory os.rmdir('temp_images')"},{"location":"m09-estimation/lab09/","title":"Module 9: Estimation","text":"Run in Google Colab View on Github View raw on Github In\u00a0[1]: Copied! <pre>import matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport altair as alt\nimport pandas as pd\nimport scipy.stats as ss\n%matplotlib inline\n</pre> import matplotlib.pyplot as plt import numpy as np import seaborn as sns import altair as alt import pandas as pd import scipy.stats as ss %matplotlib inline In\u00a0[2]: Copied! <pre>import vega_datasets\n\nmovies = vega_datasets.data.movies()\nmovies.head()\n</pre> import vega_datasets  movies = vega_datasets.data.movies() movies.head() Out[2]: Title US_Gross Worldwide_Gross US_DVD_Sales Production_Budget Release_Date MPAA_Rating Running_Time_min Distributor Source Major_Genre Creative_Type Director Rotten_Tomatoes_Rating IMDB_Rating IMDB_Votes 0 The Land Girls 146083.0 146083.0 NaN 8000000.0 Jun 12 1998 R NaN Gramercy None None None None NaN 6.1 1071.0 1 First Love, Last Rites 10876.0 10876.0 NaN 300000.0 Aug 07 1998 R NaN Strand None Drama None None NaN 6.9 207.0 2 I Married a Strange Person 203134.0 203134.0 NaN 250000.0 Aug 28 1998 None NaN Lionsgate None Comedy None None NaN 6.8 865.0 3 Let's Talk About Sex 373615.0 373615.0 NaN 300000.0 Sep 11 1998 None NaN Fine Line None Comedy None None 13.0 NaN NaN 4 Slam 1009819.0 1087521.0 NaN 1000000.0 Oct 09 1998 R NaN Trimark Original Screenplay Drama Contemporary Fiction None 62.0 3.4 165.0 <p>Although we have learned that it is dangerous to drop any missing values, we will do so for the sake of simplicity. We are also really not trying to draw any conclusions about the data so it is okay. But be careful with missing data in practice!</p> <p>Q: Can you drop rows that have NaN value in either <code>IMDB_Rating</code> or <code>Rotten_Tomatoes_Rating</code>?</p> In\u00a0[3]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>We can plot histogram and KDE using pandas:</p> In\u00a0[4]: Copied! <pre>movies['IMDB_Rating'].hist(bins=10, density=True)\nmovies['IMDB_Rating'].plot(kind='kde')\n</pre> movies['IMDB_Rating'].hist(bins=10, density=True) movies['IMDB_Rating'].plot(kind='kde') Out[4]: <pre>&lt;Axes: ylabel='Density'&gt;</pre> <p>Or using seaborn (two ways):</p> In\u00a0[5]: Copied! <pre>sns.displot(movies['IMDB_Rating'], bins=15, kde=True)\n</pre> sns.displot(movies['IMDB_Rating'], bins=15, kde=True) Out[5]: <pre>&lt;seaborn.axisgrid.FacetGrid at 0x147ba3560&gt;</pre> In\u00a0[6]: Copied! <pre>sns.histplot(movies['IMDB_Rating'], bins=15, kde=True)\n</pre> sns.histplot(movies['IMDB_Rating'], bins=15, kde=True) Out[6]: <pre>&lt;Axes: xlabel='IMDB_Rating', ylabel='Count'&gt;</pre> <p>Q: Can you plot the histogram and KDE of the <code>Rotten_Tomatoes_Rating</code>?</p> In\u00a0[7]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[7]: <pre>&lt;Axes: ylabel='Density'&gt;</pre> <p>Let's study how KDE changes with the size of the data.</p> <p>We can get a random sample using the pandas' <code>sample()</code> function. The <code>kdeplot()</code> function in seaborn provides many options (like kernel types) to do KDE. Let's sample some data points and see how does KDE plot changes with the size of the samples.</p> In\u00a0[8]: Copied! <pre>f = plt.figure(figsize=(15,8))\nplt.xlim(0, 10)\n\nsample_sizes = [10, 50, 100, 500, 1000, 2000]\nfor i, N in enumerate(sample_sizes, 1):\n    plt.subplot(2,3,i)\n    plt.title(\"Sample size: {}\".format(N))\n    for j in range(5):\n        s = movies['IMDB_Rating'].sample(N)\n        sns.kdeplot(s, legend=False)\nplt.tight_layout()\n</pre> f = plt.figure(figsize=(15,8)) plt.xlim(0, 10)  sample_sizes = [10, 50, 100, 500, 1000, 2000] for i, N in enumerate(sample_sizes, 1):     plt.subplot(2,3,i)     plt.title(\"Sample size: {}\".format(N))     for j in range(5):         s = movies['IMDB_Rating'].sample(N)         sns.kdeplot(s, legend=False) plt.tight_layout() <p>We can also draw KDE plots using scikit-learn to change kernel functions.</p> <p>First, we need points to score across.</p> <ul> <li>Remember the np.linspace() function?</li> <li>IMDB scores are only between 1 and 10. Let's create 1000 points between 1 and 10.</li> </ul> In\u00a0[9]: Copied! <pre># use the linespace function to create a list of 1000 values\n# between 1 and 10\n# Store the sequence in a variable called X_vals\n\n# YOUR SOLUTION HERE\n\nX_vals[0:10]\n</pre> # use the linespace function to create a list of 1000 values # between 1 and 10 # Store the sequence in a variable called X_vals  # YOUR SOLUTION HERE  X_vals[0:10]  Out[9]: <pre>array([1.        , 1.00900901, 1.01801802, 1.02702703, 1.03603604,\n       1.04504505, 1.05405405, 1.06306306, 1.07207207, 1.08108108])</pre> In\u00a0[10]: Copied! <pre>X_vals.shape\n</pre> X_vals.shape Out[10]: <pre>(1000,)</pre> <p>Our array needs to have 2 dimensions for score_samples() to work. Let's add another dimension to our array using np.newaxis.</p> In\u00a0[11]: Copied! <pre>X_plot = X_vals[:, np.newaxis]\nX_plot[0:10]\n</pre> X_plot = X_vals[:, np.newaxis] X_plot[0:10] Out[11]: <pre>array([[1.        ],\n       [1.00900901],\n       [1.01801802],\n       [1.02702703],\n       [1.03603604],\n       [1.04504505],\n       [1.05405405],\n       [1.06306306],\n       [1.07207207],\n       [1.08108108]])</pre> In\u00a0[12]: Copied! <pre>X_plot.shape\n</pre> X_plot.shape Out[12]: <pre>(1000, 1)</pre> <p>The KernelDensity function in scikit-learn needs a 2d array for the samples when we fit to the different kernels. Multidimensional scaling is deprecated for pandas series. We can cast the series to a numpy array before adding another dimension to solve this issue.</p> In\u00a0[13]: Copied! <pre>sample = movies['IMDB_Rating'].sample(5)\nprint(sample)\nprint(type(sample))\nprint(sample.shape)\n</pre> sample = movies['IMDB_Rating'].sample(5) print(sample) print(type(sample)) print(sample.shape) <pre>1431    6.2\n1741    6.0\n170     7.3\n1018    6.4\n3121    7.7\nName: IMDB_Rating, dtype: float64\n&lt;class 'pandas.core.series.Series'&gt;\n(5,)\n</pre> In\u00a0[14]: Copied! <pre>sample = np.array(sample)\nprint(sample)\nprint(type(sample))\nprint(sample.shape)\n</pre> sample = np.array(sample) print(sample) print(type(sample)) print(sample.shape) <pre>[6.2 6.  7.3 6.4 7.7]\n&lt;class 'numpy.ndarray'&gt;\n(5,)\n</pre> In\u00a0[15]: Copied! <pre># Add another dimension to sample using np.newaxis\n# Just like we did to X_vals.\n\n# YOUR SOLUTION HERE\n</pre> # Add another dimension to sample using np.newaxis # Just like we did to X_vals.  # YOUR SOLUTION HERE <pre>[[6.2]\n [6. ]\n [7.3]\n [6.4]\n [7.7]]\n&lt;class 'numpy.ndarray'&gt;\n(5, 1)\n</pre> <p>Now, let's plot using the <code>tophat</code> and <code>gaussian</code> kernels using the different sample sizes we used before. We'll do this using scikit-learn's <code>KernelDensity()</code> function.</p> In\u00a0[16]: Copied! <pre>from sklearn.neighbors import KernelDensity\nsample_sizes = [10, 50, 100, 500, 1000, 2000]\n\ndef plot_kde(X_plot, sample_sizes, movies, kernel='gaussian'):\n    for sample_size in sample_sizes:\n        sample = np.array(movies['IMDB_Rating'].sample(sample_size))\n        sample = sample[:, np.newaxis]\n        kde = KernelDensity(kernel=kernel).fit(sample)\n        log_density = kde.score_samples(X_plot)\n        plt.plot(X_plot[:, 0], np.exp(log_density), '-')\n\nfig, ax = plt.subplots(figsize=(10,5))\n\n# Let's look at the gaussian kernel like before\n# put it in the first spot on a 1x2 grid\nplt.subplot(1,2,1)\nplt.title(\"kernel: {}\".format('gaussian'))\nplot_kde(X_plot, sample_sizes, movies)\n# Now let's look at the tophat kernel\n# put it in the second spot on a 1x2 grid\nplt.subplot(1,2,2)\nplt.title(\"kernel: {}\".format('tophat'))\nplot_kde(X_plot, sample_sizes, movies, kernel='tophat')\n</pre> from sklearn.neighbors import KernelDensity sample_sizes = [10, 50, 100, 500, 1000, 2000]  def plot_kde(X_plot, sample_sizes, movies, kernel='gaussian'):     for sample_size in sample_sizes:         sample = np.array(movies['IMDB_Rating'].sample(sample_size))         sample = sample[:, np.newaxis]         kde = KernelDensity(kernel=kernel).fit(sample)         log_density = kde.score_samples(X_plot)         plt.plot(X_plot[:, 0], np.exp(log_density), '-')  fig, ax = plt.subplots(figsize=(10,5))  # Let's look at the gaussian kernel like before # put it in the first spot on a 1x2 grid plt.subplot(1,2,1) plt.title(\"kernel: {}\".format('gaussian')) plot_kde(X_plot, sample_sizes, movies) # Now let's look at the tophat kernel # put it in the second spot on a 1x2 grid plt.subplot(1,2,2) plt.title(\"kernel: {}\".format('tophat')) plot_kde(X_plot, sample_sizes, movies, kernel='tophat') <p>Let's try all kernel types using scikit-learn's <code>KernelDensity()</code>. Plot a 2x3 grid, however, instead of changing sample sizes like above, make each plot use the 6 different kernels supported by scikit-learn. Keep the sample size to 2 so we can more easily see the different distribution shapes. Also, draw a different sample (of 2) 5 times like the plots we drew with seaborn above.</p> <p>Helpful links:</p> <ul> <li><p>https://scikit-learn.org/stable/modules/density.html</p> </li> <li><p>https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KernelDensity.html#sklearn.neighbors.KernelDensity</p> </li> <li><p>https://scikit-learn.org/stable/auto_examples/neighbors/plot_kde_1d.html</p> </li> </ul> In\u00a0[17]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>Q: Let's use Seaborn again. We can play with the bandwidth option. Make sure to set the <code>xlim</code> so that all plots have the same x range, so that we can compare.</p> In\u00a0[18]: Copied! <pre>f = plt.figure(figsize=(15,8))\nbw = ['scott', 'silverman', 0.01, 0.1, 1, 5]\nsample_size = 10\n\n# YOUR SOLUTION HERE\nplt.tight_layout()\n</pre> f = plt.figure(figsize=(15,8)) bw = ['scott', 'silverman', 0.01, 0.1, 1, 5] sample_size = 10  # YOUR SOLUTION HERE plt.tight_layout() <p>Q: What's your takeaway? Explain how bandwidth affects the result of your visualization.</p> In\u00a0[19]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[20]: Copied! <pre>methods = [None, 'none', 'nearest', 'bilinear', 'bicubic', 'spline16',\n           'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric',\n           'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos']\nnp.random.seed(0)\ngrid = np.random.rand(4, 4)\n\nplt.imshow(grid, interpolation=None, cmap='viridis')\n</pre> methods = [None, 'none', 'nearest', 'bilinear', 'bicubic', 'spline16',            'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric',            'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos'] np.random.seed(0) grid = np.random.rand(4, 4)  plt.imshow(grid, interpolation=None, cmap='viridis') Out[20]: <pre>&lt;matplotlib.image.AxesImage at 0x16e753ce0&gt;</pre> In\u00a0[21]: Copied! <pre>plt.imshow(grid, interpolation='bicubic', cmap='viridis')\n</pre> plt.imshow(grid, interpolation='bicubic', cmap='viridis') Out[21]: <pre>&lt;matplotlib.image.AxesImage at 0x17c0dee70&gt;</pre> <p>Let's look at some time series data.</p> In\u00a0[22]: Copied! <pre>co2 = vega_datasets.data.co2_concentration()\nco2.head()\n</pre> co2 = vega_datasets.data.co2_concentration() co2.head() Out[22]: Date CO2 0 1958-03-01 315.70 1 1958-04-01 317.46 2 1958-05-01 317.51 3 1958-07-01 315.86 4 1958-08-01 314.93 In\u00a0[23]: Copied! <pre>co2.Date.dtype\n</pre> co2.Date.dtype Out[23]: <pre>dtype('O')</pre> <p>The <code>Date</code> colume is stored as strings. Let's convert it to <code>datetime</code> so that we can manipulate.</p> In\u00a0[24]: Copied! <pre>pd.to_datetime(co2.Date).head()\n</pre> pd.to_datetime(co2.Date).head() Out[24]: <pre>0   1958-03-01\n1   1958-04-01\n2   1958-05-01\n3   1958-07-01\n4   1958-08-01\nName: Date, dtype: datetime64[ns]</pre> In\u00a0[25]: Copied! <pre>co2.Date = pd.to_datetime(co2.Date)\n</pre> co2.Date = pd.to_datetime(co2.Date) In\u00a0[26]: Copied! <pre>co2.set_index('Date', inplace=True)\nco2.head()\n</pre> co2.set_index('Date', inplace=True) co2.head() Out[26]: CO2 Date 1958-03-01 315.70 1958-04-01 317.46 1958-05-01 317.51 1958-07-01 315.86 1958-08-01 314.93 In\u00a0[27]: Copied! <pre>co2.plot()\n</pre> co2.plot() Out[27]: <pre>&lt;Axes: xlabel='Date'&gt;</pre> <p>\ud83d\ude22</p> In\u00a0[28]: Copied! <pre>recent_co2 = co2.tail(8)\n</pre> recent_co2 = co2.tail(8) In\u00a0[29]: Copied! <pre>recent_co2.plot()\n</pre> recent_co2.plot() Out[29]: <pre>&lt;Axes: xlabel='Date'&gt;</pre> <p>This standard line chart above can be considered as a chart with linear interpolation between data points.</p> <p>The data contains measurements at the resolution of about a month. Let's up-sample the data. This process create new rows that fill the gap between data points. We can use <code>interpolate()</code> function to fill the gaps.</p> In\u00a0[30]: Copied! <pre>upsampled = recent_co2.resample('D')\nupsampled.interpolate().head()\n</pre> upsampled = recent_co2.resample('D') upsampled.interpolate().head() Out[30]: CO2 Date 2017-05-01 409.910000 2017-05-02 409.884516 2017-05-03 409.859032 2017-05-04 409.833548 2017-05-05 409.808065 <p>If we do <code>linear</code> interpolation, we get more or less the same plot, but just with more points.</p> In\u00a0[31]: Copied! <pre>recent_co2.resample('D').interpolate(method='linear').plot(style='+-')\n</pre> recent_co2.resample('D').interpolate(method='linear').plot(style='+-') Out[31]: <pre>&lt;Axes: xlabel='Date'&gt;</pre> In\u00a0[32]: Copied! <pre>recent_co2.plot(style='+-')\n</pre> recent_co2.plot(style='+-') Out[32]: <pre>&lt;Axes: xlabel='Date'&gt;</pre> <p><code>Nearest</code> interpolation is just a process of assigning the nearest value to each missing rows.</p> In\u00a0[33]: Copied! <pre>ax = recent_co2.resample('D').interpolate(method='nearest').plot(style='+-')\nrecent_co2.plot(ax=ax, style='o', ms=5)\n</pre> ax = recent_co2.resample('D').interpolate(method='nearest').plot(style='+-') recent_co2.plot(ax=ax, style='o', ms=5) Out[33]: <pre>&lt;Axes: xlabel='Date'&gt;</pre> <p>Let's try a spline too.</p> In\u00a0[34]: Copied! <pre>ax = recent_co2.resample('D').interpolate(method='spline', order=5).plot(style='+-', lw=1)\nrecent_co2.plot(ax=ax, style='o', ms=5)\n</pre> ax = recent_co2.resample('D').interpolate(method='spline', order=5).plot(style='+-', lw=1) recent_co2.plot(ax=ax, style='o', ms=5) Out[34]: <pre>&lt;Axes: xlabel='Date'&gt;</pre> In\u00a0[35]: Copied! <pre>ax = co2[-100:].plot(lw=0.5)\nco2[-100:].rolling(12).mean().plot(ax=ax)\n</pre> ax = co2[-100:].plot(lw=0.5) co2[-100:].rolling(12).mean().plot(ax=ax) Out[35]: <pre>&lt;Axes: xlabel='Date'&gt;</pre> <p>By default, it consider every data point inside each window equally (<code>win_type=None</code>) but there are many window types supported by <code>scipy</code>. Also by default, the mean value is put at the right end of the window (trailing average).</p> <p>Q: can you create a plot with <code>triang</code> window type and centered average?</p> In\u00a0[36]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[36]: <pre>&lt;Axes: xlabel='Date'&gt;</pre> In\u00a0[37]: Copied! <pre>df = sns.load_dataset(\"anscombe\")\ndf.head()\n</pre> df = sns.load_dataset(\"anscombe\") df.head() Out[37]: dataset x y 0 I 10.0 8.04 1 I 8.0 6.95 2 I 13.0 7.58 3 I 9.0 8.81 4 I 11.0 8.33 <p>All four datasets are in this single data frame and the 'dataset' indicator is one of the columns. This is a form often called tidy data, which is easy to manipulate and plot. In tidy data, each row is an observation and columns are the properties of the observation. Seaborn makes use of the tidy form. Using seaborn's <code>lmplot</code>, you can very quickly examine relationships between variables, separated by some facets of the dataset.</p> <p>Q: Can you produce the plot below using <code>lmplot()</code>?</p> In\u00a0[38]: Copied! <pre># plotting parameters you can use\npalette = \"muted\"\nscatter_kws={\"s\": 50, \"alpha\": 1}\nci=None\nheight=4\n\n# Implement\n\n# YOUR SOLUTION HERE\n</pre> # plotting parameters you can use palette = \"muted\" scatter_kws={\"s\": 50, \"alpha\": 1} ci=None height=4  # Implement  # YOUR SOLUTION HERE Out[38]: <pre>&lt;seaborn.axisgrid.FacetGrid at 0x17c503c80&gt;</pre> <p>Q: So let's look at the relationship between <code>IMDB_Rating</code> and <code>Rotten_Tomatoes_Rating</code> in the <code>movies</code> dataset, separated with respect to <code>MPAA_Rating</code>. Put 4 plots in a row.</p> In\u00a0[39]: Copied! <pre># YOUR SOLUTION HERE\n</pre>  # YOUR SOLUTION HERE Out[39]: <pre>&lt;seaborn.axisgrid.FacetGrid at 0x17c990230&gt;</pre> <p>It may be interesting to dig up what are the movies that have super high Rotten Tomatoes rating and super low IMDB rating (and vice versa)!</p> <p>Another useful method for examining relationships is <code>jointplot()</code>, which produces a scatter plot with two marginal histograms.</p> In\u00a0[40]: Copied! <pre>g = sns.jointplot(x = movies['IMDB_Rating'], y = movies['Rotten_Tomatoes_Rating'], s=10, alpha=0.4, facecolors='none', edgecolor='b')\n</pre> g = sns.jointplot(x = movies['IMDB_Rating'], y = movies['Rotten_Tomatoes_Rating'], s=10, alpha=0.4, facecolors='none', edgecolor='b') In\u00a0[41]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[42]: Copied! <pre>cmap = \"Reds\"\nfill = True         # what happens if you change this?\nthresh = 0        # what happens if you change this?\n\n# YOUR SOLUTION HERE\n</pre> cmap = \"Reds\" fill = True         # what happens if you change this? thresh = 0        # what happens if you change this?  # YOUR SOLUTION HERE <p>Or again using <code>jointplot()</code> by setting the <code>kind</code> parameter. Look, we also have the 1D marginal KDE plots!</p> <p>Q: create jointplot with KDE</p> <p>Note that the X-axis is logarithm of <code>IMDB_Votes</code>.</p> In\u00a0[44]: Copied! <pre>x = np.log(movies['IMDB_Votes'])\n\n# YOUR SOLUTION HERE\n</pre> x = np.log(movies['IMDB_Votes'])  # YOUR SOLUTION HERE Out[44]: <pre>&lt;seaborn.axisgrid.JointGrid at 0x150bd8260&gt;</pre>"},{"location":"m09-estimation/lab09/#module-9-estimation","title":"Module 9: Estimation\u00b6","text":"<p>In this lab, we will learn about Kernel Density Estimation (KDE), interpolation, and (briefly) regression.</p>"},{"location":"m09-estimation/lab09/#kernel-density-estimation","title":"Kernel density estimation\u00b6","text":"<p>Let's import the IMDb data.</p>"},{"location":"m09-estimation/lab09/#interpolation","title":"Interpolation\u00b6","text":"<p>One area where interpolation is used a lot is image processing. Play with it!</p> <p>https://matplotlib.org/examples/images_contours_and_fields/interpolation_methods.html</p>"},{"location":"m09-estimation/lab09/#moving-average","title":"Moving average\u00b6","text":"<p>Pandas has a nice method called <code>rolling()</code>: https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.rolling.html</p> <p>It lets you do operations on the <code>rolling</code> windows. For instance, if you want to calculate the moving average, you can simply</p>"},{"location":"m09-estimation/lab09/#examining-relationsips","title":"Examining relationsips\u00b6","text":"<p>Remember Anscombe's quartet? Actually, the dataset is not only included in <code>vega_datasets</code> but also in <code>seaborn</code>.</p>"},{"location":"m09-estimation/lab09/#hexbin-density-plot","title":"Hexbin density plot\u00b6","text":"<p>In 2D, heatmap can be considered as a color-based histogram. You divide the space into bins and show the frequency with colors. A common binning method is the hexagonal bin.</p> <p>We can again use the <code>jointplot()</code> and setting the <code>kind</code> to be <code>hexbin</code>.</p> <p>Q: Can you create one?</p>"},{"location":"m09-estimation/lab09/#2d-kde","title":"2D KDE\u00b6","text":"<p>We can also do 2D KDE using seaborn's <code>kdeplot()</code> function.</p> <p>Q: Can you draw one like this?</p>"},{"location":"m10-logscale/class/","title":"Log scale","text":""},{"location":"m10-logscale/lab10/","title":"Module 10: Logscale","text":"Run in Google Colab View on Github View raw on Github In\u00a0[1]: Copied! <pre>import matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport scipy.stats as ss\nimport vega_datasets\n</pre> import matplotlib.pyplot as plt import pandas as pd import seaborn as sns import numpy as np import scipy.stats as ss import vega_datasets In\u00a0[2]: Copied! <pre>x = np.array([1,    1,   1,  1, 10, 100, 1000])\ny = np.array([1000, 100, 10, 1, 1,  1,   1   ])\nratio = x/y\nprint(ratio)\n</pre> x = np.array([1,    1,   1,  1, 10, 100, 1000]) y = np.array([1000, 100, 10, 1, 1,  1,   1   ]) ratio = x/y print(ratio) <pre>[1.e-03 1.e-02 1.e-01 1.e+00 1.e+01 1.e+02 1.e+03]\n</pre> <p>Q: Plot on the linear scale using the <code>scatter()</code> function. Also draw a horizontal line at ratio=1 for a reference. The x-axis will be simply the data ID that refers to each ratio data point. Y-axis will be the ratio values.</p> In\u00a0[3]: Copied! <pre>X = np.arange(len(ratio))\n\n# YOUR SOLUTION HERE\n</pre> X = np.arange(len(ratio))  # YOUR SOLUTION HERE Out[3]: <pre>Text(0, 0.5, 'Ratio')</pre> <p>Q: Is this a good visualization of the ratio data? Why? Why not? Explain.</p> <p>Q: Can you fix it?</p> In\u00a0[5]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[6]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[6]: Title US_Gross Worldwide_Gross US_DVD_Sales Production_Budget Release_Date MPAA_Rating Running_Time_min Distributor Source Major_Genre Creative_Type Director Rotten_Tomatoes_Rating IMDB_Rating IMDB_Votes 4 Slam 1009819.0 1087521.0 NaN 1000000.0 Oct 09 1998 R NaN Trimark Original Screenplay Drama Contemporary Fiction None 62.0 3.4 165.0 8 Pirates 1641825.0 6341825.0 NaN 40000000.0 Jul 01 1986 R NaN None None None None Roman Polanski 25.0 5.8 3275.0 9 Duel in the Sun 20400000.0 20400000.0 NaN 6000000.0 Dec 31 2046 None NaN None None None None None 86.0 7.0 2906.0 10 Tom Jones 37600000.0 37600000.0 NaN 1000000.0 Oct 07 1963 None NaN None None None None None 81.0 7.0 4035.0 11 Oliver! 37402877.0 37402877.0 NaN 10000000.0 Dec 11 1968 None NaN Sony Pictures None Musical None None 84.0 7.5 9111.0 <p>If you simply call <code>hist()</code> method with a dataframe object, it identifies all the numeric columns and draw a histogram for each.</p> <p>Q: draw all possible histograms of the movie dataframe. Adjust the size of the plots if needed.</p> In\u00a0[7]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>As we can see, a majority of the columns are not normally distributed. In particular, if you look at the worldwide gross variable, you only see a couple of meaningful data from the histogram. Is this a problem of resolution? How about increasing the number of bins?</p> In\u00a0[8]: Copied! <pre>ax = movies[\"Worldwide_Gross\"].hist(bins=200)\nax.set_xlabel(\"World wide gross\")\nax.set_ylabel(\"Frequency\")\n</pre> ax = movies[\"Worldwide_Gross\"].hist(bins=200) ax.set_xlabel(\"World wide gross\") ax.set_ylabel(\"Frequency\") Out[8]: <pre>Text(0, 0.5, 'Frequency')</pre> <p>Maybe a bit more useful, but it doesn't tell anything about the data distribution above certain point. How about changing the vertical scale to logarithmic scale?</p> In\u00a0[9]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[9]: <pre>Text(0, 0.5, 'Frequency')</pre> <p>Now, let's try log-bin. Recall that when plotting histgrams we can specify the edges of bins through the <code>bins</code> parameter. For example, we can specify the edges of bins to [1, 2, 3, ... , 10] as follows.</p> In\u00a0[10]: Copied! <pre>movies[\"IMDB_Rating\"].hist(bins=range(0,11))\n</pre> movies[\"IMDB_Rating\"].hist(bins=range(0,11)) Out[10]: <pre>&lt;Axes: &gt;</pre> <p>Here, we can specify the edges of bins in a similar way. Instead of specifying on the linear scale, we do it on the log space. Some useful resources:</p> <ul> <li>Google query: python log-bin</li> <li>numpy.logspace</li> <li>numpy.linspace vs numpy.logspace</li> </ul> <p>Hint: since $10^{\\text{start}}= \\text{min(Worldwide\\_Gross)}$, $\\text{start} = \\log_{10}(\\text{min(Worldwide\\_Gross)})$</p> In\u00a0[11]: Copied! <pre>min(movies[\"Worldwide_Gross\"])\n</pre> min(movies[\"Worldwide_Gross\"]) Out[11]: <pre>0.0</pre> <p>Because there seems to be movie(s) that made $0, and because log(0) is undefined &amp; log(1) = 0, let's add 1 to the variable.</p> In\u00a0[12]: Copied! <pre>movies[\"Worldwide_Gross\"] = movies[\"Worldwide_Gross\"]+1.0\n</pre> movies[\"Worldwide_Gross\"] = movies[\"Worldwide_Gross\"]+1.0 In\u00a0[13]: Copied! <pre># TODO: specify the edges of bins using np.logspace\n\n# YOUR SOLUTION HERE\n</pre> # TODO: specify the edges of bins using np.logspace  # YOUR SOLUTION HERE Out[13]: <pre>array([1.00000000e+00, 3.14018485e+00, 9.86076088e+00, 3.09646119e+01,\n       9.72346052e+01, 3.05334634e+02, 9.58807191e+02, 3.01083182e+03,\n       9.45456845e+03, 2.96890926e+04, 9.32292387e+04, 2.92757043e+05,\n       9.19311230e+05, 2.88680720e+06, 9.06510822e+06, 2.84661155e+07,\n       8.93888645e+07, 2.80697558e+08, 8.81442219e+08, 2.76789150e+09])</pre> <p>Now we can plot a histgram with log-bin. Set both axis to be log-scale.</p> In\u00a0[14]: Copied! <pre>ax = (movies[\"Worldwide_Gross\"]+1.0).hist(bins=bins)\nax.set_yscale('log')\nax.set_xscale('log')\nax.set_xlabel(\"World wide gross\")\nax.set_ylabel(\"Frequency\")\n</pre> ax = (movies[\"Worldwide_Gross\"]+1.0).hist(bins=bins) ax.set_yscale('log') ax.set_xscale('log') ax.set_xlabel(\"World wide gross\") ax.set_ylabel(\"Frequency\") Out[14]: <pre>Text(0, 0.5, 'Frequency')</pre> <p>What is going on? Is this the right plot?</p> <p>Q: explain and fix</p> In\u00a0[16]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[16]: <pre>Text(0, 0.5, 'Probability density')</pre> In\u00a0[17]: Copied! <pre>gross_sorted = movies.Worldwide_Gross.sort_values()\nN = len(gross_sorted)\nY = np.linspace(1/N, 1, num=N)\nplt.xlabel(\"World wide gross\")\nplt.ylabel(\"Empirical CDF\")\n_ = plt.plot(gross_sorted, Y)\n</pre> gross_sorted = movies.Worldwide_Gross.sort_values() N = len(gross_sorted) Y = np.linspace(1/N, 1, num=N) plt.xlabel(\"World wide gross\") plt.ylabel(\"Empirical CDF\") _ = plt.plot(gross_sorted, Y) <p>Although the movies that are interesting are those with large worldwide gross, we don't see any details about their distribution as they are all close to 1. In other words, CDF sucks at revealing the details of the tail.</p> <p>CCDF is a nice alternative to examine distributions with heavy tails. The idea is same as CDF, but the direction of aggregation is opposite. Because we are starting from the largest value, it can reveal the details of those large values (tail).</p> <p>CCDF is defined as follows:</p> <p>$$ \\bar{F}_X(x) = P(X &gt; x)$$</p> <p>And thus,</p> <p>$$ \\bar{F}_X(x) = P(X &gt; x) = 1 - F_X(x)$$</p> <p>In other words, we can use CDF to calculate CCDF.</p> <p>Q: draw CCDF using the CDF code above.</p> In\u00a0[18]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>How about making the y axis in log scale?</p> In\u00a0[19]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>Although this is technically the correct CCDF plot, there is a very subtle issue. Do you see the vertical line at the rightmost side of the CCDF plot? To understand what's going on, let's look at the Y values of this plot. We used 1 - CDF to calculate CCDF. So,</p> In\u00a0[20]: Copied! <pre>1 - Y\n</pre> 1 - Y Out[20]: <pre>array([9.99556738e-01, 9.99113475e-01, 9.98670213e-01, ...,\n       8.86524823e-04, 4.43262411e-04, 0.00000000e+00])</pre> <p>What happens when we take the log of these values?</p> In\u00a0[21]: Copied! <pre>np.log(1-Y)\n</pre> np.log(1-Y) <pre>/var/folders/d0/wgh1l_5905x4crqpp1b7whz40000gn/T/ipykernel_89007/1767632406.py:1: RuntimeWarning: divide by zero encountered in log\n  np.log(1-Y)\n</pre> Out[21]: <pre>array([-4.43360681e-04, -8.86918018e-04, -1.33067219e-03, ...,\n       -7.02820143e+00, -7.72134861e+00,            -inf])</pre> <p>Because the last value of 1 - Y is 0.0, we got <code>-inf</code> as the log value. That means, the largest value's (let's say $x$) coordinate in our CCDF plot will be $(x, -inf)$ if we use a log scale for our y-axis. And thus we will not be able to see it in the plot. This occurs because we are drawing CDF in a simplified way. In reality, ECDF and ECCDF are step functions and this shouldn't matter. However, because we are drawing a line between the points, we are getting this issue.</p> <p>This is somewhat problematic because the largest value in our dataset can be quite important and therefore we want to see it in the plot!</p> <p>This is why, in practice, we sometimes use \"incorrect\" version of CCDF. We can consider $\\bar{F}_X(x)$ as a \"flipped\" version of CDF.</p> <p>$$ \\bar{F}_X(x) = P(X \\ge x) $$</p> <p>instead of</p> <p>$$ \\bar{F}_X(x) = P(X &gt; x) $$</p> <p>In doing so, we can see the largest value in the data in our CCDF plot. We can also draw the correct version of CCDF, but this quick-and-dirty version is often easier and good enough to show what we want to show.</p> <p>A simple way is just to define the y coordinates as follows:</p> In\u00a0[22]: Copied! <pre>Y = np.linspace( 1.0, 1/N, num=N)\n</pre> Y = np.linspace( 1.0, 1/N, num=N)  <p>Q: Draw a CCDF of worldwide gross data. Use log scale for y-axis.</p> In\u00a0[23]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>A straight line in semilog scale means exponential decay (cf. a straight line in log-log scale means power-law decay). So it seems like the amount of money a movie makes across the world follows roughly an exponential distribution, while there are some outliers that make insane amount of money.</p> <p>Q: Which is the most successful movie in our dataset?</p> <p>You can use the following</p> <ul> <li><code>idxmax()</code>: https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.idxmax.html</li> <li><code>loc</code>: https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.loc.html</li> </ul> In\u00a0[24]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[24]: <pre>Title                                  Avatar\nUS_Gross                          760167650.0\nWorldwide_Gross                  2767891500.0\nUS_DVD_Sales                      146153933.0\nProduction_Budget                 237000000.0\nRelease_Date                      Dec 18 2009\nMPAA_Rating                             PG-13\nRunning_Time_min                          NaN\nDistributor                  20th Century Fox\nSource                    Original Screenplay\nMajor_Genre                            Action\nCreative_Type                 Science Fiction\nDirector                        James Cameron\nRotten_Tomatoes_Rating                   83.0\nIMDB_Rating                               8.3\nIMDB_Votes                           261439.0\nName: 1234, dtype: object</pre>"},{"location":"m10-logscale/lab10/#module-10-logscale","title":"Module 10: Logscale\u00b6","text":"<p>In this module, we will learn why we want to use log scale for some types of data and strategies for using log scale.</p>"},{"location":"m10-logscale/lab10/#ratio-and-logarithm","title":"Ratio and logarithm\u00b6","text":"<p>If you use linear scale to visualize ratios, it can be quite misleading. As learned in the class, ratio values larger than 1 can vary between 1 and infinite, while ratio values smaller than 1 can vary only between 0 and 1. For instance, the ratios of 100:1 (100/1) or 1000:1 (1000/1) are represented as 100 and 1000. The corresponding distances from 1:1 (1) are 99 and 999, respectively. On the other hand, the ratios of 1:100 (1/100) or 1:1000 (1/1000) are represented as 0.01 and 0.001. The corresponding distances from 1:1 (1) are 0.99 and 0.999, respectively. In other words, there is no symmetry between symmetric ratios!</p> <p>You can watch my video Why you should use logarithmic scale when visualizing ratios.</p> <p>To see this clearly, let's first create some ratios.</p>"},{"location":"m10-logscale/lab10/#your-solution-here","title":"YOUR SOLUTION HERE\u00b6","text":""},{"location":"m10-logscale/lab10/#log-binning","title":"Log-binning\u00b6","text":"<p>One way to draw a histogram in log-scale, with a broadly distributed data, is by using log-binning.</p> <p>Let's first see what happens if we do not use the log scale for a dataset with a heavy tail.</p> <p>Q: Load the movie dataset from <code>vega_datasets</code> and remove the NaN rows based on the following columns: <code>IMDB Rating</code>, <code>IMDB Votes</code>, <code>Worldwide_Gross</code>, <code>Rotten Tomatoes Rating</code>.</p>"},{"location":"m10-logscale/lab10/#ccdf","title":"CCDF\u00b6","text":"<p>The cumulative distribution function $F_X(x)$ at $x$ is defined by</p> <p>$$F_X(x) = P(X \\le x),$$</p> <p>which is, in other words, the probability that $X$ takes a value less than or equal to $x$. When empirically calculated (empirical CDF), $F_X(x)$ is the fraction of data points that are less than or equal to $x$. CDF allows us to examine any percentile of the data distribution and is also useful for comparing distributions.</p> <p>However, when the data spans multiple orders of magnitude, CDF may not be useful. Let's try.</p>"},{"location":"m11-highdim/class/","title":"High-dimensional data","text":""},{"location":"m11-highdim/class/#dimensionality-reduction","title":"Dimensionality reduction","text":"<ul> <li>Principal Component Analysis Explained Visually</li> <li>Visualizing MNIST: An Exploration of Dimensionality Reduction</li> <li>Ali Ghodsi: Dimensionality Reduction: A Short Tutorial</li> <li>Elior Cohen: Reducing Dimensionality from Dimensionality Reduction Techniques</li> <li>The Beginner's Guide to Dimensionality Reduction by Matthew Conlen and Fred Hohman</li> </ul>"},{"location":"m11-highdim/class/#t-sne","title":"t-SNE","text":"<ul> <li>Visualizing Data using t-SNE (the original paper)</li> <li>How to Use t-SNE Effectively</li> <li>An illustrated introduction to the t-SNE algorithm</li> </ul>"},{"location":"m11-highdim/lab11/","title":"Module 11: Visualizing high dimensional data","text":"Run in Google Colab View on Github View raw on Github In\u00a0[1]: Copied! <pre>import matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\n\nsns.set_style('white')\n</pre> import matplotlib.pyplot as plt import pandas as pd import seaborn as sns import numpy as np  sns.set_style('white') In\u00a0[2]: Copied! <pre>iris = sns.load_dataset('iris')\niris.head(2)\n</pre> iris = sns.load_dataset('iris') iris.head(2) Out[2]: sepal_length sepal_width petal_length petal_width species 0 5.1 3.5 1.4 0.2 setosa 1 4.9 3.0 1.4 0.2 setosa <p>We get four dimensions (sepal_length, sepal_width, petal_length, petal_width). One direct way to visualize them is to have a scatter plot for each pair of dimensions. We can use the <code>pairplot()</code> function in seaborn to do this.</p> In\u00a0[3]: Copied! <pre>sns.pairplot(iris)\n</pre> sns.pairplot(iris) Out[3]: <pre>&lt;seaborn.axisgrid.PairGrid at 0x15811d250&gt;</pre> <p>By using colors, you can get a much more useful plot.</p> In\u00a0[4]: Copied! <pre>sns.pairplot(iris, hue='species')\n</pre> sns.pairplot(iris, hue='species') Out[4]: <pre>&lt;seaborn.axisgrid.PairGrid at 0x16a10c890&gt;</pre> <p>Seaborn also lets us to specify what to put in the diagonal. When <code>hue</code> is used, it defaults to KDE plot. We can change it back to histogram. See: https://seaborn.pydata.org/generated/seaborn.pairplot.html</p> <p>Q: draw a pairplot with hue and histogram on the diagonal</p> In\u00a0[5]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[5]: <pre>&lt;seaborn.axisgrid.PairGrid at 0x17328f800&gt;</pre> <p>We can use altair to create an interactive scatterplot matrix. Can you create a scatterplot matrix of iris dataset by consulting https://altair-viz.github.io/gallery/scatter_matrix.html?</p> <p>Q: Draw an interactive scatterplot matrix for iris dataset in altair</p> In\u00a0[6]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[6]: In\u00a0[7]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[7]: <pre>&lt;Axes: &gt;</pre> In\u00a0[8]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[8]: <pre>&lt;Axes: &gt;</pre> <p>We can also use altair.</p> In\u00a0[9]: Copied! <pre>iris_transformed = iris.reset_index().melt(['species', 'index'])\nalt.Chart(iris_transformed).mark_line().encode(\n    x='variable:N',\n    y='value:Q',\n    color='species:N',\n    detail='index:N',\n    opacity=alt.value(0.5),\n).properties(width=500)\n</pre> iris_transformed = iris.reset_index().melt(['species', 'index']) alt.Chart(iris_transformed).mark_line().encode(     x='variable:N',     y='value:Q',     color='species:N',     detail='index:N',     opacity=alt.value(0.5), ).properties(width=500) Out[9]: <p>Q: can you explain how <code>iris_transformed</code> is different from the original <code>iris</code> dataset and why do we need to transform in this way?</p> In\u00a0[10]: Copied! <pre>iris.head(2)\n</pre> iris.head(2) Out[10]: sepal_length sepal_width petal_length petal_width species 0 5.1 3.5 1.4 0.2 setosa 1 4.9 3.0 1.4 0.2 setosa <p>This is a four dimensional data. To run the PCA we want to isolate only the numerical columns.</p> In\u00a0[11]: Copied! <pre>features = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']\niris_only_features = iris[features]\niris_only_features.head()\n</pre> features = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width'] iris_only_features = iris[features] iris_only_features.head() Out[11]: sepal_length sepal_width petal_length petal_width 0 5.1 3.5 1.4 0.2 1 4.9 3.0 1.4 0.2 2 4.7 3.2 1.3 0.2 3 4.6 3.1 1.5 0.2 4 5.0 3.6 1.4 0.2 <p>We should first create a PCA object and specify the number of components to obtain. Note that you can obtain more than two principal components.</p> In\u00a0[12]: Copied! <pre>from sklearn.decomposition import PCA\npca = PCA(n_components=2) # set the number of components to 2\n</pre> from sklearn.decomposition import PCA pca = PCA(n_components=2) # set the number of components to 2 <p>Now you can run <code>fit()</code> method to identify principal components.</p> In\u00a0[13]: Copied! <pre>pca_iris_fitted = pca.fit(iris_only_features)\n</pre> pca_iris_fitted = pca.fit(iris_only_features) <p>An important set of numbers that you want to look at is the explained variance ratio.</p> In\u00a0[14]: Copied! <pre>pca_iris_fitted.explained_variance_ratio_\n</pre> pca_iris_fitted.explained_variance_ratio_ Out[14]: <pre>array([0.92461872, 0.05306648])</pre> <p>It tells you how much of the variance in the original dataset is explained by the principal components that you obtained. It seems like the first two components capture more than 95% of the variance in original dataset. This means that the PCA is very effective on this dataset and just using two principal components is a very good approximation to use all dimensions. Now you can use the result to transform the original dataset.</p> In\u00a0[15]: Copied! <pre>iris_pca = pca_iris_fitted.transform(iris_only_features)\niris_pca[:5]\n</pre> iris_pca = pca_iris_fitted.transform(iris_only_features) iris_pca[:5] Out[15]: <pre>array([[-2.68412563,  0.31939725],\n       [-2.71414169, -0.17700123],\n       [-2.88899057, -0.14494943],\n       [-2.74534286, -0.31829898],\n       [-2.72871654,  0.32675451]])</pre> <p>A convenient way to do both fitting and transforming is</p> In\u00a0[16]: Copied! <pre>iris_pca = pca.fit_transform(iris_only_features)\niris_pca[:5]\n</pre> iris_pca = pca.fit_transform(iris_only_features) iris_pca[:5] Out[16]: <pre>array([[-2.68412563,  0.31939725],\n       [-2.71414169, -0.17700123],\n       [-2.88899057, -0.14494943],\n       [-2.74534286, -0.31829898],\n       [-2.72871654,  0.32675451]])</pre> <p>You can see that this transformed matrix has two columns. Each column corresponds to the \"loading\" for one of the principal components.</p> In\u00a0[17]: Copied! <pre>iris_pca_df = pd.DataFrame(data=iris_pca, columns=['PC1', 'PC2'])\niris_pca_df.head()\n</pre> iris_pca_df = pd.DataFrame(data=iris_pca, columns=['PC1', 'PC2']) iris_pca_df.head() Out[17]: PC1 PC2 0 -2.684126 0.319397 1 -2.714142 -0.177001 2 -2.888991 -0.144949 3 -2.745343 -0.318299 4 -2.728717 0.326755 <p>Let's add the species information to the dataframe.</p> <p>Q: add species column to <code>iris_pca_df</code>.</p> In\u00a0[18]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[18]: PC1 PC2 species 0 -2.684126 0.319397 setosa 1 -2.714142 -0.177001 setosa 2 -2.888991 -0.144949 setosa 3 -2.745343 -0.318299 setosa 4 -2.728717 0.326755 setosa <p>Now we can produce a scatterplot based on the two principal components. Well, let's just draw a pairplot.</p> In\u00a0[19]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[19]: <pre>&lt;seaborn.axisgrid.PairGrid at 0x308723620&gt;</pre> <p>The PC1 seems to capture inter-species variation while PC2 seems to capture intra-species variation. \ud83e\uddd0 Interesting!</p> In\u00a0[20]: Copied! <pre>from sklearn.datasets import fetch_olivetti_faces\n\ndataset = fetch_olivetti_faces(shuffle=True)\nfaces = dataset.data\n</pre> from sklearn.datasets import fetch_olivetti_faces  dataset = fetch_olivetti_faces(shuffle=True) faces = dataset.data In\u00a0[21]: Copied! <pre>n_samples, n_features = faces.shape\nprint(n_samples)\nprint(n_features)\n</pre> n_samples, n_features = faces.shape print(n_samples) print(n_features) <pre>400\n4096\n</pre> <p>So, this dataset contains 400 faces, and each of them has 4096 features (=pixels). Let's look at the first face:</p> In\u00a0[22]: Copied! <pre>print(faces[0].shape)\nfaces[0]\n</pre> print(faces[0].shape) faces[0] <pre>(4096,)\n</pre> Out[22]: <pre>array([0.6694215 , 0.6363636 , 0.6487603 , ..., 0.08677686, 0.08264463,\n       0.07438017], dtype=float32)</pre> <p>It's an one-dimensional array with 4096 numbers. But a face should be a two-dimensional picture, right? Use <code>numpy</code>'s <code>reshape()</code> function as well as <code>matplotlib</code>'s <code>imshow()</code> function, transform this one-dimensional array into an appropriate 2-D matrix and draw it to show the face. You probably want to use <code>plt.cm.gray</code> as colormap.</p> <p>Be sure to play with different shapes (e.g. 2 x 2048, 1024 x 4, 128 x 32, and so on) and think about why they look like what they look like. What is the right shape of the array?</p> <p>Q: reshape the one-dimensional array into an appropriate two dimensional array and show the face</p> In\u00a0[23]: Copied! <pre># TODO: draw faces[0] with various shapes. Find the correct dimension. \n# image_shape = (xx, yy)\n\n# YOUR SOLUTION HERE\n</pre> # TODO: draw faces[0] with various shapes. Find the correct dimension.  # image_shape = (xx, yy)  # YOUR SOLUTION HERE Out[23]: <pre>&lt;matplotlib.image.AxesImage at 0x3094cb170&gt;</pre> <p>Let's perform PCA on this dataset.</p> In\u00a0[24]: Copied! <pre>from sklearn.decomposition import PCA\n</pre> from sklearn.decomposition import PCA <p>Set the number of components to 6:</p> In\u00a0[25]: Copied! <pre>n_components=6\npca = PCA(n_components=n_components)\n</pre> n_components=6 pca = PCA(n_components=n_components) <p>Fit the faces data:</p> In\u00a0[26]: Copied! <pre>pca.fit(faces)\n</pre> pca.fit(faces) Out[26]: <pre>PCA(n_components=6)</pre>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.\u00a0\u00a0PCA?Documentation for PCAiFitted<pre>PCA(n_components=6)</pre> <p>PCA has an attribute called <code>components_</code>. It is a $\\text{n-components} \\times \\text{n-features}$ matrix, in our case $6 \\times 4096$. Each row is a component.</p> In\u00a0[27]: Copied! <pre>pca.components_\n</pre> pca.components_ Out[27]: <pre>array([[ 0.00419121,  0.00710952,  0.00933611, ..., -0.00018518,\n        -0.00337968, -0.00318828],\n       [ 0.02859139,  0.03328836,  0.03784649, ..., -0.02962784,\n        -0.027213  , -0.024889  ],\n       [ 0.00135774, -0.00032581, -0.00019797, ..., -0.01541367,\n        -0.0137098 , -0.01188343],\n       [ 0.00112523, -0.00179056, -0.01168219, ...,  0.02943025,\n         0.02781942,  0.02521872],\n       [ 0.02384258,  0.02359162,  0.02216286, ...,  0.04243959,\n         0.04007483,  0.04110369],\n       [ 0.02909828,  0.03130282,  0.02877657, ..., -0.01636213,\n        -0.0163774 , -0.01491205]], dtype=float32)</pre> In\u00a0[28]: Copied! <pre>pca.components_.shape\n</pre> pca.components_.shape Out[28]: <pre>(6, 4096)</pre> <p>We can display the 6 components as images:</p> In\u00a0[29]: Copied! <pre># use the `image_shape` that you defined in the previous question. \n\nfor i, comp in enumerate(pca.components_, 1):\n    plt.subplot(2, 3, i)\n    plt.imshow(comp.reshape(image_shape), cmap=plt.cm.gray, interpolation='gaussian')\n    plt.xticks(())\n    plt.yticks(())\n</pre> # use the `image_shape` that you defined in the previous question.   for i, comp in enumerate(pca.components_, 1):     plt.subplot(2, 3, i)     plt.imshow(comp.reshape(image_shape), cmap=plt.cm.gray, interpolation='gaussian')     plt.xticks(())     plt.yticks(()) <p>\ud83d\ude31 Looks a bit scary...</p> <p>They are the \"principal faces\", which means that, by adding up these images with some appropriate weights, we can get a close approximation of the 400 images in the dataset!</p> <p>We can get the coordinates of the 6 components to understand how each face is composed with the components.</p> In\u00a0[30]: Copied! <pre>faces_pca_transformed = pca.transform(faces)\n</pre> faces_pca_transformed = pca.transform(faces) In\u00a0[31]: Copied! <pre>faces_pca_transformed.shape\n</pre> faces_pca_transformed.shape Out[31]: <pre>(400, 6)</pre> <p><code>faces_r</code> is a $400 \\times 6$ matrix. Each row corresponds to one face, containing the coordinates of the 6 components. For instance, the coordinates for the first face is</p> In\u00a0[32]: Copied! <pre>faces_pca_transformed[0]\n</pre> faces_pca_transformed[0] Out[32]: <pre>array([-0.81575775,  4.144042  ,  2.483271  , -0.90309095, -0.83137465,\n        0.8865826 ], dtype=float32)</pre> <p>It seems that the second component (with coordinate 4.14403343) contributes the most to the first face. Let's display them together and see how similar they are:</p> In\u00a0[33]: Copied! <pre># display the first face image \nplt.subplot(1, 2, 1)\nplt.imshow(faces[0].reshape(image_shape), cmap=plt.cm.gray, interpolation='gaussian')\nplt.xticks(())\nplt.yticks(())\n\n# display the second component\nplt.subplot(1, 2, 2)\nplt.imshow(pca.components_[1].reshape(image_shape), cmap=plt.cm.gray, interpolation='gaussian')\nplt.xticks(())\nplt.yticks(())\n</pre> # display the first face image  plt.subplot(1, 2, 1) plt.imshow(faces[0].reshape(image_shape), cmap=plt.cm.gray, interpolation='gaussian') plt.xticks(()) plt.yticks(())  # display the second component plt.subplot(1, 2, 2) plt.imshow(pca.components_[1].reshape(image_shape), cmap=plt.cm.gray, interpolation='gaussian') plt.xticks(()) plt.yticks(()) Out[33]: <pre>([], [])</pre> <p>We can display the composition of faces in an \"equation\" style:</p> In\u00a0[34]: Copied! <pre>from matplotlib import gridspec\n\ndef display_image(ax, image):\n    ax.imshow(image, cmap=plt.cm.gray, interpolation='nearest')\n    ax.set_xticks(())\n    ax.set_yticks(())\n\ndef display_text(ax, text):\n    ax.text(.5, .5, text, size=12)\n    ax.axis('off')\n\nface_idx = 0\n\nplt.figure(figsize=(16,4))\ngs = gridspec.GridSpec(2, 10, width_ratios=[5,1,1,5,1,1,5,1,1,5])\n\n# display the face\nax = plt.subplot(gs[0])\ndisplay_image(ax, faces[face_idx].reshape(image_shape))\n\n# display the equal sign\nax = plt.subplot(gs[1])\ndisplay_text(ax, r'$=$')\n\n# display the 6 coordinates\nfor coord_i, gs_i in enumerate( [2,5,8,12,15,18] ):\n    ax = plt.subplot(gs[gs_i])\n    display_text( ax, r'$%.3f \\times $' % faces_pca_transformed[face_idx][coord_i] )\n\n# display the 6 components\nfor comp_i, gs_i in enumerate( [3,6,9,13,16,19] ):\n    ax = plt.subplot(gs[gs_i])\n    display_image( ax, pca.components_[comp_i].reshape(image_shape) )\n\n# display the plus sign\nfor gs_i in [4,7,11,14,17]:\n    ax = plt.subplot(gs[gs_i])\n    display_text(ax, r'$+$')\n</pre> from matplotlib import gridspec  def display_image(ax, image):     ax.imshow(image, cmap=plt.cm.gray, interpolation='nearest')     ax.set_xticks(())     ax.set_yticks(())  def display_text(ax, text):     ax.text(.5, .5, text, size=12)     ax.axis('off')  face_idx = 0  plt.figure(figsize=(16,4)) gs = gridspec.GridSpec(2, 10, width_ratios=[5,1,1,5,1,1,5,1,1,5])  # display the face ax = plt.subplot(gs[0]) display_image(ax, faces[face_idx].reshape(image_shape))  # display the equal sign ax = plt.subplot(gs[1]) display_text(ax, r'$=$')  # display the 6 coordinates for coord_i, gs_i in enumerate( [2,5,8,12,15,18] ):     ax = plt.subplot(gs[gs_i])     display_text( ax, r'$%.3f \\times $' % faces_pca_transformed[face_idx][coord_i] )  # display the 6 components for comp_i, gs_i in enumerate( [3,6,9,13,16,19] ):     ax = plt.subplot(gs[gs_i])     display_image( ax, pca.components_[comp_i].reshape(image_shape) )  # display the plus sign for gs_i in [4,7,11,14,17]:     ax = plt.subplot(gs[gs_i])     display_text(ax, r'$+$') <p>We can directly see the results of this addition.</p> In\u00a0[35]: Copied! <pre>f, axes = plt.subplots(1, 6, figsize=(16,4))\n\nfaceid = 0\n\nconstructed_faces = []\nfor i in range(2, 10):\n    constructed_faces.append(np.dot(faces_pca_transformed[faceid][:i], pca.components_[:i]))\n\n# the face that we want to construct. \ndisplay_image(axes[0], faces[0].reshape(image_shape))\n\nfor idx, ax in enumerate(axes[1:]):\n    display_image(ax, constructed_faces[idx].reshape(image_shape))\n</pre> f, axes = plt.subplots(1, 6, figsize=(16,4))  faceid = 0  constructed_faces = [] for i in range(2, 10):     constructed_faces.append(np.dot(faces_pca_transformed[faceid][:i], pca.components_[:i]))  # the face that we want to construct.  display_image(axes[0], faces[0].reshape(image_shape))  for idx, ax in enumerate(axes[1:]):     display_image(ax, constructed_faces[idx].reshape(image_shape)) <p>It becomes more and more real, although quite far with only several components.</p> In\u00a0[36]: Copied! <pre>from sklearn.decomposition import NMF\nn_components=20\nMAX_ITER = 10000\n\n# YOUR SOLUTION HERE\n\nfor i, comp in enumerate(nmf_fitted.components_, 1):\n    plt.subplot(4, 5, i)\n    plt.imshow(comp.reshape(image_shape), cmap=plt.cm.gray, interpolation='gaussian')\n    plt.xticks(())\n    plt.yticks(())\n</pre> from sklearn.decomposition import NMF n_components=20 MAX_ITER = 10000  # YOUR SOLUTION HERE  for i, comp in enumerate(nmf_fitted.components_, 1):     plt.subplot(4, 5, i)     plt.imshow(comp.reshape(image_shape), cmap=plt.cm.gray, interpolation='gaussian')     plt.xticks(())     plt.yticks(())   <p>As you can see here, each 'component' of NMF picks up a certain part of the face (light area), such as eyes, chin, nose, and so on. Very cool.</p> In\u00a0[37]: Copied! <pre>faces_nmf_tranformed = nmf_fitted.transform(faces)\n</pre> faces_nmf_tranformed = nmf_fitted.transform(faces) In\u00a0[38]: Copied! <pre>faces_nmf_tranformed[0]\n</pre> faces_nmf_tranformed[0] Out[38]: <pre>array([0.01088603, 0.01812078, 0.        , 0.00771494, 0.02231103,\n       0.00375471, 0.07526012, 0.00344858, 0.00679955, 0.03952554,\n       0.00696117, 0.        , 0.03756884, 0.        , 0.07927559,\n       0.2600933 , 0.16911623, 0.05870812, 0.16087928, 0.16433261],\n      dtype=float32)</pre> <p>Can you show the reconstructed faces using the first n components, as we did for the PCA?</p> In\u00a0[39]: Copied! <pre>f, axes = plt.subplots(1, 8, figsize=(20,4))\nfaceid = 0\nconstructed_faces = []\n\n\n# YOUR SOLUTION HERE\n</pre> f, axes = plt.subplots(1, 8, figsize=(20,4)) faceid = 0 constructed_faces = []   # YOUR SOLUTION HERE <p>Unlike PCA that keeps superposing positive and negative images, NMF tends to gradually add multiple parts to the image. This is why it is widely used for many decomposing tasks such as detecting topics from documents.</p> In\u00a0[40]: Copied! <pre>from sklearn.manifold import TSNE\nfrom sklearn.manifold import Isomap\nfrom sklearn.manifold import MDS\nfrom sklearn.datasets import load_iris\n\n# YOUR SOLUTION HERE\n</pre> from sklearn.manifold import TSNE from sklearn.manifold import Isomap from sklearn.manifold import MDS from sklearn.datasets import load_iris  # YOUR SOLUTION HERE Out[40]: <pre>&lt;matplotlib.collections.PathCollection at 0x30ae85610&gt;</pre> <p>The hyperparameter <code>perplexity</code> determines how to balance attention between local and global aspects of your data. Changing this parameter (default is 30) may cause drastic changes in the output. Play with multiple values of perplexity.</p> In\u00a0[41]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[41]: <pre>&lt;matplotlib.collections.PathCollection at 0x30b34fd10&gt;</pre> <p>If you want to learn more about t-SNE, play with https://distill.pub/2016/misread-tsne/ and https://experiments.withgoogle.com/visualizing-high-dimensional-space</p> <p>This is a classic dataset of images of handwritten digits. It contains 1797 images with (8*8=64) pixels each.</p> In\u00a0[42]: Copied! <pre>from sklearn.datasets import load_digits\n\ndigits = load_digits()\ndigits.data.shape\n</pre> from sklearn.datasets import load_digits  digits = load_digits() digits.data.shape Out[42]: <pre>(1797, 64)</pre> <p>digits.data stores the images:</p> In\u00a0[43]: Copied! <pre>digits.data[0]\n</pre> digits.data[0] Out[43]: <pre>array([ 0.,  0.,  5., 13.,  9.,  1.,  0.,  0.,  0.,  0., 13., 15., 10.,\n       15.,  5.,  0.,  0.,  3., 15.,  2.,  0., 11.,  8.,  0.,  0.,  4.,\n       12.,  0.,  0.,  8.,  8.,  0.,  0.,  5.,  8.,  0.,  0.,  9.,  8.,\n        0.,  0.,  4., 11.,  0.,  1., 12.,  7.,  0.,  0.,  2., 14.,  5.,\n       10., 12.,  0.,  0.,  0.,  0.,  6., 13., 10.,  0.,  0.,  0.])</pre> <p>and digits.target is the classes (or labels) that the images belong to. There are 10 classes in total.</p> In\u00a0[44]: Copied! <pre>digits.target\n</pre> digits.target Out[44]: <pre>array([0, 1, 2, ..., 8, 9, 8])</pre> <p>Q: use <code>imshow</code> to display the first image.</p> In\u00a0[45]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[45]: <pre>&lt;matplotlib.image.AxesImage at 0x309a2a930&gt;</pre> <p>Let's first reorder the data points according to the handwritten numbers. We can use np.vstack and np.hstack.</p> In\u00a0[46]: Copied! <pre>X = np.vstack([digits.data[digits.target==i]\n               for i in range(10)])\ny = np.hstack([digits.target[digits.target==i]\n               for i in range(10)])\n</pre> X = np.vstack([digits.data[digits.target==i]                for i in range(10)]) y = np.hstack([digits.target[digits.target==i]                for i in range(10)]) <p>Then initialize a tsne model. For the meaning of the parameters see here.</p> In\u00a0[47]: Copied! <pre>tsne = TSNE(n_components=2, init='pca', random_state=0)\n</pre> tsne = TSNE(n_components=2, init='pca', random_state=0) <p>Fit the model on the data.</p> In\u00a0[48]: Copied! <pre>digits_proj = tsne.fit_transform(X)\n</pre> digits_proj = tsne.fit_transform(X) <p>Plot the results. Seaborn's hls palatte provides evenly spaced colors in HLS hue space, we can divide it into 10 colors.</p> In\u00a0[49]: Copied! <pre>palette = np.array(sns.color_palette(\"hls\", 10))\n</pre> palette = np.array(sns.color_palette(\"hls\", 10)) <p>Make a scatter plot of the first component against the second component, with color based on the numbers.</p> In\u00a0[50]: Copied! <pre>plt.figure(figsize = (6,6))\nplt.scatter(digits_proj[:,0], digits_proj[:,1],c=palette[y])\n</pre> plt.figure(figsize = (6,6)) plt.scatter(digits_proj[:,0], digits_proj[:,1],c=palette[y]) Out[50]: <pre>&lt;matplotlib.collections.PathCollection at 0x30ae85130&gt;</pre> <p>We can add some text for each cluster. The place of the text can be the center of the cluster. We can use <code>np.median</code> to find the centers. To simplify things, we can make the code into a function.</p> In\u00a0[51]: Copied! <pre>def plot_scatter(projection):\n    plt.figure(figsize = (6,6))\n    plt.scatter(projection[:,0], projection[:,1],c=palette[y])\n    for i in range(10):\n        # Position of each label.\n        xtext, ytext = np.median(projection[y == i, :], axis=0)\n        txt = plt.text(xtext, ytext, str(i), fontsize=24)\n</pre> def plot_scatter(projection):     plt.figure(figsize = (6,6))     plt.scatter(projection[:,0], projection[:,1],c=palette[y])     for i in range(10):         # Position of each label.         xtext, ytext = np.median(projection[y == i, :], axis=0)         txt = plt.text(xtext, ytext, str(i), fontsize=24) In\u00a0[52]: Copied! <pre>plot_scatter(digits_proj)\n</pre> plot_scatter(digits_proj) In\u00a0[53]: Copied! <pre># ISOMAP\n\n# YOUR SOLUTION HERE\n</pre> # ISOMAP  # YOUR SOLUTION HERE <pre>/Users/yyahn/git/dataviz-solutions/.venv/lib/python3.12/site-packages/sklearn/manifold/_isomap.py:383: UserWarning: The number of connected components of the neighbors graph is 2 &gt; 1. Completing the graph to fit Isomap might be slow. Increase the number of neighbors to avoid this issue.\n  self._fit_transform(X)\n/Users/yyahn/git/dataviz-solutions/.venv/lib/python3.12/site-packages/scipy/sparse/_index.py:108: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive. lil_matrix is more efficient.\n  self._set_intXint(row, col, x.flat[0])\n</pre> In\u00a0[54]: Copied! <pre># MDS\n\n# YOUR SOLUTION HERE\n</pre> # MDS  # YOUR SOLUTION HERE <p>(Optional) Feel free to try UMAP as well! It's a new dimensionality reduction method that is getting the most popular.</p>"},{"location":"m11-highdim/lab11/#module-11-visualizing-high-dimensional-data","title":"Module 11: Visualizing high dimensional data\u00b6","text":""},{"location":"m11-highdim/lab11/#scatterplot-matrix-for-low-high-dimensional-data","title":"Scatterplot matrix for low-high dimensional data\u00b6","text":"<p>In many cases, the number of dimensions is not too large. For instance, the \"Iris\" dataset contains four dimensions of measurements on the three types of iris flower species. It's more than two dimensions, yet still manageable.</p>"},{"location":"m11-highdim/lab11/#parallel-coordinates","title":"Parallel coordinates\u00b6","text":"<p>Another useful visualization you can create with not-so-high-dimensional datasets is parallel coordinate visualization. Actually pandas supports parallel coordinate plots as well as \"Andrews curve\" (you can think of it as a smooth version of parallel coordinate.</p> <ul> <li>https://pandas.pydata.org/pandas-docs/stable/user_guide/visualization.html#parallel-coordinates</li> <li>https://pandas.pydata.org/pandas-docs/stable/user_guide/visualization.html#andrews-curves</li> </ul> <p>Q: Can you draw a parallel coordinate plot and a andrews curve plot of iris dataset?  (I'm using <code>viridis</code> and <code>winter</code> colormap btw)</p>"},{"location":"m11-highdim/lab11/#your-solution-here","title":"YOUR SOLUTION HERE\u00b6","text":""},{"location":"m11-highdim/lab11/#pca","title":"PCA\u00b6","text":"<p>The principal component analysis (PCA) is the most basic dimensionality reduction method. For example, in the Iris dataset we have four variables (<code>sepal_length</code>, <code>sepal_width</code>, <code>petal_length</code>, <code>petal_width</code>). If we can reduce the number of variables to two, then we can easily visualize them in two dimensions.</p> <p>PCA is already implemented in the scikit-learn package, a machine learning library in Python, which should have been included in Anaconda. If you don't have it, install it with:</p> <pre><code>conda install scikit-learn</code></pre> <p>or</p> <pre><code>pip install scikit-learn</code></pre>"},{"location":"m11-highdim/lab11/#pca-with-faces","title":"PCA with faces\u00b6","text":"<p>Let's play with PCA with some faces. \ud83d\ude44\ud83d\ude2c\ud83e\udd13</p>"},{"location":"m11-highdim/lab11/#nmf","title":"NMF\u00b6","text":"<p>There is another pretty cool dimensionality reduction method called NMF (Non-negative matrix factorization). It is widely used in many domains, such as identifying topics in documents, identifying key components in images, and so on. The key idea is by forcing every element in the decomposed matrices positive, NMF breaks something into parts that we can add together.</p> <p>Q: fit the faces data with NMF, set the number of iterations higher than default</p>"},{"location":"m11-highdim/lab11/#t-sne-isomap-and-mds","title":"t-SNE, Isomap, and MDS\u00b6","text":"<p>Isomap, t-SNE, and MDS are nonlinear dimensionality reduction methods. Isomap preserves only the local relationships, MDS tries to preserve everything, and t-SNE is more flexible. t-SNE is very popular especially in machine learning.</p> <p>Let's try t-SNE out with the iris data.</p> <p>Q: Fit-transform the iris data with t-SNE and create a scatterplot of it.</p>"},{"location":"m11-highdim/lab11/#visualizing-the-digits-dataset","title":"Visualizing the Digits dataset\u00b6","text":""},{"location":"m11-highdim/lab11/#comparison-with-isomap-and-mds","title":"Comparison with Isomap and MDS\u00b6","text":"<p>We talked about MDS and Isomap in class as two other manifold learning methods. Sklearn also has implementations for this two algorithms: MDS and Isomap, so the usage is very similar. Examples for using this methods can be found here.</p> <p>Q: Can you make another two plots with these two methods? You only need to change the models and call the <code>plot_scatter</code> function.</p>"},{"location":"m11-highdim/lab11supp-calc_eigenvector/","title":"Module 11: Eigenvalue and eigenvector calculation","text":"Run in Google Colab View on Github View raw on Github In\u00a0[\u00a0]: Copied! <pre>import numpy as np\n</pre> import numpy as np In\u00a0[2]: Copied! <pre># Enter the data\nmat = np.asmatrix([(0,2,1,2,-1),\n                   (2,6,4,5,-1)])\n</pre> # Enter the data mat = np.asmatrix([(0,2,1,2,-1),                    (2,6,4,5,-1)]) In\u00a0[3]: Copied! <pre>mat\n</pre> mat Out[3]: <pre>matrix([[ 0,  2,  1,  2, -1],\n        [ 2,  6,  4,  5, -1]])</pre> In\u00a0[4]: Copied! <pre># Compute the covariance matrix\ncov = np.cov(mat)\n</pre> # Compute the covariance matrix cov = np.cov(mat) In\u00a0[5]: Copied! <pre>cov\n</pre> cov Out[5]: <pre>array([[1.7 , 3.55],\n       [3.55, 7.7 ]])</pre> In\u00a0[6]: Copied! <pre># Compute the eigenvectors and eigenvalues\neigvals, eigvecs = np.linalg.eig(cov)\n</pre> # Compute the eigenvectors and eigenvalues eigvals, eigvecs = np.linalg.eig(cov) In\u00a0[7]: Copied! <pre>eigvals\n</pre> eigvals Out[7]: <pre>array([0.05215104, 9.34784896])</pre> <p>The 2nd eigenvalue is larger, so this is the first principal component.</p> In\u00a0[8]: Copied! <pre>eigvecs\n</pre> eigvecs Out[8]: <pre>array([[-0.90704462, -0.42103452],\n       [ 0.42103452, -0.90704462]])</pre> <p>The 2nd column is the 2nd eigenvector: [ -0.42103452, -0.90704462]. This corresponds to the 2nd eigenvalue. So the first component of this vector is -0.42103452.</p> <p>Let's check!</p> In\u00a0[9]: Copied! <pre>eigvecs[:,1]\n</pre> eigvecs[:,1] Out[9]: <pre>array([-0.42103452, -0.90704462])</pre> <p>If we multiply this vector with the covariance matrix, we should get the vector times the corresponding eigenvalue because</p> <p>$$ A \\vec{v} = \\lambda \\vec{v}$$</p> <p>when $\\vec{v}$ is a eigenvector and $\\lambda$ is the corresponding eigenvalue.</p> In\u00a0[10]: Copied! <pre>cov.dot(eigvecs[:,1])\n</pre> cov.dot(eigvecs[:,1]) Out[10]: <pre>array([-3.93576707, -8.47891608])</pre> In\u00a0[11]: Copied! <pre>eigvals[1] * eigvecs[:,1]\n</pre> eigvals[1] * eigvecs[:,1] Out[11]: <pre>array([-3.93576707, -8.47891608])</pre> <p>Indeed!</p>"},{"location":"m11-highdim/lab11supp-calc_eigenvector/#module-11-eigenvalue-and-eigenvector-calculation","title":"Module 11: Eigenvalue and eigenvector calculation\u00b6","text":""},{"location":"m12-maps/altair_world_choropleth/","title":"Altair world choropleth","text":"In\u00a0[61]: Copied! <pre>import numpy as np\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\n# download from https://bl.ocks.org/mbostock/raw/4090846/world-country-names.tsv\nsome_data = pd.read_csv('world-country-names.tsv', sep='\\t')  \nsome_data.head()\n</pre> import numpy as np import pandas as pd import altair as alt from vega_datasets import data  countries = alt.topo_feature(data.world_110m.url, 'countries')  # download from https://bl.ocks.org/mbostock/raw/4090846/world-country-names.tsv some_data = pd.read_csv('world-country-names.tsv', sep='\\t')   some_data.head() Out[61]: id name 0 -1 Northern Cyprus 1 -2 Kosovo 2 -3 Somaliland 3 4 Afghanistan 4 8 Albania In\u00a0[62]: Copied! <pre>some_data['rate'] = np.random.random(len(some_data))\nsome_data.head()\n</pre> some_data['rate'] = np.random.random(len(some_data)) some_data.head() Out[62]: id name rate 0 -1 Northern Cyprus 0.893815 1 -2 Kosovo 0.033565 2 -3 Somaliland 0.733582 3 4 Afghanistan 0.383214 4 8 Albania 0.411592 In\u00a0[63]: Copied! <pre>alt.Chart(countries).mark_geoshape().encode(\n    color='rate:Q'\n).transform_lookup(\n    lookup='id',\n    from_=alt.LookupData(some_data, 'id', ['rate'])\n).properties(\n    width=800,\n    height=500\n).project('mercator')\n</pre> alt.Chart(countries).mark_geoshape().encode(     color='rate:Q' ).transform_lookup(     lookup='id',     from_=alt.LookupData(some_data, 'id', ['rate']) ).properties(     width=800,     height=500 ).project('mercator') Out[63]: In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"m12-maps/class/","title":"Maps","text":"<ul> <li>Vox: Why all world maps are wrong</li> <li>Pick your favorite from: http://bl.ocks.org/mbostock/3711652 or https://www.jasondavies.com/maps/transition/</li> <li>Play with http://thetruesize.com/</li> <li>Mercator puzzle</li> <li>How the World Map Looks Wildly Different Than You Think</li> <li>After the Map: Cartography, Navigation, and the Transformation of Territory in the Twentieth Century by William Rankin</li> <li>Radical cartography</li> <li>Introduction to Mapping Sciences</li> <li>Choosing a projection</li> </ul>"},{"location":"m12-maps/lab12/","title":"Module 12: Maps","text":"Run in Google Colab View on Github View raw on Github In\u00a0[1]: Copied! <pre>import altair as alt\n\n# saving data into a file rather than embedding into the chart\nalt.data_transformers.enable('json')\n</pre> import altair as alt  # saving data into a file rather than embedding into the chart alt.data_transformers.enable('json') Out[1]: <pre>DataTransformerRegistry.enable('json')</pre> <p>We need a dataset with geographical coordinates. This <code>zipcodes</code> dataset contains the location and zipcode of each zip code area.</p> In\u00a0[2]: Copied! <pre>from vega_datasets import data\n\nzipcodes_url = data.zipcodes.url\nzipcodes = data.zipcodes()\nzipcodes.head()\n</pre> from vega_datasets import data  zipcodes_url = data.zipcodes.url zipcodes = data.zipcodes() zipcodes.head() Out[2]: zip_code latitude longitude city state county 0 00501 40.922326 -72.637078 Holtsville NY Suffolk 1 00544 40.922326 -72.637078 Holtsville NY Suffolk 2 00601 18.165273 -66.722583 Adjuntas PR Adjuntas 3 00602 18.393103 -67.180953 Aguada PR Aguada 4 00603 18.455913 -67.145780 Aguadilla PR Aguadilla In\u00a0[3]: Copied! <pre>zipcodes = data.zipcodes(dtype={'zip_code': 'category'})\nzipcodes.head()\n</pre> zipcodes = data.zipcodes(dtype={'zip_code': 'category'}) zipcodes.head() Out[3]: zip_code latitude longitude city state county 0 00501 40.922326 -72.637078 Holtsville NY Suffolk 1 00544 40.922326 -72.637078 Holtsville NY Suffolk 2 00601 18.165273 -66.722583 Adjuntas PR Adjuntas 3 00602 18.393103 -67.180953 Aguada PR Aguada 4 00603 18.455913 -67.145780 Aguadilla PR Aguadilla In\u00a0[4]: Copied! <pre>zipcodes.zip_code.dtype\n</pre> zipcodes.zip_code.dtype Out[4]: <pre>CategoricalDtype(categories=['00501', '00544', '00601', '00602', '00603', '00604',\n                  '00605', '00606', '00610', '00611',\n                  ...\n                  '99919', '99921', '99922', '99923', '99925', '99926',\n                  '99927', '99928', '99929', '99950'],\n, ordered=False, categories_dtype=object)</pre> <p>Btw, you'll have fewer issues if you pass URL instead of a dataframe to <code>alt.Chart</code>.</p> In\u00a0[5]: Copied! <pre>alt.Chart(zipcodes_url).mark_circle().encode(\n    x='longitude:Q',\n    y='latitude:Q',\n)\n</pre> alt.Chart(zipcodes_url).mark_circle().encode(     x='longitude:Q',     y='latitude:Q', ) Out[5]: <p>Actually this itself is a map projection called Equirectangular projection. This projection (or almost a non-projection) is super straight-forward and doesn't require any processing of the data. So, often it is used to just quickly explore geographical data. As you dig deeper, you still want to think about which map projection fits your need best. Don't just use equirectangular projection without any thoughts!</p> <p>Anyway, let's make it look slighly better by reducing the size of the circles and adjusting the aspect ratio. Q: Can you adjust the width and height?</p> In\u00a0[6]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[6]: <p>But, a much better way to do this is explicitly specifying that they are lat, lng coordinates by using <code>longitude=</code> and <code>latitude=</code>, rather than <code>x=</code> and <code>y=</code>. If you do that, altair automatically adjust the aspect ratio. Q: Can you try it?</p> In\u00a0[7]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[7]: <p>Because the American empire is far-reaching and complicated, the information density of this map is very low (although interesting). Moreover, the US looks twisted because a default projection that is not focused on the US is used.</p> <p>A common projection for visualizing US data is AlbersUSA, which uses Albers (equal-area) projection. This is a standard projection used in United States Geological Survey and the United States Census Bureau. Albers USA contains a composition of US main land, Alaska, and Hawaii.</p> <p>To use it, we  call <code>project</code> method and specify which variables are <code>longitude</code> and <code>latitude</code>.</p> <p>Q: use the <code>project</code> method to draw the map in the AlbersUsa projection.</p> In\u00a0[8]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[8]: <p>Now we're talking. \ud83d\ude0e</p> <p>Let's visualize the large-scale zipcode patterns. We can use the fact that the zipcodes are hierarchically organized. That is, the first digit captures the largest area divisions and the other digits are about smaller geographical divisions.</p> <p>Altair provides some data transformation functionalities. One of them is extracting a substring from a variable.</p> In\u00a0[9]: Copied! <pre>from altair.expr import datum, substring\n\nalt.Chart(zipcodes_url).mark_circle(size=2).transform_calculate(\n    'first_digit', substring(datum.zip_code, 0, 1)\n).encode(\n    longitude='longitude:Q',\n    latitude='latitude:Q',\n    color='first_digit:N',\n).project(\n    type='albersUsa'\n).properties(\n    width=700,\n    height=400,\n)\n</pre> from altair.expr import datum, substring  alt.Chart(zipcodes_url).mark_circle(size=2).transform_calculate(     'first_digit', substring(datum.zip_code, 0, 1) ).encode(     longitude='longitude:Q',     latitude='latitude:Q',     color='first_digit:N', ).project(     type='albersUsa' ).properties(     width=700,     height=400, ) Out[9]: <p>For each row (<code>datum</code>), you obtain the <code>zip_code</code> variable and get the substring (imagine Python list slicing), and then you call the result <code>first_digit</code>. Now, you can use this <code>first_digit</code> variable to color the circles. Also note that we specify <code>first_digit</code> as a nominal variable, not quantitative, to obtain a categorical colormap. But we can also play with it too.</p> <p>Q: Why don't you extract the first two digits, name it as <code>two_digits</code>, and declare that as a quantitative variable? Any interesting patterns? What does it tell us about the history of US?</p> In\u00a0[10]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[10]: <p>Q: also try it with declaring the first two digits as a categorical variable</p> In\u00a0[11]: Copied! <pre>zipcodes\n</pre> zipcodes Out[11]: zip_code latitude longitude city state county 0 00501 40.922326 -72.637078 Holtsville NY Suffolk 1 00544 40.922326 -72.637078 Holtsville NY Suffolk 2 00601 18.165273 -66.722583 Adjuntas PR Adjuntas 3 00602 18.393103 -67.180953 Aguada PR Aguada 4 00603 18.455913 -67.145780 Aguadilla PR Aguadilla ... ... ... ... ... ... ... 42044 99926 55.094325 -131.566827 Metlakatla AK Prince Wales Ketchikan 42045 99927 55.517921 -132.003244 Point Baker AK Prince Wales Ketchikan 42046 99928 55.395359 -131.675370 Ward Cove AK Ketchikan Gateway 42047 99929 56.449893 -132.364407 Wrangell AK Wrangell Petersburg 42048 99950 55.542007 -131.432682 Ketchikan AK Ketchikan Gateway <p>42049 rows \u00d7 6 columns</p> In\u00a0[12]: Copied! <pre># Implement\n\n# YOUR SOLUTION HERE\n</pre> # Implement  # YOUR SOLUTION HERE Out[12]: <p>Btw, you can always click \"view source\" or \"open in Vega Editor\" to look at the json object that defines this visualization. You can embed this json object on your webpage and easily put up an interactive visualization.</p> <p>Q: Can you put a tooltip that displays the zipcode when you mouse-over?</p> In\u00a0[13]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[13]: In\u00a0[14]: Copied! <pre>zipcodes\n</pre> zipcodes Out[14]: zip_code latitude longitude city state county 0 00501 40.922326 -72.637078 Holtsville NY Suffolk 1 00544 40.922326 -72.637078 Holtsville NY Suffolk 2 00601 18.165273 -66.722583 Adjuntas PR Adjuntas 3 00602 18.393103 -67.180953 Aguada PR Aguada 4 00603 18.455913 -67.145780 Aguadilla PR Aguadilla ... ... ... ... ... ... ... 42044 99926 55.094325 -131.566827 Metlakatla AK Prince Wales Ketchikan 42045 99927 55.517921 -132.003244 Point Baker AK Prince Wales Ketchikan 42046 99928 55.395359 -131.675370 Ward Cove AK Ketchikan Gateway 42047 99929 56.449893 -132.364407 Wrangell AK Wrangell Petersburg 42048 99950 55.542007 -131.432682 Ketchikan AK Ketchikan Gateway <p>42049 rows \u00d7 6 columns</p> In\u00a0[15]: Copied! <pre>usmap = data.us_10m()\nusmap.keys()\n</pre> usmap = data.us_10m() usmap.keys() Out[15]: <pre>dict_keys(['type', 'transform', 'objects', 'arcs'])</pre> In\u00a0[16]: Copied! <pre>usmap['type']\n</pre> usmap['type'] Out[16]: <pre>'Topology'</pre> In\u00a0[17]: Copied! <pre>usmap['transform']\n</pre> usmap['transform'] Out[17]: <pre>{'scale': [0.003589294092944858, 0.0005371535195261037],\n 'translate': [-179.1473400003406, 17.67439566600018]}</pre> <p>This <code>transformation</code> is used to quantize the data and store the coordinates in integer (easier to store than float type numbers).</p> <p>https://github.com/topojson/topojson-specification#212-transforms</p> In\u00a0[18]: Copied! <pre>usmap['objects'].keys()\n</pre> usmap['objects'].keys() Out[18]: <pre>dict_keys(['counties', 'states', 'land'])</pre> <p>This data contains not only county-level boundaries (objects) but also states and land boundaries.</p> In\u00a0[19]: Copied! <pre>usmap['objects']['land']['type'], usmap['objects']['states']['type'], usmap['objects']['counties']['type']\n</pre> usmap['objects']['land']['type'], usmap['objects']['states']['type'], usmap['objects']['counties']['type'] Out[19]: <pre>('MultiPolygon', 'GeometryCollection', 'GeometryCollection')</pre> <p><code>land</code> is a multipolygon (one object) and <code>states</code> and <code>counties</code> contains many geometrics (multipolygons) because there are many states (counties). We can look at a state as a set of arcs that define it. It's <code>id</code> captures the identity of the state and is the key to link to other datasets.</p> In\u00a0[20]: Copied! <pre>state1 = usmap['objects']['states']['geometries'][1]\nstate1\n</pre> state1 = usmap['objects']['states']['geometries'][1] state1 Out[20]: <pre>{'type': 'MultiPolygon',\n 'arcs': [[[10337]],\n  [[10342]],\n  [[10341]],\n  [[10343]],\n  [[10834, 10340]],\n  [[10344]],\n  [[10345]],\n  [[10338]]],\n 'id': 15}</pre> <p>The <code>arcs</code> referred here is defined in <code>usmap['arcs']</code>.</p> In\u00a0[21]: Copied! <pre>usmap['arcs'][:10]\n</pre> usmap['arcs'][:10] Out[21]: <pre>[[[15739, 57220], [0, 0]],\n [[15739, 57220], [29, 62], [47, -273]],\n [[15815, 57009], [-6, -86]],\n [[15809, 56923], [0, 0]],\n [[15809, 56923], [-36, -8], [6, -210], [32, 178]],\n [[15811, 56883], [9, -194], [44, -176], [-29, -151], [-24, -319]],\n [[15811, 56043], [-12, -216], [26, -171]],\n [[15825, 55656], [-2, 1]],\n [[15823, 55657], [-19, 10], [26, -424], [-26, -52]],\n [[15804, 55191], [-30, -72], [-47, -344]]]</pre> <p>It seems pretty daunting to work with this dataset, right? But fortunately people have already built tools to handle such data.</p> In\u00a0[22]: Copied! <pre>states = alt.topo_feature(data.us_10m.url, 'states')\n</pre> states = alt.topo_feature(data.us_10m.url, 'states') In\u00a0[23]: Copied! <pre>states\n</pre> states Out[23]: <pre>UrlData({\n  format: TopoDataFormat({\n    feature: 'states',\n    type: 'topojson'\n  }),\n  url: 'https://cdn.jsdelivr.net/npm/vega-datasets@v1.29.0/data/us-10m.json'\n})</pre> <p>Can you find a mark for geographical shapes from here https://altair-viz.github.io/user_guide/marks/index.html# and draw the states?</p> In\u00a0[24]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[24]: <p>And then project it using the <code>albersUsa</code>?</p> In\u00a0[25]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[25]: <p>Can you do the same thing with counties and draw county boundaries?</p> In\u00a0[26]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[26]: <p>Let's load some county-level unemployment data.</p> In\u00a0[27]: Copied! <pre>unemp_data = data.unemployment(sep='\\t')\nunemp_data.head()\n</pre> unemp_data = data.unemployment(sep='\\t') unemp_data.head() Out[27]: id rate 0 1001 0.097 1 1003 0.091 2 1005 0.134 3 1007 0.121 4 1009 0.099 <p>This dataset has unemployment rate. When? I don't know. We don't care about data provenance here because the goal is quickly trying out choropleth. But if you're working with a real dataset, you should be very sensitive about the provenance of your dataset. Make sure you understand where the data came from and how it was processed.</p> <p>Anyway, for each county specified with <code>id</code>. To combine two datasets, we use \"Lookup transform\" - https://vega.github.io/vega/docs/transforms/lookup/. Essentially, we use the <code>id</code> in the map data to look up (again) <code>id</code> field in the <code>unemp_data</code> and then bring in the <code>rate</code> variable. Then, we can use that <code>rate</code> variable to encode the color of the <code>geoshape</code> mark.</p> In\u00a0[28]: Copied! <pre>alt.Chart(us_counties).mark_geoshape().project(\n    type='albersUsa'\n).transform_lookup(\n    lookup='id',\n    from_=alt.LookupData(unemp_data, 'id', ['rate'])\n).encode(\n    color='rate:Q'\n).properties(\n    width=700,\n    height=400\n)\n</pre> alt.Chart(us_counties).mark_geoshape().project(     type='albersUsa' ).transform_lookup(     lookup='id',     from_=alt.LookupData(unemp_data, 'id', ['rate']) ).encode(     color='rate:Q' ).properties(     width=700,     height=400 ) Out[28]: <p>There you have it, a nice choropleth map. \ud83d\ude0e</p> In\u00a0[30]: Copied! <pre>import pandas as pd\nimport datashader as ds\nfrom datashader import transfer_functions as tf\nfrom colorcet import fire\n</pre> import pandas as pd import datashader as ds from datashader import transfer_functions as tf from colorcet import fire <p>Because the dataset is pretty big, let's use a small sample first. For this visualization, we only keep the dropoff location.</p> In\u00a0[31]: Copied! <pre>nyctaxi_small = pd.read_csv('~/Downloads/archive/nyc_taxi_data_2014.csv', nrows=10000,\n                            usecols=['dropoff_longitude', 'dropoff_latitude'])\nnyctaxi_small.head()\n</pre> nyctaxi_small = pd.read_csv('~/Downloads/archive/nyc_taxi_data_2014.csv', nrows=10000,                             usecols=['dropoff_longitude', 'dropoff_latitude']) nyctaxi_small.head() Out[31]: dropoff_longitude dropoff_latitude 0 -73.982227 40.731790 1 -73.960449 40.763995 2 -73.986626 40.765217 3 -73.979863 40.777050 4 -73.984367 40.720524 <p>Although the dataset is different, we can still follow the example here: https://datashader.org/getting_started/Introduction.html</p> In\u00a0[32]: Copied! <pre>agg = ds.Canvas().points(nyctaxi_small, 'dropoff_longitude', 'dropoff_latitude')\ntf.set_background(tf.shade(agg, cmap=fire),\"black\")\n</pre> agg = ds.Canvas().points(nyctaxi_small, 'dropoff_longitude', 'dropoff_latitude') tf.set_background(tf.shade(agg, cmap=fire),\"black\") Out[32]: <p>Why can't we see anything? Wait, do you see the small dots on the left top? Can that be New York City? Maybe we don't see anything because some people travel very far? or because the dataset has some missing data?</p> <p>Q: Can you first check whether there are NaNs? Then drop them and draw the map again?</p> In\u00a0[33]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[33]: <pre>dropoff_longitude    1\ndropoff_latitude     1\ndtype: int64</pre> In\u00a0[34]: Copied! <pre># drop the rows with NaN and then draw the map again.\n\n# YOUR SOLUTION HERE\n</pre> # drop the rows with NaN and then draw the map again.  # YOUR SOLUTION HERE Out[34]: <p>So it's not about the missing data.</p> <p>Q: Can you identify the issue and draw the map like the following?</p> <p>hint: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.between.html this method may be helpful.</p> In\u00a0[35]: Copied! <pre># You can use multiple cells to figure out what's going on.\n\n# YOUR SOLUTION HERE\n</pre> # You can use multiple cells to figure out what's going on.  # YOUR SOLUTION HERE In\u00a0[36]: Copied! <pre>agg = ds.Canvas().points(nyctaxi_small_filtered, 'dropoff_longitude', 'dropoff_latitude')\ntf.set_background(tf.shade(agg, cmap=fire), \"black\")\n</pre> agg = ds.Canvas().points(nyctaxi_small_filtered, 'dropoff_longitude', 'dropoff_latitude') tf.set_background(tf.shade(agg, cmap=fire), \"black\") Out[36]: <p>Do you see the black empty space at the center? That looks like the Central Park. This is cool, but it'll be awesome if we can explore the data interactively.</p> <p>Ok, now let's get serious by loading the whole dataset. It may take some time. Apply the same data cleaning procedure.</p> In\u00a0[37]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>Can you feed the data directly to datashader to reproduce the static plot, this time with the full data?</p> In\u00a0[38]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[38]: <p>Wow, that's fast. Also it looks cool!</p> <p>Let's try the interactive version from here: https://datashader.org/getting_started/Introduction.html</p> In\u00a0[39]: Copied! <pre>nyctaxi_filtered\n</pre> nyctaxi_filtered Out[39]: dropoff_longitude dropoff_latitude 0 -73.982227 40.731790 1 -73.960449 40.763995 2 -73.986626 40.765217 3 -73.979863 40.777050 4 -73.984367 40.720524 ... ... ... 14999994 -74.000675 40.725737 14999995 -73.991287 40.692535 14999996 -73.776505 40.740790 14999997 -74.005953 40.710922 14999998 -73.972407 40.747463 <p>14751421 rows \u00d7 2 columns</p> <p>We currently only have longitudes and latitudes. We need to conver them into a coordinate system that datashader understands.</p> In\u00a0[40]: Copied! <pre>from datashader.utils import lnglat_to_meters\n\ndf = nyctaxi_filtered\ndf['dropoff_x'], df['dropoff_y'] = lnglat_to_meters(df.dropoff_longitude, df.dropoff_latitude)\n</pre> from datashader.utils import lnglat_to_meters  df = nyctaxi_filtered df['dropoff_x'], df['dropoff_y'] = lnglat_to_meters(df.dropoff_longitude, df.dropoff_latitude)  <pre>/var/folders/y9/6g21ty616b783y993xqz28hr0000gq/T/ipykernel_40065/1009409252.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df['dropoff_x'], df['dropoff_y'] = lnglat_to_meters(df.dropoff_longitude, df.dropoff_latitude)\n/var/folders/y9/6g21ty616b783y993xqz28hr0000gq/T/ipykernel_40065/1009409252.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df['dropoff_x'], df['dropoff_y'] = lnglat_to_meters(df.dropoff_longitude, df.dropoff_latitude)\n</pre> <p>Now we can visualize the data interactively. See https://datashader.org/getting_started/Introduction.html</p> In\u00a0[41]: Copied! <pre>import holoviews as hv\nimport colorcet as cc\n\nfrom holoviews.element.tiles import EsriImagery\nfrom holoviews.operation.datashader import datashade\nhv.extension('bokeh')\n\n# YOUR SOLUTION HERE\n</pre> import holoviews as hv import colorcet as cc  from holoviews.element.tiles import EsriImagery from holoviews.operation.datashader import datashade hv.extension('bokeh')  # YOUR SOLUTION HERE Out[41]: <pre>BokehModel(combine_events=True, render_bundle={'docs_json': {'4d577e04-d836-4d78-ab13-0b8eb85d880b': {'version\u2026</pre> <pre>Task exception was never retrieved\nfuture: &lt;Task finished name='Task-7' coro=&lt;Callback.process_on_change() done, defined at /Users/yyahn/git/dataviz-solutions/.venv/lib/python3.11/site-packages/holoviews/plotting/bokeh/callbacks.py:355&gt; exception=UnsetValueError(\"figure(id='p1017', ...).inner_height doesn't have a value set\")&gt;\nTraceback (most recent call last):\n  File \"/Users/yyahn/git/dataviz-solutions/.venv/lib/python3.11/site-packages/holoviews/plotting/bokeh/callbacks.py\", line 374, in process_on_change\n    msg[attr] = self.resolve_attr_spec(path, cb_obj)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/yyahn/git/dataviz-solutions/.venv/lib/python3.11/site-packages/holoviews/plotting/bokeh/callbacks.py\", line 281, in resolve_attr_spec\n    resolved = getattr(resolved, p, None)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/yyahn/git/dataviz-solutions/.venv/lib/python3.11/site-packages/bokeh/core/property/descriptors.py\", line 283, in __get__\n    raise UnsetValueError(f\"{obj}.{self.name} doesn't have a value set\")\nbokeh.core.property.descriptors.UnsetValueError: figure(id='p1017', ...).inner_height doesn't have a value set\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/yyahn/git/dataviz-solutions/.venv/lib/python3.11/site-packages/holoviews/plotting/bokeh/callbacks.py\", line 379, in process_on_change\n    msg[attr] = self.resolve_attr_spec(path, cb_obj)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/yyahn/git/dataviz-solutions/.venv/lib/python3.11/site-packages/holoviews/plotting/bokeh/callbacks.py\", line 281, in resolve_attr_spec\n    resolved = getattr(resolved, p, None)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/yyahn/git/dataviz-solutions/.venv/lib/python3.11/site-packages/bokeh/core/property/descriptors.py\", line 283, in __get__\n    raise UnsetValueError(f\"{obj}.{self.name} doesn't have a value set\")\nbokeh.core.property.descriptors.UnsetValueError: figure(id='p1017', ...).inner_height doesn't have a value set\n</pre> <p>Q: how many rows (data points) are we visualizing right now?</p> In\u00a0[42]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[42]: <pre>14751421</pre> <p>That's a lot of data points. If we are using a vector format, it is probably hopeless to expect any interactivity because you need to move that many points! Yet, datashader + holoviews + bokeh renders everything almost in real time!</p> <p>from ipyleaflet import Map, Marker</p> <p>center = (52.204793, 360.121558)</p> <p>m = Map(center=center, zoom=15)</p> <p>marker = Marker(location=center, draggable=True) m.add(marker);</p> <p>display(m)</p> <p>marker.location = center</p> <p>ipyleaflet lets you use various basemaps. You can find the list of available basemaps here: https://leaflet-extras.github.io/leaflet-providers/preview/</p> <p>For instance, let's use OpenStreetMap and zoom into the Luddy School building.</p> In\u00a0[66]: Copied! <pre>from ipyleaflet import basemaps\n\ncenter = (39.172681590059604, -86.5233788123735)\nzoom = 17\n\nMap(basemap=basemaps.OpenStreetMap.HOT, center=center, zoom=zoom)\n</pre> from ipyleaflet import basemaps  center = (39.172681590059604, -86.5233788123735) zoom = 17  Map(basemap=basemaps.OpenStreetMap.HOT, center=center, zoom=zoom) Out[66]: <pre>Map(center=[39.172681590059604, -86.5233788123735], controls=(ZoomControl(options=['position', 'zoom_in_text',\u2026</pre> <p>Q: can you identify a combination of location, zoom-level, and basemap to create an interesting(?) map?</p> In\u00a0[67]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE <p>Let's create a heatmap. First create a small list of random points around the center.</p> In\u00a0[70]: Copied! <pre>center\n</pre> center Out[70]: <pre>(39.172681590059604, -86.5233788123735)</pre> In\u00a0[121]: Copied! <pre>random_points = [\n    [\n        uniform(center[0]-0.01, center[0]+0.01), \n        uniform(center[1]-0.01, center[1]+0.01), \n        uniform(0, 5)\n    ] for x in range(100)\n]\nrandom_points[:2]\n</pre> random_points = [     [         uniform(center[0]-0.01, center[0]+0.01),          uniform(center[1]-0.01, center[1]+0.01),          uniform(0, 5)     ] for x in range(100) ] random_points[:2] Out[121]: <pre>[[39.171944747304686, -86.53044665858606, 0.8156528026270821],\n [39.1694065767711, -86.529215155277, 2.0383181623818603]]</pre> <p>Q: using these random points, can you create a heatmap?</p> <p>documentation: https://ipyleaflet.readthedocs.io/en/latest/layers/heatmap.html</p> In\u00a0[126]: Copied! <pre>from ipyleaflet import Map, Heatmap\n\n# YOUR SOLUTION HERE\n</pre> from ipyleaflet import Map, Heatmap  # YOUR SOLUTION HERE Out[126]: <pre>Map(center=[39.172681590059604, -86.5233788123735], controls=(ZoomControl(options=['position', 'zoom_in_text',\u2026</pre>"},{"location":"m12-maps/lab12/#module-12-maps","title":"Module 12: Maps\u00b6","text":"<p>Let's draw some maps. \ud83d\uddfa\ud83e\uddd0</p>"},{"location":"m12-maps/lab12/#a-dotmap-with-altair","title":"A dotmap with Altair\u00b6","text":"<p>Let's start with altair.</p> <p>When your dataset is large, it is nice to enable something called \"json data transformer\" in altair. What it does is, instead of generating and holding the whole dataset in the memory, to transform the dataset and save into a temporary file. This makes the whole plotting process much more efficient. For more information, check out: https://altair-viz.github.io/user_guide/data_transformers.html</p>"},{"location":"m12-maps/lab12/#lets-draw-it","title":"Let's draw it\u00b6","text":"<p>Now we have the dataset loaded and start drawing some plots. Let's say you don't know anything about map projections. What would you try with geographical data? Probably the simplest way is considering (longitude, latitude) as a Cartesian coordinate and directly plot them.</p>"},{"location":"m12-maps/lab12/#choropleth","title":"Choropleth\u00b6","text":"<p>Let's try some choropleth now. Vega datasets have US county / state boundary data (<code>us_10m</code>) and world country boundary data (<code>world-110m</code>). You can take a look at the boundaries on GitHub (they renders topoJSON files):</p> <ul> <li>https://github.com/vega/vega-datasets/blob/main/data/us-10m.json</li> <li>https://github.com/vega/vega-datasets/blob/main/data/world-110m.json</li> </ul> <p>If you click \"Raw\" then you can take a look at the actual file, which is hard to read.</p> <p>Essentially, each file is a large dictionary with the following keys.</p>"},{"location":"m12-maps/lab12/#raster-visualization-with-datashader","title":"Raster visualization with datashader\u00b6","text":"<p>Although many geovisualizations use vector graphics, raster visualization is still useful especially when you deal with images and lots of datapoints. Datashader is a package that aggregates and visualizes a large amount of data very quickly. Given a scene (visualization boundary, resolution, etc.), it quickly aggregate the data and produce pixels and send them to you.</p> <p>To appreciate its power, we need a fairly large dataset. Let's use NYC taxi trip dataset on Kaggle: https://www.kaggle.com/kentonnlp/2014-new-york-city-taxi-trips You can download even bigger trip data from NYC open data website: https://opendata.cityofnewyork.us/data/</p> <p>Ah, and you want to install the datashader, bokeh, and holoviews first if you don't have them yet.</p> <pre><code>pip install datashader bokeh holoviews jupyter-bokeh</code></pre> <p>or</p> <pre><code>conda install datashader bokeh holoviews jupyter-bokeh</code></pre>"},{"location":"m12-maps/lab12/#leaflet","title":"Leaflet\u00b6","text":"<p>Another useful tool is Leaflet. It allows you to use various map tile data (Google maps, Open streetmap, ...) with many types of marks (points, heatmap, etc.). Leaflet.js is one of the easiest options to do that on the web, and there is a Python bridge of it: https://github.com/jupyter-widgets/ipyleaflet.</p> <p>You can install it simply by</p> <pre>pip install ipyleaflet\n</pre> <p>It is quite easy to display an interactive map with it. You can also add markers, polygons, etc.</p>"},{"location":"m13-text/class/","title":"Visualizing texts","text":"<ul> <li>Word clouds considered harmful</li> <li>Rapping, deconstructed: The best rhymers of all time</li> <li>Text visualization browser</li> <li>The Origin of Species: The Preservation of Favoured Traces</li> <li>Text visualization - by Jeff Clark</li> </ul>"},{"location":"m13-text/lab13/","title":"Module 13: Texts","text":"Run in Google Colab View on Github View raw on Github <p>We'll use <code>spaCy</code> and <code>wordcloud</code> to play with text data. <code>spaCy</code> is probably the best python package for analyzing text data. It's capable and super fast. Let's install them.</p> <pre><code>pip install wordcloud spacy</code></pre> <p>To use spaCy, you also need to download models. Run:</p> <pre><code>python -m spacy download en_core_web_sm</code></pre> In\u00a0[1]: Copied! <pre>import spacy\nimport wordcloud\n\nnlp = spacy.load('en_core_web_sm')\n</pre> import spacy import wordcloud  nlp = spacy.load('en_core_web_sm') <p>Usually the first step of text analysis is tokenization, which is the process of breaking a document into \"tokens\". You can roughly think of it as extracting each word.</p> In\u00a0[2]: Copied! <pre>doc = nlp(u'Apple is looking at buying U.K. startup for $1 billion')\n\nfor token in doc:\n    print(token)\n</pre> doc = nlp(u'Apple is looking at buying U.K. startup for $1 billion')  for token in doc:     print(token) <pre>Apple\nis\nlooking\nat\nbuying\nU.K.\nstartup\nfor\n$\n1\nbillion\n</pre> <p>As you can see, it's not exactly same as <code>doc.split()</code>. You'd want to have <code>$</code> as a separate token because it has a particular meaning (USD). Actually, as shown in an example (https://spacy.io/usage/spacy-101#annotations-pos-deps), <code>spaCy</code> figures out a lot of things about these tokens. For instance,</p> In\u00a0[3]: Copied! <pre>for token in doc:\n    print(token.text, token.lemma_, token.pos_, token.tag_)\n</pre> for token in doc:     print(token.text, token.lemma_, token.pos_, token.tag_) <pre>Apple Apple PROPN NNP\nis be AUX VBZ\nlooking look VERB VBG\nat at ADP IN\nbuying buy VERB VBG\nU.K. U.K. PROPN NNP\nstartup startup NOUN NN\nfor for ADP IN\n$ $ SYM $\n1 1 NUM CD\nbillion billion NUM CD\n</pre> <p>It figured it out that <code>Apple</code> is a proper noun (\"PROPN\" and \"NNP\"; see here for the part of speech tags).</p> <p><code>spaCy</code> has a visualizer too.</p> In\u00a0[4]: Copied! <pre>from spacy import displacy\ndisplacy.render(doc, style='dep', jupyter=True, options={'distance': 100})\n</pre> from spacy import displacy displacy.render(doc, style='dep', jupyter=True, options={'distance': 100}) Apple PROPN is AUX looking VERB at ADP buying VERB U.K. PROPN startup NOUN for ADP $ SYM 1 NUM billion NUM nsubj aux prep pcomp dobj dep prep quantmod compound pobj <p>It even recognizes entities and can visualize them.</p> In\u00a0[5]: Copied! <pre>text = \"\"\"But Google is starting from behind. The company made a late push\ninto hardware, and Apple\u2019s Siri, available on iPhones, and Amazon\u2019s Alexa\nsoftware, which runs on its Echo and Dot devices, have clear leads in\nconsumer adoption.\"\"\"\n\ndoc2 = nlp(text)\ndisplacy.render(doc2, style='ent', jupyter=True)\n</pre> text = \"\"\"But Google is starting from behind. The company made a late push into hardware, and Apple\u2019s Siri, available on iPhones, and Amazon\u2019s Alexa software, which runs on its Echo and Dot devices, have clear leads in consumer adoption.\"\"\"  doc2 = nlp(text) displacy.render(doc2, style='ent', jupyter=True) But       Google     ORG   is starting from behind. The company made a late pushinto hardware, and       Apple     ORG  \u2019s       Siri     PERSON  , available on       iPhones     ORG  , and       Amazon     ORG  \u2019s       Alexa     ORG software, which runs on its       Echo     LOC   and Dot devices, have clear leads inconsumer adoption. In\u00a0[6]: Copied! <pre>import urllib.request\n\nbook = urllib.request.urlopen('https://sherlock-holm.es/stories/plain-text/stud.txt').read()\n</pre> import urllib.request  book = urllib.request.urlopen('https://sherlock-holm.es/stories/plain-text/stud.txt').read() In\u00a0[7]: Copied! <pre>book[:1000]\n</pre> book[:1000] Out[7]: <pre>b'\\n\\n\\n\\n                               A STUDY IN SCARLET\\n\\n                               Arthur Conan Doyle\\n\\n\\n\\n\\n\\n\\n\\n                                Table of contents\\n\\n         Part I\\n        Mr. Sherlock Holmes\\n        The Science Of Deduction\\n        The Lauriston Garden Mystery\\n        What John Rance Had To Tell\\n        Our Advertisement Brings A Visitor\\n        Tobias Gregson Shows What He Can Do\\n        Light In The Darkness\\n\\n         Part II\\n        On The Great Alkali Plain\\n        The Flower Of Utah\\n        John Ferrier Talks With The Prophet\\n        A Flight For Life\\n        The Avenging Angels\\n        A Continuation Of The Reminiscences Of John Watson, M.D.\\n        The Conclusion\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n                                      PART I\\n\\n                   (Being a reprint from the reminiscences of\\n                              John H. Watson, M.D.,\\n                      late of the Army Medical Department.)\\n\\n\\n\\n\\n\\n          CHAPTER I\\n          Mr. Sherlock Holmes\\n\\n\\n     In t'</pre> <p>Looks like we have successfully loaded the book. You'd probably want to remove the parts at the beginning and at the end that are not parts of the book if you are doing a serious analysis, but let's ignore them for now. Let's try to feed this directly into <code>spaCy</code>.</p> In\u00a0[8]: Copied! <pre>doc = nlp(book)\n</pre> doc = nlp(book) <pre>\n---------------------------------------------------------------------------\nExtraData                                 Traceback (most recent call last)\nCell In[8], line 1\n----&gt; 1 doc = nlp(book)\n\nFile ~/git/dataviz-solutions/.venv/lib/python3.11/site-packages/spacy/language.py:1037, in Language.__call__(self, text, disable, component_cfg)\n   1016 def __call__(\n   1017     self,\n   1018     text: Union[str, Doc],\n   (...)\n   1021     component_cfg: Optional[Dict[str, Dict[str, Any]]] = None,\n   1022 ) -&gt; Doc:\n   1023     \"\"\"Apply the pipeline to some text. The text can span multiple sentences,\n   1024     and can contain arbitrary whitespace. Alignment into the original string\n   1025     is preserved.\n   (...)\n   1035     DOCS: https://spacy.io/api/language#call\n   1036     \"\"\"\n-&gt; 1037     doc = self._ensure_doc(text)\n   1038     if component_cfg is None:\n   1039         component_cfg = {}\n\nFile ~/git/dataviz-solutions/.venv/lib/python3.11/site-packages/spacy/language.py:1130, in Language._ensure_doc(self, doc_like)\n   1128     return self.make_doc(doc_like)\n   1129 if isinstance(doc_like, bytes):\n-&gt; 1130     return Doc(self.vocab).from_bytes(doc_like)\n   1131 raise ValueError(Errors.E1041.format(type=type(doc_like)))\n\nFile ~/git/dataviz-solutions/.venv/lib/python3.11/site-packages/spacy/tokens/doc.pyx:1359, in spacy.tokens.doc.Doc.from_bytes()\n\nFile ~/git/dataviz-solutions/.venv/lib/python3.11/site-packages/srsly/_msgpack_api.py:27, in msgpack_loads(data, use_list)\n     25 # msgpack-python docs suggest disabling gc before unpacking large messages\n     26 gc.disable()\n---&gt; 27 msg = msgpack.loads(data, raw=False, use_list=use_list)\n     28 gc.enable()\n     29 return msg\n\nFile ~/git/dataviz-solutions/.venv/lib/python3.11/site-packages/srsly/msgpack/__init__.py:79, in unpackb(packed, **kwargs)\n     77         object_hook = functools.partial(decoder, chain=object_hook)\n     78     kwargs[\"object_hook\"] = object_hook\n---&gt; 79 return _unpackb(packed, **kwargs)\n\nFile ~/git/dataviz-solutions/.venv/lib/python3.11/site-packages/srsly/msgpack/_unpacker.pyx:199, in srsly.msgpack._unpacker.unpackb()\n\nExtraData: unpack(b) received extra data.</pre> In\u00a0[9]: Copied! <pre>type(book)\n</pre> type(book) Out[9]: <pre>bytes</pre> <p>Indeed, the type of <code>metamorphosis_book</code> is <code>bytes</code>. But as we have seen above, we can see the book contents right? What's going on?</p> <p>Well, the problem is that a byte sequence is not yet a proper string until we know how to decode it. A string is an abstract object and we need to specify an encoding to write the string into a file. For instance, if I have a string of Korean characters like \"\uc548\ub155\", there are several encodings that I can specify to write that into a file, and depending on the encoding that I choose, the byte sequences can be totally different from each other. This is a really important (and confusing) topic, but because it's beyond the scope of the course, I'll just link a nice post about encoding: http://kunststube.net/encoding/</p> In\u00a0[10]: Copied! <pre>\"\uc548\ub155\".encode('utf8')\n</pre> \"\uc548\ub155\".encode('utf8') Out[10]: <pre>b'\\xec\\x95\\x88\\xeb\\x85\\x95'</pre> In\u00a0[11]: Copied! <pre># b'\\xec\\x95\\x88\\xeb\\x85\\x95'.decode('euc-kr') &lt;- what happen if you do this?\nb'\\xec\\x95\\x88\\xeb\\x85\\x95'.decode('utf8')\n</pre> # b'\\xec\\x95\\x88\\xeb\\x85\\x95'.decode('euc-kr') &lt;- what happen if you do this? b'\\xec\\x95\\x88\\xeb\\x85\\x95'.decode('utf8') Out[11]: <pre>'\uc548\ub155'</pre> In\u00a0[12]: Copied! <pre>\"\uc548\ub155\".encode('euc-kr')\n</pre> \"\uc548\ub155\".encode('euc-kr') Out[12]: <pre>b'\\xbe\\xc8\\xb3\\xe7'</pre> In\u00a0[13]: Copied! <pre>b'\\xbe\\xc8\\xb3\\xe7'.decode('euc-kr')\n</pre> b'\\xbe\\xc8\\xb3\\xe7'.decode('euc-kr') Out[13]: <pre>'\uc548\ub155'</pre> <p>You can decode with \"wrong\" encoding too.</p> In\u00a0[14]: Copied! <pre>b'\\xbe\\xc8\\xb3\\xe7'.decode('latin-1')\n</pre> b'\\xbe\\xc8\\xb3\\xe7'.decode('latin-1') Out[14]: <pre>'\u00be\u00c8\u00b3\u00e7'</pre> <p>As you can see the same string can be encoded into different byte sequences depending on the encoding. It's a really annoying fun topic and if you need to deal with text data, you must have a good understanding of it.</p> <p>There is a lot of complexity in encoding. But for now, just remember that <code>utf-8</code> encoding is the most common encoding. It is also compatible with ASCII encoding as well. That means you can decode both ASCII and utf-8 documents with utf-8 encoding. So let's decode the byte sequence into a string.</p> In\u00a0[15]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[16]: Copied! <pre>type(book_str)\n</pre> type(book_str) Out[16]: <pre>str</pre> <p>Shall we try again?</p> In\u00a0[17]: Copied! <pre>doc = nlp(book_str)\n</pre> doc = nlp(book_str) In\u00a0[18]: Copied! <pre>words = [token.text for token in doc\n         if token.is_stop != True and token.is_punct != True]\n</pre> words = [token.text for token in doc          if token.is_stop != True and token.is_punct != True] In\u00a0[19]: Copied! <pre>from collections import Counter\n\nCounter(words).most_common(5)\n</pre> from collections import Counter  Counter(words).most_common(5) Out[19]: <pre>[('\\n     ', 3107),\n ('\\n\\n     ', 772),\n ('said', 207),\n ('man', 155),\n ('Holmes', 98)]</pre> <p>a lot of newline characters and multiple spaces. A quick and dirty way to remove them is split &amp; join. The idea is that you split the document using <code>split()</code> and then join with a single space <code> </code>. Can you implement it and print the 10 most common words?</p> In\u00a0[20]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE Out[20]: <pre>[('said', 207),\n ('man', 155),\n ('Holmes', 98),\n ('little', 80),\n ('time', 77),\n ('way', 69),\n ('came', 67),\n ('face', 67),\n ('asked', 65),\n ('come', 64)]</pre> <p>Let's keep the object with word count.</p> In\u00a0[21]: Copied! <pre>word_cnt = Counter(words)\n</pre> word_cnt = Counter(words) In\u00a0[23]: Copied! <pre>import matplotlib.pyplot as plt\n</pre> import matplotlib.pyplot as plt <p>Can you check out the <code>wordcloud</code> package documentation and create a word cloud from the word count object that we created from the book above and plot it?</p> In\u00a0[24]: Copied! <pre># Implement: create a word cloud object\n\n# YOUR SOLUTION HERE\n</pre> # Implement: create a word cloud object  # YOUR SOLUTION HERE Out[24]: <pre>&lt;wordcloud.wordcloud.WordCloud at 0x363a479d0&gt;</pre> In\u00a0[25]: Copied! <pre># Implement: plot the word cloud object\n\n# YOUR SOLUTION HERE\n</pre> # Implement: plot the word cloud object  # YOUR SOLUTION HERE <p>Q: Can you create a word cloud for a certain part of speech, such as nouns, verbs, proper nouns, etc. (pick one)?</p> In\u00a0[26]: Copied! <pre># YOUR SOLUTION HERE\n</pre> # YOUR SOLUTION HERE In\u00a0[27]: Copied! <pre>doc\n</pre> doc Out[27]: <pre>A STUDY IN SCARLET Arthur Conan Doyle Table of contents Part I Mr. Sherlock Holmes The Science Of Deduction The Lauriston Garden Mystery What John Rance Had To Tell Our Advertisement Brings A Visitor Tobias Gregson Shows What He Can Do Light In The Darkness Part II On The Great Alkali Plain The Flower Of Utah John Ferrier Talks With The Prophet A Flight For Life The Avenging Angels A Continuation Of The Reminiscences Of John Watson, M.D. The Conclusion PART I (Being a reprint from the reminiscences of John H. Watson, M.D., late of the Army Medical Department.) CHAPTER I Mr. Sherlock Holmes In the year 1878 I took my degree of Doctor of Medicine of the University of London, and proceeded to Netley to go through the course prescribed for surgeons in the army. Having completed my studies there, I was duly attached to the Fifth Northumberland Fusiliers as Assistant Surgeon. The regiment was stationed in India at the time, and before I could join it, the second Afghan war had broken out. On landing at Bombay, I learned that my corps had advanced through the passes, and was already deep in the enemy's country. I followed, however, with many other officers who were in the same situation as myself, and succeeded in reaching Candahar in safety, where I found my regiment, and at once entered upon my new duties. The campaign brought honours and promotion to many, but for me it had nothing but misfortune and disaster. I was removed from my brigade and attached to the Berkshires, with whom I served at the fatal battle of Maiwand. There I was struck on the shoulder by a Jezail bullet, which shattered the bone and grazed the subclavian artery. I should have fallen into the hands of the murderous Ghazis had it not been for the devotion and courage shown by Murray, my orderly, who threw me across a pack-horse, and succeeded in bringing me safely to the British lines. Worn with pain, and weak from the prolonged hardships which I had undergone, I was removed, with a great train of wounded sufferers, to the base hospital at Peshawar. Here I rallied, and had already improved so far as to be able to walk about the wards, and even to bask a little upon the verandah, when I was struck down by enteric fever, that curse of our Indian possessions. For months my life was despaired of, and when at last I came to myself and became convalescent, I was so weak and emaciated that a medical board determined that not a day should be lost in sending me back to England. I was dispatched, accordingly, in the troopship Orontes, and landed a month later on Portsmouth jetty, with my health irretrievably ruined, but with permission from a paternal government to spend the next nine months in attempting to improve it. I had neither kith nor kin in England, and was therefore as free as air--or as free as an income of eleven shillings and sixpence a day will permit a man to be. Under such circumstances, I naturally gravitated to London, that great cesspool into which all the loungers and idlers of the Empire are irresistibly drained. There I stayed for some time at a private hotel in the Strand, leading a comfortless, meaningless existence, and spending such money as I had, considerably more freely than I ought. So alarming did the state of my finances become, that I soon realized that I must either leave the metropolis and rusticate somewhere in the country, or that I must make a complete alteration in my style of living. Choosing the latter alternative, I began by making up my mind to leave the hotel, and to take up my quarters in some less pretentious and less expensive domicile. On the very day that I had come to this conclusion, I was standing at the Criterion Bar, when some one tapped me on the shoulder, and turning round I recognized young Stamford, who had been a dresser under me at Bart's. The sight of a friendly face in the great wilderness of London is a pleasant thing indeed to a lonely man. In old days Stamford had never been a particular crony of mine, but now I hailed him with enthusiasm, and he, in his turn, appeared to be delighted to see me. In the exuberance of my joy, I asked him to lunch with me at the Holborn, and we started off together in a hansom. \"Whatever have you been doing with yourself, Watson?\" he asked in undisguised wonder, as we rattled through the crowded London streets. \"You are as thin as a lath and as brown as a nut.\" I gave him a short sketch of my adventures, and had hardly concluded it by the time that we reached our destination. \"Poor devil!\" he said, commiseratingly, after he had listened to my misfortunes. \"What are you up to now?\" \"Looking for lodgings,\" I answered. \"Trying to solve the problem as to whether it is possible to get comfortable rooms at a reasonable price.\" \"That's a strange thing,\" remarked my companion; \"you are the second man to-day that has used that expression to me.\" \"And who was the first?\" I asked. \"A fellow who is working at the chemical laboratory up at the hospital. He was bemoaning himself this morning because he could not get someone to go halves with him in some nice rooms which he had found, and which were too much for his purse.\" \"By Jove!\" I cried, \"if he really wants someone to share the rooms and the expense, I am the very man for him. I should prefer having a partner to being alone.\" Young Stamford looked rather strangely at me over his wine-glass. \"You don't know Sherlock Holmes yet,\" he said; \"perhaps you would not care for him as a constant companion.\" \"Why, what is there against him?\" \"Oh, I didn't say there was anything against him. He is a little queer in his ideas--an enthusiast in some branches of science. As far as I know he is a decent fellow enough.\" \"A medical student, I suppose?\" said I. \"No--I have no idea what he intends to go in for. I believe he is well up in anatomy, and he is a first-class chemist; but, as far as I know, he has never taken out any systematic medical classes. His studies are very desultory and eccentric, but he has amassed a lot of out-of-the way knowledge which would astonish his professors.\" \"Did you never ask him what he was going in for?\" I asked. \"No; he is not a man that it is easy to draw out, though he can be communicative enough when the fancy seizes him.\" \"I should like to meet him,\" I said. \"If I am to lodge with anyone, I should prefer a man of studious and quiet habits. I am not strong enough yet to stand much noise or excitement. I had enough of both in Afghanistan to last me for the remainder of my natural existence. How could I meet this friend of yours?\" \"He is sure to be at the laboratory,\" returned my companion. \"He either avoids the place for weeks, or else he works there from morning to night. If you like, we shall drive round together after luncheon.\" \"Certainly,\" I answered, and the conversation drifted away into other channels. As we made our way to the hospital after leaving the Holborn, Stamford gave me a few more particulars about the gentleman whom I proposed to take as a fellow-lodger. \"You mustn't blame me if you don't get on with him,\" he said; \"I know nothing more of him than I have learned from meeting him occasionally in the laboratory. You proposed this arrangement, so you must not hold me responsible.\" \"If we don't get on it will be easy to part company,\" I answered. \"It seems to me, Stamford,\" I added, looking hard at my companion, \"that you have some reason for washing your hands of the matter. Is this fellow's temper so formidable, or what is it? Don't be mealy-mouthed about it.\" \"It is not easy to express the inexpressible,\" he answered with a laugh. \"Holmes is a little too scientific for my tastes--it approaches to cold-bloodedness. I could imagine his giving a friend a little pinch of the latest vegetable alkaloid, not out of malevolence, you understand, but simply out of a spirit of inquiry in order to have an accurate idea of the effects. To do him justice, I think that he would take it himself with the same readiness. He appears to have a passion for definite and exact knowledge.\" \"Very right too.\" \"Yes, but it may be pushed to excess. When it comes to beating the subjects in the dissecting-rooms with a stick, it is certainly taking rather a bizarre shape.\" \"Beating the subjects!\" \"Yes, to verify how far bruises may be produced after death. I saw him at it with my own eyes.\" \"And yet you say he is not a medical student?\" \"No. Heaven knows what the objects of his studies are. But here we are, and you must form your own impressions about him.\" As he spoke, we turned down a narrow lane and passed through a small side-door, which opened into a wing of the great hospital. It was familiar ground to me, and I needed no guiding as we ascended the bleak stone staircase and made our way down the long corridor with its vista of whitewashed wall and dun-coloured doors. Near the further end a low arched passage branched away from it and led to the chemical laboratory. This was a lofty chamber, lined and littered with countless bottles. Broad, low tables were scattered about, which bristled with retorts, test-tubes, and little Bunsen lamps, with their blue flickering flames. There was only one student in the room, who was bending over a distant table absorbed in his work. At the sound of our steps he glanced round and sprang to his feet with a cry of pleasure. \"I've found it! I've found it,\" he shouted to my companion, running towards us with a test-tube in his hand. \"I have found a re-agent which is precipitated by hoemoglobin, and by nothing else.\" Had he discovered a gold mine, greater delight could not have shone upon his features. \"Dr. Watson, Mr. Sherlock Holmes,\" said Stamford, introducing us. \"How are you?\" he said cordially, gripping my hand with a strength for which I should hardly have given him credit. \"You have been in Afghanistan, I perceive.\" \"How on earth did you know that?\" I asked in astonishment. \"Never mind,\" said he, chuckling to himself. \"The question now is about hoemoglobin. No doubt you see the significance of this discovery of mine?\" \"It is interesting, chemically, no doubt,\" I answered, \"but practically--\" \"Why, man, it is the most practical medico-legal discovery for years. Don't you see that it gives us an infallible test for blood stains. Come over here now!\" He seized me by the coat-sleeve in his eagerness, and drew me over to the table at which he had been working. \"Let us have some fresh blood,\" he said, digging a long bodkin into his finger, and drawing off the resulting drop of blood in a chemical pipette. \"Now, I add this small quantity of blood to a litre of water. You perceive that the resulting mixture has the appearance of pure water. The proportion of blood cannot be more than one in a million. I have no doubt, however, that we shall be able to obtain the characteristic reaction.\" As he spoke, he threw into the vessel a few white crystals, and then added some drops of a transparent fluid. In an instant the contents assumed a dull mahogany colour, and a brownish dust was precipitated to the bottom of the glass jar. \"Ha! ha!\" he cried, clapping his hands, and looking as delighted as a child with a new toy. \"What do you think of that?\" \"It seems to be a very delicate test,\" I remarked. \"Beautiful! beautiful! The old Guiacum test was very clumsy and uncertain. So is the microscopic examination for blood corpuscles. The latter is valueless if the stains are a few hours old. Now, this appears to act as well whether the blood is old or new. Had this test been invented, there are hundreds of men now walking the earth who would long ago have paid the penalty of their crimes.\" \"Indeed!\" I murmured. \"Criminal cases are continually hinging upon that one point. A man is suspected of a crime months perhaps after it has been committed. His linen or clothes are examined, and brownish stains discovered upon them. Are they blood stains, or mud stains, or rust stains, or fruit stains, or what are they? That is a question which has puzzled many an expert, and why? Because there was no reliable test. Now we have the Sherlock Holmes' test, and there will no longer be any difficulty.\" His eyes fairly glittered as he spoke, and he put his hand over his heart and bowed as if to some applauding crowd conjured up by his imagination. \"You are to be congratulated,\" I remarked, considerably surprised at his enthusiasm. \"There was the case of Von Bischoff at Frankfort last year. He would certainly have been hung had this test been in existence. Then there was Mason of Bradford, and the notorious Muller, and Lefevre of Montpellier, and Samson of new Orleans. I could name a score of cases in which it would have been decisive.\" \"You seem to be a walking calendar of crime,\" said Stamford with a laugh. \"You might start a paper on those lines. Call it the 'Police News of the Past.'\" \"Very interesting reading it might be made, too,\" remarked Sherlock Holmes, sticking a small piece of plaster over the prick on his finger. \"I have to be careful,\" he continued, turning to me with a smile, \"for I dabble with poisons a good deal.\" He held out his hand as he spoke, and I noticed that it was all mottled over with similar pieces of plaster, and discoloured with strong acids. \"We came here on business,\" said Stamford, sitting down on a high three-legged stool, and pushing another one in my direction with his foot. \"My friend here wants to take diggings, and as you were complaining that you could get no one to go halves with you, I thought that I had better bring you together.\" Sherlock Holmes seemed delighted at the idea of sharing his rooms with me. \"I have my eye on a suite in Baker Street,\" he said, \"which would suit us down to the ground. You don't mind the smell of strong tobacco, I hope?\" \"I always smoke 'ship's' myself,\" I answered. \"That's good enough. I generally have chemicals about, and occasionally do experiments. Would that annoy you?\" \"By no means.\" \"Let me see--what are my other shortcomings. I get in the dumps at times, and don't open my mouth for days on end. You must not think I am sulky when I do that. Just let me alone, and I'll soon be right. What have you to confess now? It's just as well for two fellows to know the worst of one another before they begin to live together.\" I laughed at this cross-examination. \"I keep a bull pup,\" I said, \"and I object to rows because my nerves are shaken, and I get up at all sorts of ungodly hours, and I am extremely lazy. I have another set of vices when I'm well, but those are the principal ones at present.\" \"Do you include violin-playing in your category of rows?\" he asked, anxiously. \"It depends on the player,\" I answered. \"A well-played violin is a treat for the gods--a badly-played one--\" \"Oh, that's all right,\" he cried, with a merry laugh. \"I think we may consider the thing as settled--that is, if the rooms are agreeable to you.\" \"When shall we see them?\" \"Call for me here at noon to-morrow, and we'll go together and settle everything,\" he answered. \"All right--noon exactly,\" said I, shaking his hand. We left him working among his chemicals, and we walked together towards my hotel. \"By the way,\" I asked suddenly, stopping and turning upon Stamford, \"how the deuce did he know that I had come from Afghanistan?\" My companion smiled an enigmatical smile. \"That's just his little peculiarity,\" he said. \"A good many people have wanted to know how he finds things out.\" \"Oh! a mystery is it?\" I cried, rubbing my hands. \"This is very piquant. I am much obliged to you for bringing us together. 'The proper study of mankind is man,' you know.\" \"You must study him, then,\" Stamford said, as he bade me good-bye. \"You'll find him a knotty problem, though. I'll wager he learns more about you than you about him. Good-bye.\" \"Good-bye,\" I answered, and strolled on to my hotel, considerably interested in my new acquaintance. CHAPTER II The Science Of Deduction We met next day as he had arranged, and inspected the rooms at No. 221b, Baker Street, of which he had spoken at our meeting. They consisted of a couple of comfortable bed-rooms and a single large airy sitting-room, cheerfully furnished, and illuminated by two broad windows. So desirable in every way were the apartments, and so moderate did the terms seem when divided between us, that the bargain was concluded upon the spot, and we at once entered into possession. That very evening I moved my things round from the hotel, and on the following morning Sherlock Holmes followed me with several boxes and portmanteaus. For a day or two we were busily employed in unpacking and laying out our property to the best advantage. That done, we gradually began to settle down and to accommodate ourselves to our new surroundings. Holmes was certainly not a difficult man to live with. He was quiet in his ways, and his habits were regular. It was rare for him to be up after ten at night, and he had invariably breakfasted and gone out before I rose in the morning. Sometimes he spent his day at the chemical laboratory, sometimes in the dissecting-rooms, and occasionally in long walks, which appeared to take him into the lowest portions of the City. Nothing could exceed his energy when the working fit was upon him; but now and again a reaction would seize him, and for days on end he would lie upon the sofa in the sitting-room, hardly uttering a word or moving a muscle from morning to night. On these occasions I have noticed such a dreamy, vacant expression in his eyes, that I might have suspected him of being addicted to the use of some narcotic, had not the temperance and cleanliness of his whole life forbidden such a notion. As the weeks went by, my interest in him and my curiosity as to his aims in life, gradually deepened and increased. His very person and appearance were such as to strike the attention of the most casual observer. In height he was rather over six feet, and so excessively lean that he seemed to be considerably taller. His eyes were sharp and piercing, save during those intervals of torpor to which I have alluded; and his thin, hawk-like nose gave his whole expression an air of alertness and decision. His chin, too, had the prominence and squareness which mark the man of determination. His hands were invariably blotted with ink and stained with chemicals, yet he was possessed of extraordinary delicacy of touch, as I frequently had occasion to observe when I watched him manipulating his fragile philosophical instruments. The reader may set me down as a hopeless busybody, when I confess how much this man stimulated my curiosity, and how often I endeavoured to break through the reticence which he showed on all that concerned himself. Before pronouncing judgment, however, be it remembered, how objectless was my life, and how little there was to engage my attention. My health forbade me from venturing out unless the weather was exceptionally genial, and I had no friends who would call upon me and break the monotony of my daily existence. Under these circumstances, I eagerly hailed the little mystery which hung around my companion, and spent much of my time in endeavouring to unravel it. He was not studying medicine. He had himself, in reply to a question, confirmed Stamford's opinion upon that point. Neither did he appear to have pursued any course of reading which might fit him for a degree in science or any other recognized portal which would give him an entrance into the learned world. Yet his zeal for certain studies was remarkable, and within eccentric limits his knowledge was so extraordinarily ample and minute that his observations have fairly astounded me. Surely no man would work so hard or attain such precise information unless he had some definite end in view. Desultory readers are seldom remarkable for the exactness of their learning. No man burdens his mind with small matters unless he has some very good reason for doing so. His ignorance was as remarkable as his knowledge. Of contemporary literature, philosophy and politics he appeared to know next to nothing. Upon my quoting Thomas Carlyle, he inquired in the naivest way who he might be and what he had done. My surprise reached a climax, however, when I found incidentally that he was ignorant of the Copernican Theory and of the composition of the Solar System. That any civilized human being in this nineteenth century should not be aware that the earth travelled round the sun appeared to be to me such an extraordinary fact that I could hardly realize it. \"You appear to be astonished,\" he said, smiling at my expression of surprise. \"Now that I do know it I shall do my best to forget it.\" \"To forget it!\" \"You see,\" he explained, \"I consider that a man's brain originally is like a little empty attic, and you have to stock it with such furniture as you choose. A fool takes in all the lumber of every sort that he comes across, so that the knowledge which might be useful to him gets crowded out, or at best is jumbled up with a lot of other things so that he has a difficulty in laying his hands upon it. Now the skilful workman is very careful indeed as to what he takes into his brain-attic. He will have nothing but the tools which may help him in doing his work, but of these he has a large assortment, and all in the most perfect order. It is a mistake to think that that little room has elastic walls and can distend to any extent. Depend upon it there comes a time when for every addition of knowledge you forget something that you knew before. It is of the highest importance, therefore, not to have useless facts elbowing out the useful ones.\" \"But the Solar System!\" I protested. \"What the deuce is it to me?\" he interrupted impatiently; \"you say that we go round the sun. If we went round the moon it would not make a pennyworth of difference to me or to my work.\" I was on the point of asking him what that work might be, but something in his manner showed me that the question would be an unwelcome one. I pondered over our short conversation, however, and endeavoured to draw my deductions from it. He said that he would acquire no knowledge which did not bear upon his object. Therefore all the knowledge which he possessed was such as would be useful to him. I enumerated in my own mind all the various points upon which he had shown me that he was exceptionally well-informed. I even took a pencil and jotted them down. I could not help smiling at the document when I had completed it. It ran in this way-- Sherlock Holmes--his limits. 1. Knowledge of Literature.--Nil. 2. Philosophy.--Nil. 3. Astronomy.--Nil. 4. Politics.--Feeble. 5. Botany.--Variable. Well up in belladonna, opium, and poisons generally. Knows nothing of practical gardening. 6. Geology.--Practical, but limited. Tells at a glance different soils from each other. After walks has shown me splashes upon his trousers, and told me by their colour and consistence in what part of London he had received them. 7. Chemistry.--Profound. 8. Anatomy.--Accurate, but unsystematic. 9. Sensational Literature.--Immense. He appears to know every detail of every horror perpetrated in the century. 10. Plays the violin well. 11. Is an expert singlestick player, boxer, and swordsman. 12. Has a good practical knowledge of British law. When I had got so far in my list I threw it into the fire in despair. \"If I can only find what the fellow is driving at by reconciling all these accomplishments, and discovering a calling which needs them all,\" I said to myself, \"I may as well give up the attempt at once.\" I see that I have alluded above to his powers upon the violin. These were very remarkable, but as eccentric as all his other accomplishments. That he could play pieces, and difficult pieces, I knew well, because at my request he has played me some of Mendelssohn's Lieder, and other favourites. When left to himself, however, he would seldom produce any music or attempt any recognized air. Leaning back in his arm-chair of an evening, he would close his eyes and scrape carelessly at the fiddle which was thrown across his knee. Sometimes the chords were sonorous and melancholy. Occasionally they were fantastic and cheerful. Clearly they reflected the thoughts which possessed him, but whether the music aided those thoughts, or whether the playing was simply the result of a whim or fancy was more than I could determine. I might have rebelled against these exasperating solos had it not been that he usually terminated them by playing in quick succession a whole series of my favourite airs as a slight compensation for the trial upon my patience. During the first week or so we had no callers, and I had begun to think that my companion was as friendless a man as I was myself. Presently, however, I found that he had many acquaintances, and those in the most different classes of society. There was one little sallow rat-faced, dark-eyed fellow who was introduced to me as Mr. Lestrade, and who came three or four times in a single week. One morning a young girl called, fashionably dressed, and stayed for half an hour or more. The same afternoon brought a grey-headed, seedy visitor, looking like a Jew pedlar, who appeared to me to be much excited, and who was closely followed by a slipshod elderly woman. On another occasion an old white-haired gentleman had an interview with my companion; and on another a railway porter in his velveteen uniform. When any of these nondescript individuals put in an appearance, Sherlock Holmes used to beg for the use of the sitting-room, and I would retire to my bed-room. He always apologized to me for putting me to this inconvenience. \"I have to use this room as a place of business,\" he said, \"and these people are my clients.\" Again I had an opportunity of asking him a point blank question, and again my delicacy prevented me from forcing another man to confide in me. I imagined at the time that he had some strong reason for not alluding to it, but he soon dispelled the idea by coming round to the subject of his own accord. It was upon the 4th of March, as I have good reason to remember, that I rose somewhat earlier than usual, and found that Sherlock Holmes had not yet finished his breakfast. The landlady had become so accustomed to my late habits that my place had not been laid nor my coffee prepared. With the unreasonable petulance of mankind I rang the bell and gave a curt intimation that I was ready. Then I picked up a magazine from the table and attempted to while away the time with it, while my companion munched silently at his toast. One of the articles had a pencil mark at the heading, and I naturally began to run my eye through it. Its somewhat ambitious title was \"The Book of Life,\" and it attempted to show how much an observant man might learn by an accurate and systematic examination of all that came in his way. It struck me as being a remarkable mixture of shrewdness and of absurdity. The reasoning was close and intense, but the deductions appeared to me to be far-fetched and exaggerated. The writer claimed by a momentary expression, a twitch of a muscle or a glance of an eye, to fathom a man's inmost thoughts. Deceit, according to him, was an impossibility in the case of one trained to observation and analysis. His conclusions were as infallible as so many propositions of Euclid. So startling would his results appear to the uninitiated that until they learned the processes by which he had arrived at them they might well consider him as a necromancer. \"From a drop of water,\" said the writer, \"a logician could infer the possibility of an Atlantic or a Niagara without having seen or heard of one or the other. So all life is a great chain, the nature of which is known whenever we are shown a single link of it. Like all other arts, the Science of Deduction and Analysis is one which can only be acquired by long and patient study nor is life long enough to allow any mortal to attain the highest possible perfection in it. Before turning to those moral and mental aspects of the matter which present the greatest difficulties, let the enquirer begin by mastering more elementary problems. Let him, on meeting a fellow-mortal, learn at a glance to distinguish the history of the man, and the trade or profession to which he belongs. Puerile as such an exercise may seem, it sharpens the faculties of observation, and teaches one where to look and what to look for. By a man's finger nails, by his coat-sleeve, by his boot, by his trouser knees, by the callosities of his forefinger and thumb, by his expression, by his shirt cuffs--by each of these things a man's calling is plainly revealed. That all united should fail to enlighten the competent enquirer in any case is almost inconceivable.\" \"What ineffable twaddle!\" I cried, slapping the magazine down on the table, \"I never read such rubbish in my life.\" \"What is it?\" asked Sherlock Holmes. \"Why, this article,\" I said, pointing at it with my egg spoon as I sat down to my breakfast. \"I see that you have read it since you have marked it. I don't deny that it is smartly written. It irritates me though. It is evidently the theory of some arm-chair lounger who evolves all these neat little paradoxes in the seclusion of his own study. It is not practical. I should like to see him clapped down in a third class carriage on the Underground, and asked to give the trades of all his fellow-travellers. I would lay a thousand to one against him.\" \"You would lose your money,\" Sherlock Holmes remarked calmly. \"As for the article I wrote it myself.\" \"You!\" \"Yes, I have a turn both for observation and for deduction. The theories which I have expressed there, and which appear to you to be so chimerical are really extremely practical--so practical that I depend upon them for my bread and cheese.\" \"And how?\" I asked involuntarily. \"Well, I have a trade of my own. I suppose I am the only one in the world. I'm a consulting detective, if you can understand what that is. Here in London we have lots of Government detectives and lots of private ones. When these fellows are at fault they come to me, and I manage to put them on the right scent. They lay all the evidence before me, and I am generally able, by the help of my knowledge of the history of crime, to set them straight. There is a strong family resemblance about misdeeds, and if you have all the details of a thousand at your finger ends, it is odd if you can't unravel the thousand and first. Lestrade is a well-known detective. He got himself into a fog recently over a forgery case, and that was what brought him here.\" \"And these other people?\" \"They are mostly sent on by private inquiry agencies. They are all people who are in trouble about something, and want a little enlightening. I listen to their story, they listen to my comments, and then I pocket my fee.\" \"But do you mean to say,\" I said, \"that without leaving your room you can unravel some knot which other men can make nothing of, although they have seen every detail for themselves?\" \"Quite so. I have a kind of intuition that way. Now and again a case turns up which is a little more complex. Then I have to bustle about and see things with my own eyes. You see I have a lot of special knowledge which I apply to the problem, and which facilitates matters wonderfully. Those rules of deduction laid down in that article which aroused your scorn, are invaluable to me in practical work. Observation with me is second nature. You appeared to be surprised when I told you, on our first meeting, that you had come from Afghanistan.\" \"You were told, no doubt.\" \"Nothing of the sort. I knew you came from Afghanistan. From long habit the train of thoughts ran so swiftly through my mind, that I arrived at the conclusion without being conscious of intermediate steps. There were such steps, however. The train of reasoning ran, 'Here is a gentleman of a medical type, but with the air of a military man. Clearly an army doctor, then. He has just come from the tropics, for his face is dark, and that is not the natural tint of his skin, for his wrists are fair. He has undergone hardship and sickness, as his haggard face says clearly. His left arm has been injured. He holds it in a stiff and unnatural manner. Where in the tropics could an English army doctor have seen much hardship and got his arm wounded? Clearly in Afghanistan.' The whole train of thought did not occupy a second. I then remarked that you came from Afghanistan, and you were astonished.\" \"It is simple enough as you explain it,\" I said, smiling. \"You remind me of Edgar Allen Poe's Dupin. I had no idea that such individuals did exist outside of stories.\" Sherlock Holmes rose and lit his pipe. \"No doubt you think that you are complimenting me in comparing me to Dupin,\" he observed. \"Now, in my opinion, Dupin was a very inferior fellow. That trick of his of breaking in on his friends' thoughts with an apropos remark after a quarter of an hour's silence is really very showy and superficial. He had some analytical genius, no doubt; but he was by no means such a phenomenon as Poe appeared to imagine.\" \"Have you read Gaboriau's works?\" I asked. \"Does Lecoq come up to your idea of a detective?\" Sherlock Holmes sniffed sardonically. \"Lecoq was a miserable bungler,\" he said, in an angry voice; \"he had only one thing to recommend him, and that was his energy. That book made me positively ill. The question was how to identify an unknown prisoner. I could have done it in twenty-four hours. Lecoq took six months or so. It might be made a text-book for detectives to teach them what to avoid.\" I felt rather indignant at having two characters whom I had admired treated in this cavalier style. I walked over to the window, and stood looking out into the busy street. \"This fellow may be very clever,\" I said to myself, \"but he is certainly very conceited.\" \"There are no crimes and no criminals in these days,\" he said, querulously. \"What is the use of having brains in our profession? I know well that I have it in me to make my name famous. No man lives or has ever lived who has brought the same amount of study and of natural talent to the detection of crime which I have done. And what is the result? There is no crime to detect, or, at most, some bungling villany with a motive so transparent that even a Scotland Yard official can see through it.\" I was still annoyed at his bumptious style of conversation. I thought it best to change the topic. \"I wonder what that fellow is looking for?\" I asked, pointing to a stalwart, plainly-dressed individual who was walking slowly down the other side of the street, looking anxiously at the numbers. He had a large blue envelope in his hand, and was evidently the bearer of a message. \"You mean the retired sergeant of Marines,\" said Sherlock Holmes. \"Brag and bounce!\" thought I to myself. \"He knows that I cannot verify his guess.\" The thought had hardly passed through my mind when the man whom we were watching caught sight of the number on our door, and ran rapidly across the roadway. We heard a loud knock, a deep voice below, and heavy steps ascending the stair. \"For Mr. Sherlock Holmes,\" he said, stepping into the room and handing my friend the letter. Here was an opportunity of taking the conceit out of him. He little thought of this when he made that random shot. \"May I ask, my lad,\" I said, in the blandest voice, \"what your trade may be?\" \"Commissionaire, sir,\" he said, gruffly. \"Uniform away for repairs.\" \"And you were?\" I asked, with a slightly malicious glance at my companion. \"A sergeant, sir, Royal Marine Light Infantry, sir. No answer? Right, sir.\" He clicked his heels together, raised his hand in a salute, and was gone. CHAPTER III The Lauriston Garden Mystery I confess that I was considerably startled by this fresh proof of the practical nature of my companion's theories. My respect for his powers of analysis increased wondrously. There still remained some lurking suspicion in my mind, however, that the whole thing was a pre-arranged episode, intended to dazzle me, though what earthly object he could have in taking me in was past my comprehension. When I looked at him he had finished reading the note, and his eyes had assumed the vacant, lack-lustre expression which showed mental abstraction. \"How in the world did you deduce that?\" I asked. \"Deduce what?\" said he, petulantly. \"Why, that he was a retired sergeant of Marines.\" \"I have no time for trifles,\" he answered, brusquely; then with a smile, \"Excuse my rudeness. You broke the thread of my thoughts; but perhaps it is as well. So you actually were not able to see that that man was a sergeant of Marines?\" \"No, indeed.\" \"It was easier to know it than to explain why I knew it. If you were asked to prove that two and two made four, you might find some difficulty, and yet you are quite sure of the fact. Even across the street I could see a great blue anchor tattooed on the back of the fellow's hand. That smacked of the sea. He had a military carriage, however, and regulation side whiskers. There we have the marine. He was a man with some amount of self-importance and a certain air of command. You must have observed the way in which he held his head and swung his cane. A steady, respectable, middle-aged man, too, on the face of him--all facts which led me to believe that he had been a sergeant.\" \"Wonderful!\" I ejaculated. \"Commonplace,\" said Holmes, though I thought from his expression that he was pleased at my evident surprise and admiration. \"I said just now that there were no criminals. It appears that I am wrong--look at this!\" He threw me over the note which the commissionaire had brought. \"Why,\" I cried, as I cast my eye over it, \"this is terrible!\" \"It does seem to be a little out of the common,\" he remarked, calmly. \"Would you mind reading it to me aloud?\" This is the letter which I read to him-- \"My dear Mr. Sherlock Holmes: \"There has been a bad business during the night at 3, Lauriston Gardens, off the Brixton Road. Our man on the beat saw a light there about two in the morning, and as the house was an empty one, suspected that something was amiss. He found the door open, and in the front room, which is bare of furniture, discovered the body of a gentleman, well dressed, and having cards in his pocket bearing the name of 'Enoch J. Drebber, Cleveland, Ohio, U.S.A.' There had been no robbery, nor is there any evidence as to how the man met his death. There are marks of blood in the room, but there is no wound upon his person. We are at a loss as to how he came into the empty house; indeed, the whole affair is a puzzler. If you can come round to the house any time before twelve, you will find me there. I have left everything in statu quo until I hear from you. If you are unable to come I shall give you fuller details, and would esteem it a great kindness if you would favour me with your opinion. \"Yours faithfully, \"Tobias Gregson.\" \"Gregson is the smartest of the Scotland Yarders,\" my friend remarked; \"he and Lestrade are the pick of a bad lot. They are both quick and energetic, but conventional--shockingly so. They have their knives into one another, too. They are as jealous as a pair of professional beauties. There will be some fun over this case if they are both put upon the scent.\" I was amazed at the calm way in which he rippled on. \"Surely there is not a moment to be lost,\" I cried, \"shall I go and order you a cab?\" \"I'm not sure about whether I shall go. I am the most incurably lazy devil that ever stood in shoe leather--that is, when the fit is on me, for I can be spry enough at times.\" \"Why, it is just such a chance as you have been longing for.\" \"My dear fellow, what does it matter to me. Supposing I unravel the whole matter, you may be sure that Gregson, Lestrade, and Co. will pocket all the credit. That comes of being an unofficial personage.\" \"But he begs you to help him.\" \"Yes. He knows that I am his superior, and acknowledges it to me; but he would cut his tongue out before he would own it to any third person. However, we may as well go and have a look. I shall work it out on my own hook. I may have a laugh at them if I have nothing else. Come on!\" He hustled on his overcoat, and bustled about in a way that showed that an energetic fit had superseded the apathetic one. \"Get your hat,\" he said. \"You wish me to come?\" \"Yes, if you have nothing better to do.\" A minute later we were both in a hansom, driving furiously for the Brixton Road. It was a foggy, cloudy morning, and a dun-coloured veil hung over the house-tops, looking like the reflection of the mud-coloured streets beneath. My companion was in the best of spirits, and prattled away about Cremona fiddles, and the difference between a Stradivarius and an Amati. As for myself, I was silent, for the dull weather and the melancholy business upon which we were engaged, depressed my spirits. \"You don't seem to give much thought to the matter in hand,\" I said at last, interrupting Holmes' musical disquisition. \"No data yet,\" he answered. \"It is a capital mistake to theorize before you have all the evidence. It biases the judgment.\" \"You will have your data soon,\" I remarked, pointing with my finger; \"this is the Brixton Road, and that is the house, if I am not very much mistaken.\" \"So it is. Stop, driver, stop!\" We were still a hundred yards or so from it, but he insisted upon our alighting, and we finished our journey upon foot. Number 3, Lauriston Gardens wore an ill-omened and minatory look. It was one of four which stood back some little way from the street, two being occupied and two empty. The latter looked out with three tiers of vacant melancholy windows, which were blank and dreary, save that here and there a \"To Let\" card had developed like a cataract upon the bleared panes. A small garden sprinkled over with a scattered eruption of sickly plants separated each of these houses from the street, and was traversed by a narrow pathway, yellowish in colour, and consisting apparently of a mixture of clay and of gravel. The whole place was very sloppy from the rain which had fallen through the night. The garden was bounded by a three-foot brick wall with a fringe of wood rails upon the top, and against this wall was leaning a stalwart police constable, surrounded by a small knot of loafers, who craned their necks and strained their eyes in the vain hope of catching some glimpse of the proceedings within. I had imagined that Sherlock Holmes would at once have hurried into the house and plunged into a study of the mystery. Nothing appeared to be further from his intention. With an air of nonchalance which, under the circumstances, seemed to me to border upon affectation, he lounged up and down the pavement, and gazed vacantly at the ground, the sky, the opposite houses and the line of railings. Having finished his scrutiny, he proceeded slowly down the path, or rather down the fringe of grass which flanked the path, keeping his eyes riveted upon the ground. Twice he stopped, and once I saw him smile, and heard him utter an exclamation of satisfaction. There were many marks of footsteps upon the wet clayey soil, but since the police had been coming and going over it, I was unable to see how my companion could hope to learn anything from it. Still I had had such extraordinary evidence of the quickness of his perceptive faculties, that I had no doubt that he could see a great deal which was hidden from me. At the door of the house we were met by a tall, white-faced, flaxen-haired man, with a notebook in his hand, who rushed forward and wrung my companion's hand with effusion. \"It is indeed kind of you to come,\" he said, \"I have had everything left untouched.\" \"Except that!\" my friend answered, pointing at the pathway. \"If a herd of buffaloes had passed along there could not be a greater mess. No doubt, however, you had drawn your own conclusions, Gregson, before you permitted this.\" \"I have had so much to do inside the house,\" the detective said evasively. \"My colleague, Mr. Lestrade, is here. I had relied upon him to look after this.\" Holmes glanced at me and raised his eyebrows sardonically. \"With two such men as yourself and Lestrade upon the ground, there will not be much for a third party to find out,\" he said. Gregson rubbed his hands in a self-satisfied way. \"I think we have done all that can be done,\" he answered; \"it's a queer case though, and I knew your taste for such things.\" \"You did not come here in a cab?\" asked Sherlock Holmes. \"No, sir.\" \"Nor Lestrade?\" \"No, sir.\" \"Then let us go and look at the room.\" With which inconsequent remark he strode on into the house, followed by Gregson, whose features expressed his astonishment. A short passage, bare planked and dusty, led to the kitchen and offices. Two doors opened out of it to the left and to the right. One of these had obviously been closed for many weeks. The other belonged to the dining-room, which was the apartment in which the mysterious affair had occurred. Holmes walked in, and I followed him with that subdued feeling at my heart which the presence of death inspires. It was a large square room, looking all the larger from the absence of all furniture. A vulgar flaring paper adorned the walls, but it was blotched in places with mildew, and here and there great strips had become detached and hung down, exposing the yellow plaster beneath. Opposite the door was a showy fireplace, surmounted by a mantelpiece of imitation white marble. On one corner of this was stuck the stump of a red wax candle. The solitary window was so dirty that the light was hazy and uncertain, giving a dull grey tinge to everything, which was intensified by the thick layer of dust which coated the whole apartment. All these details I observed afterwards. At present my attention was centred upon the single grim motionless figure which lay stretched upon the boards, with vacant sightless eyes staring up at the discoloured ceiling. It was that of a man about forty-three or forty-four years of age, middle-sized, broad shouldered, with crisp curling black hair, and a short stubbly beard. He was dressed in a heavy broadcloth frock coat and waistcoat, with light-coloured trousers, and immaculate collar and cuffs. A top hat, well brushed and trim, was placed upon the floor beside him. His hands were clenched and his arms thrown abroad, while his lower limbs were interlocked as though his death struggle had been a grievous one. On his rigid face there stood an expression of horror, and as it seemed to me, of hatred, such as I have never seen upon human features. This malignant and terrible contortion, combined with the low forehead, blunt nose, and prognathous jaw gave the dead man a singularly simious and ape-like appearance, which was increased by his writhing, unnatural posture. I have seen death in many forms, but never has it appeared to me in a more fearsome aspect than in that dark grimy apartment, which looked out upon one of the main arteries of suburban London. Lestrade, lean and ferret-like as ever, was standing by the doorway, and greeted my companion and myself. \"This case will make a stir, sir,\" he remarked. \"It beats anything I have seen, and I am no chicken.\" \"There is no clue?\" said Gregson. \"None at all,\" chimed in Lestrade. Sherlock Holmes approached the body, and, kneeling down, examined it intently. \"You are sure that there is no wound?\" he asked, pointing to numerous gouts and splashes of blood which lay all round. \"Positive!\" cried both detectives. \"Then, of course, this blood belongs to a second individual--presumably the murderer, if murder has been committed. It reminds me of the circumstances attendant on the death of Van Jansen, in Utrecht, in the year '34. Do you remember the case, Gregson?\" \"No, sir.\" \"Read it up--you really should. There is nothing new under the sun. It has all been done before.\" As he spoke, his nimble fingers were flying here, there, and everywhere, feeling, pressing, unbuttoning, examining, while his eyes wore the same far-away expression which I have already remarked upon. So swiftly was the examination made, that one would hardly have guessed the minuteness with which it was conducted. Finally, he sniffed the dead man's lips, and then glanced at the soles of his patent leather boots. \"He has not been moved at all?\" he asked. \"No more than was necessary for the purposes of our examination.\" \"You can take him to the mortuary now,\" he said. \"There is nothing more to be learned.\" Gregson had a stretcher and four men at hand. At his call they entered the room, and the stranger was lifted and carried out. As they raised him, a ring tinkled down and rolled across the floor. Lestrade grabbed it up and stared at it with mystified eyes. \"There's been a woman here,\" he cried. \"It's a woman's wedding-ring.\" He held it out, as he spoke, upon the palm of his hand. We all gathered round him and gazed at it. There could be no doubt that that circlet of plain gold had once adorned the finger of a bride. \"This complicates matters,\" said Gregson. \"Heaven knows, they were complicated enough before.\" \"You're sure it doesn't simplify them?\" observed Holmes. \"There's nothing to be learned by staring at it. What did you find in his pockets?\" \"We have it all here,\" said Gregson, pointing to a litter of objects upon one of the bottom steps of the stairs. \"A gold watch, No. 97163, by Barraud, of London. Gold Albert chain, very heavy and solid. Gold ring, with masonic device. Gold pin--bull-dog's head, with rubies as eyes. Russian leather card-case, with cards of Enoch J. Drebber of Cleveland, corresponding with the E. J. D. upon the linen. No purse, but loose money to the extent of seven pounds thirteen. Pocket edition of Boccaccio's 'Decameron,' with name of Joseph Stangerson upon the fly-leaf. Two letters--one addressed to E. J. Drebber and one to Joseph Stangerson.\" \"At what address?\" \"American Exchange, Strand--to be left till called for. They are both from the Guion Steamship Company, and refer to the sailing of their boats from Liverpool. It is clear that this unfortunate man was about to return to New York.\" \"Have you made any inquiries as to this man, Stangerson?\" \"I did it at once, sir,\" said Gregson. \"I have had advertisements sent to all the newspapers, and one of my men has gone to the American Exchange, but he has not returned yet.\" \"Have you sent to Cleveland?\" \"We telegraphed this morning.\" \"How did you word your inquiries?\" \"We simply detailed the circumstances, and said that we should be glad of any information which could help us.\" \"You did not ask for particulars on any point which appeared to you to be crucial?\" \"I asked about Stangerson.\" \"Nothing else? Is there no circumstance on which this whole case appears to hinge? Will you not telegraph again?\" \"I have said all I have to say,\" said Gregson, in an offended voice. Sherlock Holmes chuckled to himself, and appeared to be about to make some remark, when Lestrade, who had been in the front room while we were holding this conversation in the hall, reappeared upon the scene, rubbing his hands in a pompous and self-satisfied manner. \"Mr. Gregson,\" he said, \"I have just made a discovery of the highest importance, and one which would have been overlooked had I not made a careful examination of the walls.\" The little man's eyes sparkled as he spoke, and he was evidently in a state of suppressed exultation at having scored a point against his colleague. \"Come here,\" he said, bustling back into the room, the atmosphere of which felt clearer since the removal of its ghastly inmate. \"Now, stand there!\" He struck a match on his boot and held it up against the wall. \"Look at that!\" he said, triumphantly. I have remarked that the paper had fallen away in parts. In this particular corner of the room a large piece had peeled off, leaving a yellow square of coarse plastering. Across this bare space there was scrawled in blood-red letters a single word-- RACHE. \"What do you think of that?\" cried the detective, with the air of a showman exhibiting his show. \"This was overlooked because it was in the darkest corner of the room, and no one thought of looking there. The murderer has written it with his or her own blood. See this smear where it has trickled down the wall! That disposes of the idea of suicide anyhow. Why was that corner chosen to write it on? I will tell you. See that candle on the mantelpiece. It was lit at the time, and if it was lit this corner would be the brightest instead of the darkest portion of the wall.\" \"And what does it mean now that you have found it?\" asked Gregson in a depreciatory voice. \"Mean? Why, it means that the writer was going to put the female name Rachel, but was disturbed before he or she had time to finish. You mark my words, when this case comes to be cleared up you will find that a woman named Rachel has something to do with it. It's all very well for you to laugh, Mr. Sherlock Holmes. You may be very smart and clever, but the old hound is the best, when all is said and done.\" \"I really beg your pardon!\" said my companion, who had ruffled the little man's temper by bursting into an explosion of laughter. \"You certainly have the credit of being the first of us to find this out, and, as you say, it bears every mark of having been written by the other participant in last night's mystery. I have not had time to examine this room yet, but with your permission I shall do so now.\" As he spoke, he whipped a tape measure and a large round magnifying glass from his pocket. With these two implements he trotted noiselessly about the room, sometimes stopping, occasionally kneeling, and once lying flat upon his face. So engrossed was he with his occupation that he appeared to have forgotten our presence, for he chattered away to himself under his breath the whole time, keeping up a running fire of exclamations, groans, whistles, and little cries suggestive of encouragement and of hope. As I watched him I was irresistibly reminded of a pure-blooded well-trained foxhound as it dashes backwards and forwards through the covert, whining in its eagerness, until it comes across the lost scent. For twenty minutes or more he continued his researches, measuring with the most exact care the distance between marks which were entirely invisible to me, and occasionally applying his tape to the walls in an equally incomprehensible manner. In one place he gathered up very carefully a little pile of grey dust from the floor, and packed it away in an envelope. Finally, he examined with his glass the word upon the wall, going over every letter of it with the most minute exactness. This done, he appeared to be satisfied, for he replaced his tape and his glass in his pocket. \"They say that genius is an infinite capacity for taking pains,\" he remarked with a smile. \"It's a very bad definition, but it does apply to detective work.\" Gregson and Lestrade had watched the manoeuvres of their amateur companion with considerable curiosity and some contempt. They evidently failed to appreciate the fact, which I had begun to realize, that Sherlock Holmes' smallest actions were all directed towards some definite and practical end. \"What do you think of it, sir?\" they both asked. \"It would be robbing you of the credit of the case if I was to presume to help you,\" remarked my friend. \"You are doing so well now that it would be a pity for anyone to interfere.\" There was a world of sarcasm in his voice as he spoke. \"If you will let me know how your investigations go,\" he continued, \"I shall be happy to give you any help I can. In the meantime I should like to speak to the constable who found the body. Can you give me his name and address?\" Lestrade glanced at his note-book. \"John Rance,\" he said. \"He is off duty now. You will find him at 46, Audley Court, Kennington Park Gate.\" Holmes took a note of the address. \"Come along, Doctor,\" he said; \"we shall go and look him up. I'll tell you one thing which may help you in the case,\" he continued, turning to the two detectives. \"There has been murder done, and the murderer was a man. He was more than six feet high, was in the prime of life, had small feet for his height, wore coarse, square-toed boots and smoked a Trichinopoly cigar. He came here with his victim in a four-wheeled cab, which was drawn by a horse with three old shoes and one new one on his off fore leg. In all probability the murderer had a florid face, and the finger-nails of his right hand were remarkably long. These are only a few indications, but they may assist you.\" Lestrade and Gregson glanced at each other with an incredulous smile. \"If this man was murdered, how was it done?\" asked the former. \"Poison,\" said Sherlock Holmes curtly, and strode off. \"One other thing, Lestrade,\" he added, turning round at the door: \"'Rache,' is the German for 'revenge;' so don't lose your time looking for Miss Rachel.\" With which Parthian shot he walked away, leaving the two rivals open-mouthed behind him. CHAPTER IV What John Rance Had To Tell It was one o'clock when we left No. 3, Lauriston Gardens. Sherlock Holmes led me to the nearest telegraph office, whence he dispatched a long telegram. He then hailed a cab, and ordered the driver to take us to the address given us by Lestrade. \"There is nothing like first hand evidence,\" he remarked; \"as a matter of fact, my mind is entirely made up upon the case, but still we may as well learn all that is to be learned.\" \"You amaze me, Holmes,\" said I. \"Surely you are not as sure as you pretend to be of all those particulars which you gave.\" \"There's no room for a mistake,\" he answered. \"The very first thing which I observed on arriving there was that a cab had made two ruts with its wheels close to the curb. Now, up to last night, we have had no rain for a week, so that those wheels which left such a deep impression must have been there during the night. There were the marks of the horse's hoofs, too, the outline of one of which was far more clearly cut than that of the other three, showing that that was a new shoe. Since the cab was there after the rain began, and was not there at any time during the morning--I have Gregson's word for that--it follows that it must have been there during the night, and, therefore, that it brought those two individuals to the house.\" \"That seems simple enough,\" said I; \"but how about the other man's height?\" \"Why, the height of a man, in nine cases out of ten, can be told from the length of his stride. It is a simple calculation enough, though there is no use my boring you with figures. I had this fellow's stride both on the clay outside and on the dust within. Then I had a way of checking my calculation. When a man writes on a wall, his instinct leads him to write about the level of his own eyes. Now that writing was just over six feet from the ground. It was child's play.\" \"And his age?\" I asked. \"Well, if a man can stride four and a-half feet without the smallest effort, he can't be quite in the sere and yellow. That was the breadth of a puddle on the garden walk which he had evidently walked across. Patent-leather boots had gone round, and Square-toes had hopped over. There is no mystery about it at all. I am simply applying to ordinary life a few of those precepts of observation and deduction which I advocated in that article. Is there anything else that puzzles you?\" \"The finger nails and the Trichinopoly,\" I suggested. \"The writing on the wall was done with a man's forefinger dipped in blood. My glass allowed me to observe that the plaster was slightly scratched in doing it, which would not have been the case if the man's nail had been trimmed. I gathered up some scattered ash from the floor. It was dark in colour and flakey--such an ash as is only made by a Trichinopoly. I have made a special study of cigar ashes--in fact, I have written a monograph upon the subject. I flatter myself that I can distinguish at a glance the ash of any known brand, either of cigar or of tobacco. It is just in such details that the skilled detective differs from the Gregson and Lestrade type.\" \"And the florid face?\" I asked. \"Ah, that was a more daring shot, though I have no doubt that I was right. You must not ask me that at the present state of the affair.\" I passed my hand over my brow. \"My head is in a whirl,\" I remarked; \"the more one thinks of it the more mysterious it grows. How came these two men--if there were two men--into an empty house? What has become of the cabman who drove them? How could one man compel another to take poison? Where did the blood come from? What was the object of the murderer, since robbery had no part in it? How came the woman's ring there? Above all, why should the second man write up the German word RACHE before decamping? I confess that I cannot see any possible way of reconciling all these facts.\" My companion smiled approvingly. \"You sum up the difficulties of the situation succinctly and well,\" he said. \"There is much that is still obscure, though I have quite made up my mind on the main facts. As to poor Lestrade's discovery it was simply a blind intended to put the police upon a wrong track, by suggesting Socialism and secret societies. It was not done by a German. The A, if you noticed, was printed somewhat after the German fashion. Now, a real German invariably prints in the Latin character, so that we may safely say that this was not written by one, but by a clumsy imitator who overdid his part. It was simply a ruse to divert inquiry into a wrong channel. I'm not going to tell you much more of the case, Doctor. You know a conjuror gets no credit when once he has explained his trick, and if I show you too much of my method of working, you will come to the conclusion that I am a very ordinary individual after all.\" \"I shall never do that,\" I answered; \"you have brought detection as near an exact science as it ever will be brought in this world.\" My companion flushed up with pleasure at my words, and the earnest way in which I uttered them. I had already observed that he was as sensitive to flattery on the score of his art as any girl could be of her beauty. \"I'll tell you one other thing,\" he said. \"Patent-leathers and Square-toes came in the same cab, and they walked down the pathway together as friendly as possible--arm-in-arm, in all probability. When they got inside they walked up and down the room--or rather, Patent-leathers stood still while Square-toes walked up and down. I could read all that in the dust; and I could read that as he walked he grew more and more excited. That is shown by the increased length of his strides. He was talking all the while, and working himself up, no doubt, into a fury. Then the tragedy occurred. I've told you all I know myself now, for the rest is mere surmise and conjecture. We have a good working basis, however, on which to start. We must hurry up, for I want to go to Halle's concert to hear Norman Neruda this afternoon.\" This conversation had occurred while our cab had been threading its way through a long succession of dingy streets and dreary by-ways. In the dingiest and dreariest of them our driver suddenly came to a stand. \"That's Audley Court in there,\" he said, pointing to a narrow slit in the line of dead-coloured brick. \"You'll find me here when you come back.\" Audley Court was not an attractive locality. The narrow passage led us into a quadrangle paved with flags and lined by sordid dwellings. We picked our way among groups of dirty children, and through lines of discoloured linen, until we came to Number 46, the door of which was decorated with a small slip of brass on which the name Rance was engraved. On enquiry we found that the constable was in bed, and we were shown into a little front parlour to await his coming. He appeared presently, looking a little irritable at being disturbed in his slumbers. \"I made my report at the office,\" he said. Holmes took a half-sovereign from his pocket and played with it pensively. \"We thought that we should like to hear it all from your own lips,\" he said. \"I shall be most happy to tell you anything I can,\" the constable answered with his eyes upon the little golden disk. \"Just let us hear it all in your own way as it occurred.\" Rance sat down on the horsehair sofa, and knitted his brows as though determined not to omit anything in his narrative. \"I'll tell it ye from the beginning,\" he said. \"My time is from ten at night to six in the morning. At eleven there was a fight at the 'White Hart'; but bar that all was quiet enough on the beat. At one o'clock it began to rain, and I met Harry Murcher--him who has the Holland Grove beat--and we stood together at the corner of Henrietta Street a-talkin'. Presently--maybe about two or a little after--I thought I would take a look round and see that all was right down the Brixton Road. It was precious dirty and lonely. Not a soul did I meet all the way down, though a cab or two went past me. I was a strollin' down, thinkin' between ourselves how uncommon handy a four of gin hot would be, when suddenly the glint of a light caught my eye in the window of that same house. Now, I knew that them two houses in Lauriston Gardens was empty on account of him that owns them who won't have the drains seed to, though the very last tenant what lived in one of them died o' typhoid fever. I was knocked all in a heap therefore at seeing a light in the window, and I suspected as something was wrong. When I got to the door--\" \"You stopped, and then walked back to the garden gate,\" my companion interrupted. \"What did you do that for?\" Rance gave a violent jump, and stared at Sherlock Holmes with the utmost amazement upon his features. \"Why, that's true, sir,\" he said; \"though how you come to know it, Heaven only knows. Ye see, when I got up to the door it was so still and so lonesome, that I thought I'd be none the worse for some one with me. I ain't afeared of anything on this side o' the grave; but I thought that maybe it was him that died o' the typhoid inspecting the drains what killed him. The thought gave me a kind o' turn, and I walked back to the gate to see if I could see Murcher's lantern, but there wasn't no sign of him nor of anyone else.\" \"There was no one in the street?\" \"Not a livin' soul, sir, nor as much as a dog. Then I pulled myself together and went back and pushed the door open. All was quiet inside, so I went into the room where the light was a-burnin'. There was a candle flickerin' on the mantelpiece--a red wax one--and by its light I saw--\" \"Yes, I know all that you saw. You walked round the room several times, and you knelt down by the body, and then you walked through and tried the kitchen door, and then--\" John Rance sprang to his feet with a frightened face and suspicion in his eyes. \"Where was you hid to see all that?\" he cried. \"It seems to me that you knows a deal more than you should.\" Holmes laughed and threw his card across the table to the constable. \"Don't get arresting me for the murder,\" he said. \"I am one of the hounds and not the wolf; Mr. Gregson or Mr. Lestrade will answer for that. Go on, though. What did you do next?\" Rance resumed his seat, without however losing his mystified expression. \"I went back to the gate and sounded my whistle. That brought Murcher and two more to the spot.\" \"Was the street empty then?\" \"Well, it was, as far as anybody that could be of any good goes.\" \"What do you mean?\" The constable's features broadened into a grin. \"I've seen many a drunk chap in my time,\" he said, \"but never anyone so cryin' drunk as that cove. He was at the gate when I came out, a-leanin' up ag'in the railings, and a-singin' at the pitch o' his lungs about Columbine's New-fangled Banner, or some such stuff. He couldn't stand, far less help.\" \"What sort of a man was he?\" asked Sherlock Holmes. John Rance appeared to be somewhat irritated at this digression. \"He was an uncommon drunk sort o' man,\" he said. \"He'd ha' found hisself in the station if we hadn't been so took up.\" \"His face--his dress--didn't you notice them?\" Holmes broke in impatiently. \"I should think I did notice them, seeing that I had to prop him up--me and Murcher between us. He was a long chap, with a red face, the lower part muffled round--\" \"That will do,\" cried Holmes. \"What became of him?\" \"We'd enough to do without lookin' after him,\" the policeman said, in an aggrieved voice. \"I'll wager he found his way home all right.\" \"How was he dressed?\" \"A brown overcoat.\" \"Had he a whip in his hand?\" \"A whip--no.\" \"He must have left it behind,\" muttered my companion. \"You didn't happen to see or hear a cab after that?\" \"No.\" \"There's a half-sovereign for you,\" my companion said, standing up and taking his hat. \"I am afraid, Rance, that you will never rise in the force. That head of yours should be for use as well as ornament. You might have gained your sergeant's stripes last night. The man whom you held in your hands is the man who holds the clue of this mystery, and whom we are seeking. There is no use of arguing about it now; I tell you that it is so. Come along, Doctor.\" We started off for the cab together, leaving our informant incredulous, but obviously uncomfortable. \"The blundering fool,\" Holmes said, bitterly, as we drove back to our lodgings. \"Just to think of his having such an incomparable bit of good luck, and not taking advantage of it.\" \"I am rather in the dark still. It is true that the description of this man tallies with your idea of the second party in this mystery. But why should he come back to the house after leaving it? That is not the way of criminals.\" \"The ring, man, the ring: that was what he came back for. If we have no other way of catching him, we can always bait our line with the ring. I shall have him, Doctor--I'll lay you two to one that I have him. I must thank you for it all. I might not have gone but for you, and so have missed the finest study I ever came across: a study in scarlet, eh? Why shouldn't we use a little art jargon. There's the scarlet thread of murder running through the colourless skein of life, and our duty is to unravel it, and isolate it, and expose every inch of it. And now for lunch, and then for Norman Neruda. Her attack and her bowing are splendid. What's that little thing of Chopin's she plays so magnificently: Tra-la-la-lira-lira-lay.\" Leaning back in the cab, this amateur bloodhound carolled away like a lark while I meditated upon the many-sidedness of the human mind. CHAPTER V Our Advertisement Brings A Visitor Our morning's exertions had been too much for my weak health, and I was tired out in the afternoon. After Holmes' departure for the concert, I lay down upon the sofa and endeavoured to get a couple of hours' sleep. It was a useless attempt. My mind had been too much excited by all that had occurred, and the strangest fancies and surmises crowded into it. Every time that I closed my eyes I saw before me the distorted baboon-like countenance of the murdered man. So sinister was the impression which that face had produced upon me that I found it difficult to feel anything but gratitude for him who had removed its owner from the world. If ever human features bespoke vice of the most malignant type, they were certainly those of Enoch J. Drebber, of Cleveland. Still I recognized that justice must be done, and that the depravity of the victim was no condonement in the eyes of the law. The more I thought of it the more extraordinary did my companion's hypothesis, that the man had been poisoned, appear. I remembered how he had sniffed his lips, and had no doubt that he had detected something which had given rise to the idea. Then, again, if not poison, what had caused the man's death, since there was neither wound nor marks of strangulation? But, on the other hand, whose blood was that which lay so thickly upon the floor? There were no signs of a struggle, nor had the victim any weapon with which he might have wounded an antagonist. As long as all these questions were unsolved, I felt that sleep would be no easy matter, either for Holmes or myself. His quiet self-confident manner convinced me that he had already formed a theory which explained all the facts, though what it was I could not for an instant conjecture. He was very late in returning--so late, that I knew that the concert could not have detained him all the time. Dinner was on the table before he appeared. \"It was magnificent,\" he said, as he took his seat. \"Do you remember what Darwin says about music? He claims that the power of producing and appreciating it existed among the human race long before the power of speech was arrived at. Perhaps that is why we are so subtly influenced by it. There are vague memories in our souls of those misty centuries when the world was in its childhood.\" \"That's rather a broad idea,\" I remarked. \"One's ideas must be as broad as Nature if they are to interpret Nature,\" he answered. \"What's the matter? You're not looking quite yourself. This Brixton Road affair has upset you.\" \"To tell the truth, it has,\" I said. \"I ought to be more case-hardened after my Afghan experiences. I saw my own comrades hacked to pieces at Maiwand without losing my nerve.\" \"I can understand. There is a mystery about this which stimulates the imagination; where there is no imagination there is no horror. Have you seen the evening paper?\" \"No.\" \"It gives a fairly good account of the affair. It does not mention the fact that when the man was raised up, a woman's wedding ring fell upon the floor. It is just as well it does not.\" \"Why?\" \"Look at this advertisement,\" he answered. \"I had one sent to every paper this morning immediately after the affair.\" He threw the paper across to me and I glanced at the place indicated. It was the first announcement in the \"Found\" column. \"In Brixton Road, this morning,\" it ran, \"a plain gold wedding ring, found in the roadway between the 'White Hart' Tavern and Holland Grove. Apply Dr. Watson, 221b, Baker Street, between eight and nine this evening.\" \"Excuse my using your name,\" he said. \"If I used my own some of these dunderheads would recognize it, and want to meddle in the affair.\" \"That is all right,\" I answered. \"But supposing anyone applies, I have no ring.\" \"Oh yes, you have,\" said he, handing me one. \"This will do very well. It is almost a facsimile.\" \"And who do you expect will answer this advertisement.\" \"Why, the man in the brown coat--our florid friend with the square toes. If he does not come himself he will send an accomplice.\" \"Would he not consider it as too dangerous?\" \"Not at all. If my view of the case is correct, and I have every reason to believe that it is, this man would rather risk anything than lose the ring. According to my notion he dropped it while stooping over Drebber's body, and did not miss it at the time. After leaving the house he discovered his loss and hurried back, but found the police already in possession, owing to his own folly in leaving the candle burning. He had to pretend to be drunk in order to allay the suspicions which might have been aroused by his appearance at the gate. Now put yourself in that man's place. On thinking the matter over, it must have occurred to him that it was possible that he had lost the ring in the road after leaving the house. What would he do, then? He would eagerly look out for the evening papers in the hope of seeing it among the articles found. His eye, of course, would light upon this. He would be overjoyed. Why should he fear a trap? There would be no reason in his eyes why the finding of the ring should be connected with the murder. He would come. He will come. You shall see him within an hour.\" \"And then?\" I asked. \"Oh, you can leave me to deal with him then. Have you any arms?\" \"I have my old service revolver and a few cartridges.\" \"You had better clean it and load it. He will be a desperate man, and though I shall take him unawares, it is as well to be ready for anything.\" I went to my bedroom and followed his advice. When I returned with the pistol the table had been cleared, and Holmes was engaged in his favourite occupation of scraping upon his violin. \"The plot thickens,\" he said, as I entered; \"I have just had an answer to my American telegram. My view of the case is the correct one.\" \"And that is?\" I asked eagerly. \"My fiddle would be the better for new strings,\" he remarked. \"Put your pistol in your pocket. When the fellow comes speak to him in an ordinary way. Leave the rest to me. Don't frighten him by looking at him too hard.\" \"It is eight o'clock now,\" I said, glancing at my watch. \"Yes. He will probably be here in a few minutes. Open the door slightly. That will do. Now put the key on the inside. Thank you! This is a queer old book I picked up at a stall yesterday--De Jure inter Gentes--published in Latin at Liege in the Lowlands, in 1642. Charles' head was still firm on his shoulders when this little brown-backed volume was struck off.\" \"Who is the printer?\" \"Philippe de Croy, whoever he may have been. On the fly-leaf, in very faded ink, is written 'Ex libris Guliolmi Whyte.' I wonder who William Whyte was. Some pragmatical seventeenth century lawyer, I suppose. His writing has a legal twist about it. Here comes our man, I think.\" As he spoke there was a sharp ring at the bell. Sherlock Holmes rose softly and moved his chair in the direction of the door. We heard the servant pass along the hall, and the sharp click of the latch as she opened it. \"Does Dr. Watson live here?\" asked a clear but rather harsh voice. We could not hear the servant's reply, but the door closed, and some one began to ascend the stairs. The footfall was an uncertain and shuffling one. A look of surprise passed over the face of my companion as he listened to it. It came slowly along the passage, and there was a feeble tap at the door. \"Come in,\" I cried. At my summons, instead of the man of violence whom we expected, a very old and wrinkled woman hobbled into the apartment. She appeared to be dazzled by the sudden blaze of light, and after dropping a curtsey, she stood blinking at us with her bleared eyes and fumbling in her pocket with nervous, shaky fingers. I glanced at my companion, and his face had assumed such a disconsolate expression that it was all I could do to keep my countenance. The old crone drew out an evening paper, and pointed at our advertisement. \"It's this as has brought me, good gentlemen,\" she said, dropping another curtsey; \"a gold wedding ring in the Brixton Road. It belongs to my girl Sally, as was married only this time twelvemonth, which her husband is steward aboard a Union boat, and what he'd say if he comes 'ome and found her without her ring is more than I can think, he being short enough at the best o' times, but more especially when he has the drink. If it please you, she went to the circus last night along with--\" \"Is that her ring?\" I asked. \"The Lord be thanked!\" cried the old woman; \"Sally will be a glad woman this night. That's the ring.\" \"And what may your address be?\" I inquired, taking up a pencil. \"13, Duncan Street, Houndsditch. A weary way from here.\" \"The Brixton Road does not lie between any circus and Houndsditch,\" said Sherlock Holmes sharply. The old woman faced round and looked keenly at him from her little red-rimmed eyes. \"The gentleman asked me for my address,\" she said. \"Sally lives in lodgings at 3, Mayfield Place, Peckham.\" \"And your name is--?\" \"My name is Sawyer--her's is Dennis, which Tom Dennis married her--and a smart, clean lad, too, as long as he's at sea, and no steward in the company more thought of; but when on shore, what with the women and what with liquor shops--\" \"Here is your ring, Mrs. Sawyer,\" I interrupted, in obedience to a sign from my companion; \"it clearly belongs to your daughter, and I am glad to be able to restore it to the rightful owner.\" With many mumbled blessings and protestations of gratitude the old crone packed it away in her pocket, and shuffled off down the stairs. Sherlock Holmes sprang to his feet the moment that she was gone and rushed into his room. He returned in a few seconds enveloped in an ulster and a cravat. \"I'll follow her,\" he said, hurriedly; \"she must be an accomplice, and will lead me to him. Wait up for me.\" The hall door had hardly slammed behind our visitor before Holmes had descended the stair. Looking through the window I could see her walking feebly along the other side, while her pursuer dogged her some little distance behind. \"Either his whole theory is incorrect,\" I thought to myself, \"or else he will be led now to the heart of the mystery.\" There was no need for him to ask me to wait up for him, for I felt that sleep was impossible until I heard the result of his adventure. It was close upon nine when he set out. I had no idea how long he might be, but I sat stolidly puffing at my pipe and skipping over the pages of Henri Murger's Vie de Boh\u00e8me. Ten o'clock passed, and I heard the footsteps of the maid as they pattered off to bed. Eleven, and the more stately tread of the landlady passed my door, bound for the same destination. It was close upon twelve before I heard the sharp sound of his latch-key. The instant he entered I saw by his face that he had not been successful. Amusement and chagrin seemed to be struggling for the mastery, until the former suddenly carried the day, and he burst into a hearty laugh. \"I wouldn't have the Scotland Yarders know it for the world,\" he cried, dropping into his chair; \"I have chaffed them so much that they would never have let me hear the end of it. I can afford to laugh, because I know that I will be even with them in the long run.\" \"What is it then?\" I asked. \"Oh, I don't mind telling a story against myself. That creature had gone a little way when she began to limp and show every sign of being foot-sore. Presently she came to a halt, and hailed a four-wheeler which was passing. I managed to be close to her so as to hear the address, but I need not have been so anxious, for she sang it out loud enough to be heard at the other side of the street, 'Drive to 13, Duncan Street, Houndsditch,' she cried. This begins to look genuine, I thought, and having seen her safely inside, I perched myself behind. That's an art which every detective should be an expert at. Well, away we rattled, and never drew rein until we reached the street in question. I hopped off before we came to the door, and strolled down the street in an easy, lounging way. I saw the cab pull up. The driver jumped down, and I saw him open the door and stand expectantly. Nothing came out though. When I reached him he was groping about frantically in the empty cab, and giving vent to the finest assorted collection of oaths that ever I listened to. There was no sign or trace of his passenger, and I fear it will be some time before he gets his fare. On inquiring at Number 13 we found that the house belonged to a respectable paperhanger, named Keswick, and that no one of the name either of Sawyer or Dennis had ever been heard of there.\" \"You don't mean to say,\" I cried, in amazement, \"that that tottering, feeble old woman was able to get out of the cab while it was in motion, without either you or the driver seeing her?\" \"Old woman be damned!\" said Sherlock Holmes, sharply. \"We were the old women to be so taken in. It must have been a young man, and an active one, too, besides being an incomparable actor. The get-up was inimitable. He saw that he was followed, no doubt, and used this means of giving me the slip. It shows that the man we are after is not as lonely as I imagined he was, but has friends who are ready to risk something for him. Now, Doctor, you are looking done-up. Take my advice and turn in.\" I was certainly feeling very weary, so I obeyed his injunction. I left Holmes seated in front of the smouldering fire, and long into the watches of the night I heard the low, melancholy wailings of his violin, and knew that he was still pondering over the strange problem which he had set himself to unravel. CHAPTER VI Tobias Gregson Shows What He Can Do The papers next day were full of the \"Brixton Mystery,\" as they termed it. Each had a long account of the affair, and some had leaders upon it in addition. There was some information in them which was new to me. I still retain in my scrap-book numerous clippings and extracts bearing upon the case. Here is a condensation of a few of them:-- The Daily Telegraph remarked that in the history of crime there had seldom been a tragedy which presented stranger features. The German name of the victim, the absence of all other motive, and the sinister inscription on the wall, all pointed to its perpetration by political refugees and revolutionists. The Socialists had many branches in America, and the deceased had, no doubt, infringed their unwritten laws, and been tracked down by them. After alluding airily to the Vehmgericht, aqua tofana, Carbonari, the Marchioness de Brinvilliers, the Darwinian theory, the principles of Malthus, and the Ratcliff Highway murders, the article concluded by admonishing the Government and advocating a closer watch over foreigners in England. The Standard commented upon the fact that lawless outrages of the sort usually occurred under a Liberal Administration. They arose from the unsettling of the minds of the masses, and the consequent weakening of all authority. The deceased was an American gentleman who had been residing for some weeks in the Metropolis. He had stayed at the boarding-house of Madame Charpentier, in Torquay Terrace, Camberwell. He was accompanied in his travels by his private secretary, Mr. Joseph Stangerson. The two bade adieu to their landlady upon Tuesday, the 4th inst., and departed to Euston Station with the avowed intention of catching the Liverpool express. They were afterwards seen together upon the platform. Nothing more is known of them until Mr. Drebber's body was, as recorded, discovered in an empty house in the Brixton Road, many miles from Euston. How he came there, or how he met his fate, are questions which are still involved in mystery. Nothing is known of the whereabouts of Stangerson. We are glad to learn that Mr. Lestrade and Mr. Gregson, of Scotland Yard, are both engaged upon the case, and it is confidently anticipated that these well-known officers will speedily throw light upon the matter. The Daily News observed that there was no doubt as to the crime being a political one. The despotism and hatred of Liberalism which animated the Continental Governments had had the effect of driving to our shores a number of men who might have made excellent citizens were they not soured by the recollection of all that they had undergone. Among these men there was a stringent code of honour, any infringement of which was punished by death. Every effort should be made to find the secretary, Stangerson, and to ascertain some particulars of the habits of the deceased. A great step had been gained by the discovery of the address of the house at which he had boarded--a result which was entirely due to the acuteness and energy of Mr. Gregson of Scotland Yard. Sherlock Holmes and I read these notices over together at breakfast, and they appeared to afford him considerable amusement. \"I told you that, whatever happened, Lestrade and Gregson would be sure to score.\" \"That depends on how it turns out.\" \"Oh, bless you, it doesn't matter in the least. If the man is caught, it will be on account of their exertions; if he escapes, it will be in spite of their exertions. It's heads I win and tails you lose. Whatever they do, they will have followers. 'Un sot trouve toujours un plus sot qui l'admire.'\" \"What on earth is this?\" I cried, for at this moment there came the pattering of many steps in the hall and on the stairs, accompanied by audible expressions of disgust upon the part of our landlady. \"It's the Baker Street division of the detective police force,\" said my companion, gravely; and as he spoke there rushed into the room half a dozen of the dirtiest and most ragged street Arabs that ever I clapped eyes on. \"'Tention!\" cried Holmes, in a sharp tone, and the six dirty little scoundrels stood in a line like so many disreputable statuettes. \"In future you shall send up Wiggins alone to report, and the rest of you must wait in the street. Have you found it, Wiggins?\" \"No, sir, we hain't,\" said one of the youths. \"I hardly expected you would. You must keep on until you do. Here are your wages.\" He handed each of them a shilling. \"Now, off you go, and come back with a better report next time.\" He waved his hand, and they scampered away downstairs like so many rats, and we heard their shrill voices next moment in the street. \"There's more work to be got out of one of those little beggars than out of a dozen of the force,\" Holmes remarked. \"The mere sight of an official-looking person seals men's lips. These youngsters, however, go everywhere and hear everything. They are as sharp as needles, too; all they want is organisation.\" \"Is it on this Brixton case that you are employing them?\" I asked. \"Yes; there is a point which I wish to ascertain. It is merely a matter of time. Hullo! we are going to hear some news now with a vengeance! Here is Gregson coming down the road with beatitude written upon every feature of his face. Bound for us, I know. Yes, he is stopping. There he is!\" There was a violent peal at the bell, and in a few seconds the fair-haired detective came up the stairs, three steps at a time, and burst into our sitting-room. \"My dear fellow,\" he cried, wringing Holmes' unresponsive hand, \"congratulate me! I have made the whole thing as clear as day.\" A shade of anxiety seemed to me to cross my companion's expressive face. \"Do you mean that you are on the right track?\" he asked. \"The right track! Why, sir, we have the man under lock and key.\" \"And his name is?\" \"Arthur Charpentier, sub-lieutenant in Her Majesty's navy,\" cried Gregson, pompously, rubbing his fat hands and inflating his chest. Sherlock Holmes gave a sigh of relief, and relaxed into a smile. \"Take a seat, and try one of these cigars,\" he said. \"We are anxious to know how you managed it. Will you have some whiskey and water?\" \"I don't mind if I do,\" the detective answered. \"The tremendous exertions which I have gone through during the last day or two have worn me out. Not so much bodily exertion, you understand, as the strain upon the mind. You will appreciate that, Mr. Sherlock Holmes, for we are both brain-workers.\" \"You do me too much honour,\" said Holmes, gravely. \"Let us hear how you arrived at this most gratifying result.\" The detective seated himself in the arm-chair, and puffed complacently at his cigar. Then suddenly he slapped his thigh in a paroxysm of amusement. \"The fun of it is,\" he cried, \"that that fool Lestrade, who thinks himself so smart, has gone off upon the wrong track altogether. He is after the secretary Stangerson, who had no more to do with the crime than the babe unborn. I have no doubt that he has caught him by this time.\" The idea tickled Gregson so much that he laughed until he choked. \"And how did you get your clue?\" \"Ah, I'll tell you all about it. Of course, Doctor Watson, this is strictly between ourselves. The first difficulty which we had to contend with was the finding of this American's antecedents. Some people would have waited until their advertisements were answered, or until parties came forward and volunteered information. That is not Tobias Gregson's way of going to work. You remember the hat beside the dead man?\" \"Yes,\" said Holmes; \"by John Underwood and Sons, 129, Camberwell Road.\" Gregson looked quite crest-fallen. \"I had no idea that you noticed that,\" he said. \"Have you been there?\" \"No.\" \"Ha!\" cried Gregson, in a relieved voice; \"you should never neglect a chance, however small it may seem.\" \"To a great mind, nothing is little,\" remarked Holmes, sententiously. \"Well, I went to Underwood, and asked him if he had sold a hat of that size and description. He looked over his books, and came on it at once. He had sent the hat to a Mr. Drebber, residing at Charpentier's Boarding Establishment, Torquay Terrace. Thus I got at his address.\" \"Smart--very smart!\" murmured Sherlock Holmes. \"I next called upon Madame Charpentier,\" continued the detective. \"I found her very pale and distressed. Her daughter was in the room, too--an uncommonly fine girl she is, too; she was looking red about the eyes and her lips trembled as I spoke to her. That didn't escape my notice. I began to smell a rat. You know the feeling, Mr. Sherlock Holmes, when you come upon the right scent--a kind of thrill in your nerves. 'Have you heard of the mysterious death of your late boarder Mr. Enoch J. Drebber, of Cleveland?' I asked. \"The mother nodded. She didn't seem able to get out a word. The daughter burst into tears. I felt more than ever that these people knew something of the matter. \"'At what o'clock did Mr. Drebber leave your house for the train?' I asked. \"'At eight o'clock,' she said, gulping in her throat to keep down her agitation. 'His secretary, Mr. Stangerson, said that there were two trains--one at 9.15 and one at 11. He was to catch the first.' \"'And was that the last which you saw of him?' \"A terrible change came over the woman's face as I asked the question. Her features turned perfectly livid. It was some seconds before she could get out the single word 'Yes'--and when it did come it was in a husky unnatural tone. \"There was silence for a moment, and then the daughter spoke in a calm clear voice. \"'No good can ever come of falsehood, mother,' she said. 'Let us be frank with this gentleman. We did see Mr. Drebber again.' \"'God forgive you!' cried Madame Charpentier, throwing up her hands and sinking back in her chair. 'You have murdered your brother.' \"'Arthur would rather that we spoke the truth,' the girl answered firmly. \"'You had best tell me all about it now,' I said. 'Half-confidences are worse than none. Besides, you do not know how much we know of it.' \"'On your head be it, Alice!' cried her mother; and then, turning to me, 'I will tell you all, sir. Do not imagine that my agitation on behalf of my son arises from any fear lest he should have had a hand in this terrible affair. He is utterly innocent of it. My dread is, however, that in your eyes and in the eyes of others he may appear to be compromised. That however is surely impossible. His high character, his profession, his antecedents would all forbid it.' \"'Your best way is to make a clean breast of the facts,' I answered. 'Depend upon it, if your son is innocent he will be none the worse.' \"'Perhaps, Alice, you had better leave us together,' she said, and her daughter withdrew. 'Now, sir,' she continued, 'I had no intention of telling you all this, but since my poor daughter has disclosed it I have no alternative. Having once decided to speak, I will tell you all without omitting any particular.' \"'It is your wisest course,' said I. \"'Mr. Drebber has been with us nearly three weeks. He and his secretary, Mr. Stangerson, had been travelling on the Continent. I noticed a \"Copenhagen\" label upon each of their trunks, showing that that had been their last stopping place. Stangerson was a quiet reserved man, but his employer, I am sorry to say, was far otherwise. He was coarse in his habits and brutish in his ways. The very night of his arrival he became very much the worse for drink, and, indeed, after twelve o'clock in the day he could hardly ever be said to be sober. His manners towards the maid-servants were disgustingly free and familiar. Worst of all, he speedily assumed the same attitude towards my daughter, Alice, and spoke to her more than once in a way which, fortunately, she is too innocent to understand. On one occasion he actually seized her in his arms and embraced her--an outrage which caused his own secretary to reproach him for his unmanly conduct.' \"'But why did you stand all this,' I asked. 'I suppose that you can get rid of your boarders when you wish.' \"Mrs. Charpentier blushed at my pertinent question. 'Would to God that I had given him notice on the very day that he came,' she said. 'But it was a sore temptation. They were paying a pound a day each--fourteen pounds a week, and this is the slack season. I am a widow, and my boy in the Navy has cost me much. I grudged to lose the money. I acted for the best. This last was too much, however, and I gave him notice to leave on account of it. That was the reason of his going.' \"'Well?' \"'My heart grew light when I saw him drive away. My son is on leave just now, but I did not tell him anything of all this, for his temper is violent, and he is passionately fond of his sister. When I closed the door behind them a load seemed to be lifted from my mind. Alas, in less than an hour there was a ring at the bell, and I learned that Mr. Drebber had returned. He was much excited, and evidently the worse for drink. He forced his way into the room, where I was sitting with my daughter, and made some incoherent remark about having missed his train. He then turned to Alice, and before my very face, proposed to her that she should fly with him. \"You are of age,\" he said, \"and there is no law to stop you. I have money enough and to spare. Never mind the old girl here, but come along with me now straight away. You shall live like a princess.\" Poor Alice was so frightened that she shrunk away from him, but he caught her by the wrist and endeavoured to draw her towards the door. I screamed, and at that moment my son Arthur came into the room. What happened then I do not know. I heard oaths and the confused sounds of a scuffle. I was too terrified to raise my head. When I did look up I saw Arthur standing in the doorway laughing, with a stick in his hand. \"I don't think that fine fellow will trouble us again,\" he said. \"I will just go after him and see what he does with himself.\" With those words he took his hat and started off down the street. The next morning we heard of Mr. Drebber's mysterious death.' \"This statement came from Mrs. Charpentier's lips with many gasps and pauses. At times she spoke so low that I could hardly catch the words. I made shorthand notes of all that she said, however, so that there should be no possibility of a mistake.\" \"It's quite exciting,\" said Sherlock Holmes, with a yawn. \"What happened next?\" \"When Mrs. Charpentier paused,\" the detective continued, \"I saw that the whole case hung upon one point. Fixing her with my eye in a way which I always found effective with women, I asked her at what hour her son returned. \"'I do not know,' she answered. \"'Not know?' \"'No; he has a latch-key, and he let himself in.' \"'After you went to bed?' \"'Yes.' \"'When did you go to bed?' \"'About eleven.' \"'So your son was gone at least two hours?' \"'Yes.' \"'Possibly four or five?' \"'Yes.' \"'What was he doing during that time?' \"'I do not know,' she answered, turning white to her very lips. \"Of course after that there was nothing more to be done. I found out where Lieutenant Charpentier was, took two officers with me, and arrested him. When I touched him on the shoulder and warned him to come quietly with us, he answered us as bold as brass, 'I suppose you are arresting me for being concerned in the death of that scoundrel Drebber,' he said. We had said nothing to him about it, so that his alluding to it had a most suspicious aspect.\" \"Very,\" said Holmes. \"He still carried the heavy stick which the mother described him as having with him when he followed Drebber. It was a stout oak cudgel.\" \"What is your theory, then?\" \"Well, my theory is that he followed Drebber as far as the Brixton Road. When there, a fresh altercation arose between them, in the course of which Drebber received a blow from the stick, in the pit of the stomach, perhaps, which killed him without leaving any mark. The night was so wet that no one was about, so Charpentier dragged the body of his victim into the empty house. As to the candle, and the blood, and the writing on the wall, and the ring, they may all be so many tricks to throw the police on to the wrong scent.\" \"Well done!\" said Holmes in an encouraging voice. \"Really, Gregson, you are getting along. We shall make something of you yet.\" \"I flatter myself that I have managed it rather neatly,\" the detective answered proudly. \"The young man volunteered a statement, in which he said that after following Drebber some time, the latter perceived him, and took a cab in order to get away from him. On his way home he met an old shipmate, and took a long walk with him. On being asked where this old shipmate lived, he was unable to give any satisfactory reply. I think the whole case fits together uncommonly well. What amuses me is to think of Lestrade, who had started off upon the wrong scent. I am afraid he won't make much of--Why, by Jove, here's the very man himself!\" It was indeed Lestrade, who had ascended the stairs while we were talking, and who now entered the room. The assurance and jauntiness which generally marked his demeanour and dress were, however, wanting. His face was disturbed and troubled, while his clothes were disarranged and untidy. He had evidently come with the intention of consulting with Sherlock Holmes, for on perceiving his colleague he appeared to be embarrassed and put out. He stood in the centre of the room, fumbling nervously with his hat and uncertain what to do. \"This is a most extraordinary case,\" he said at last--\"a most incomprehensible affair.\" \"Ah, you find it so, Mr. Lestrade!\" cried Gregson, triumphantly. \"I thought you would come to that conclusion. Have you managed to find the Secretary, Mr. Joseph Stangerson?\" \"The Secretary, Mr. Joseph Stangerson,\" said Lestrade gravely, \"was murdered at Halliday's Private Hotel about six o'clock this morning.\" CHAPTER VII Light In The Darkness The intelligence with which Lestrade greeted us was so momentous and so unexpected, that we were all three fairly dumbfounded. Gregson sprang out of his chair and upset the remainder of his whiskey and water. I stared in silence at Sherlock Holmes, whose lips were compressed and his brows drawn down over his eyes. \"Stangerson too!\" he muttered. \"The plot thickens.\" \"It was quite thick enough before,\" grumbled Lestrade, taking a chair. \"I seem to have dropped into a sort of council of war.\" \"Are you--are you sure of this piece of intelligence?\" stammered Gregson. \"I have just come from his room,\" said Lestrade. \"I was the first to discover what had occurred.\" \"We have been hearing Gregson's view of the matter,\" Holmes observed. \"Would you mind letting us know what you have seen and done?\" \"I have no objection,\" Lestrade answered, seating himself. \"I freely confess that I was of the opinion that Stangerson was concerned in the death of Drebber. This fresh development has shown me that I was completely mistaken. Full of the one idea, I set myself to find out what had become of the Secretary. They had been seen together at Euston Station about half-past eight on the evening of the third. At two in the morning Drebber had been found in the Brixton Road. The question which confronted me was to find out how Stangerson had been employed between 8.30 and the time of the crime, and what had become of him afterwards. I telegraphed to Liverpool, giving a description of the man, and warning them to keep a watch upon the American boats. I then set to work calling upon all the hotels and lodging-houses in the vicinity of Euston. You see, I argued that if Drebber and his companion had become separated, the natural course for the latter would be to put up somewhere in the vicinity for the night, and then to hang about the station again next morning.\" \"They would be likely to agree on some meeting-place beforehand,\" remarked Holmes. \"So it proved. I spent the whole of yesterday evening in making enquiries entirely without avail. This morning I began very early, and at eight o'clock I reached Halliday's Private Hotel, in Little George Street. On my enquiry as to whether a Mr. Stangerson was living there, they at once answered me in the affirmative. \"'No doubt you are the gentleman whom he was expecting,' they said. 'He has been waiting for a gentleman for two days.' \"'Where is he now?' I asked. \"'He is upstairs in bed. He wished to be called at nine.' \"'I will go up and see him at once,' I said. \"It seemed to me that my sudden appearance might shake his nerves and lead him to say something unguarded. The Boots volunteered to show me the room: it was on the second floor, and there was a small corridor leading up to it. The Boots pointed out the door to me, and was about to go downstairs again when I saw something that made me feel sickish, in spite of my twenty years' experience. From under the door there curled a little red ribbon of blood, which had meandered across the passage and formed a little pool along the skirting at the other side. I gave a cry, which brought the Boots back. He nearly fainted when he saw it. The door was locked on the inside, but we put our shoulders to it, and knocked it in. The window of the room was open, and beside the window, all huddled up, lay the body of a man in his nightdress. He was quite dead, and had been for some time, for his limbs were rigid and cold. When we turned him over, the Boots recognized him at once as being the same gentleman who had engaged the room under the name of Joseph Stangerson. The cause of death was a deep stab in the left side, which must have penetrated the heart. And now comes the strangest part of the affair. What do you suppose was above the murdered man?\" I felt a creeping of the flesh, and a presentiment of coming horror, even before Sherlock Holmes answered. \"The word RACHE, written in letters of blood,\" he said. \"That was it,\" said Lestrade, in an awe-struck voice; and we were all silent for a while. There was something so methodical and so incomprehensible about the deeds of this unknown assassin, that it imparted a fresh ghastliness to his crimes. My nerves, which were steady enough on the field of battle tingled as I thought of it. \"The man was seen,\" continued Lestrade. \"A milk boy, passing on his way to the dairy, happened to walk down the lane which leads from the mews at the back of the hotel. He noticed that a ladder, which usually lay there, was raised against one of the windows of the second floor, which was wide open. After passing, he looked back and saw a man descend the ladder. He came down so quietly and openly that the boy imagined him to be some carpenter or joiner at work in the hotel. He took no particular notice of him, beyond thinking in his own mind that it was early for him to be at work. He has an impression that the man was tall, had a reddish face, and was dressed in a long, brownish coat. He must have stayed in the room some little time after the murder, for we found blood-stained water in the basin, where he had washed his hands, and marks on the sheets where he had deliberately wiped his knife.\" I glanced at Holmes on hearing the description of the murderer, which tallied so exactly with his own. There was, however, no trace of exultation or satisfaction upon his face. \"Did you find nothing in the room which could furnish a clue to the murderer?\" he asked. \"Nothing. Stangerson had Drebber's purse in his pocket, but it seems that this was usual, as he did all the paying. There was eighty odd pounds in it, but nothing had been taken. Whatever the motives of these extraordinary crimes, robbery is certainly not one of them. There were no papers or memoranda in the murdered man's pocket, except a single telegram, dated from Cleveland about a month ago, and containing the words, 'J. H. is in Europe.' There was no name appended to this message.\" \"And there was nothing else?\" Holmes asked. \"Nothing of any importance. The man's novel, with which he had read himself to sleep was lying upon the bed, and his pipe was on a chair beside him. There was a glass of water on the table, and on the window-sill a small chip ointment box containing a couple of pills.\" Sherlock Holmes sprang from his chair with an exclamation of delight. \"The last link,\" he cried, exultantly. \"My case is complete.\" The two detectives stared at him in amazement. \"I have now in my hands,\" my companion said, confidently, \"all the threads which have formed such a tangle. There are, of course, details to be filled in, but I am as certain of all the main facts, from the time that Drebber parted from Stangerson at the station, up to the discovery of the body of the latter, as if I had seen them with my own eyes. I will give you a proof of my knowledge. Could you lay your hand upon those pills?\" \"I have them,\" said Lestrade, producing a small white box; \"I took them and the purse and the telegram, intending to have them put in a place of safety at the Police Station. It was the merest chance my taking these pills, for I am bound to say that I do not attach any importance to them.\" \"Give them here,\" said Holmes. \"Now, Doctor,\" turning to me, \"are those ordinary pills?\" They certainly were not. They were of a pearly grey colour, small, round, and almost transparent against the light. \"From their lightness and transparency, I should imagine that they are soluble in water,\" I remarked. \"Precisely so,\" answered Holmes. \"Now would you mind going down and fetching that poor little devil of a terrier which has been bad so long, and which the landlady wanted you to put out of its pain yesterday.\" I went downstairs and carried the dog upstair in my arms. It's laboured breathing and glazing eye showed that it was not far from its end. Indeed, its snow-white muzzle proclaimed that it had already exceeded the usual term of canine existence. I placed it upon a cushion on the rug. \"I will now cut one of these pills in two,\" said Holmes, and drawing his penknife he suited the action to the word. \"One half we return into the box for future purposes. The other half I will place in this wine glass, in which is a teaspoonful of water. You perceive that our friend, the Doctor, is right, and that it readily dissolves.\" \"This may be very interesting,\" said Lestrade, in the injured tone of one who suspects that he is being laughed at, \"I cannot see, however, what it has to do with the death of Mr. Joseph Stangerson.\" \"Patience, my friend, patience! You will find in time that it has everything to do with it. I shall now add a little milk to make the mixture palatable, and on presenting it to the dog we find that he laps it up readily enough.\" As he spoke he turned the contents of the wine glass into a saucer and placed it in front of the terrier, who speedily licked it dry. Sherlock Holmes' earnest demeanour had so far convinced us that we all sat in silence, watching the animal intently, and expecting some startling effect. None such appeared, however. The dog continued to lie stretched upon the cushion, breathing in a laboured way, but apparently neither the better nor the worse for its draught. Holmes had taken out his watch, and as minute followed minute without result, an expression of the utmost chagrin and disappointment appeared upon his features. He gnawed his lip, drummed his fingers upon the table, and showed every other symptom of acute impatience. So great was his emotion, that I felt sincerely sorry for him, while the two detectives smiled derisively, by no means displeased at this check which he had met. \"It can't be a coincidence,\" he cried, at last springing from his chair and pacing wildly up and down the room; \"it is impossible that it should be a mere coincidence. The very pills which I suspected in the case of Drebber are actually found after the death of Stangerson. And yet they are inert. What can it mean? Surely my whole chain of reasoning cannot have been false. It is impossible! And yet this wretched dog is none the worse. Ah, I have it! I have it!\" With a perfect shriek of delight he rushed to the box, cut the other pill in two, dissolved it, added milk, and presented it to the terrier. The unfortunate creature's tongue seemed hardly to have been moistened in it before it gave a convulsive shiver in every limb, and lay as rigid and lifeless as if it had been struck by lightning. Sherlock Holmes drew a long breath, and wiped the perspiration from his forehead. \"I should have more faith,\" he said; \"I ought to know by this time that when a fact appears to be opposed to a long train of deductions, it invariably proves to be capable of bearing some other interpretation. Of the two pills in that box one was of the most deadly poison, and the other was entirely harmless. I ought to have known that before ever I saw the box at all.\" This last statement appeared to me to be so startling, that I could hardly believe that he was in his sober senses. There was the dead dog, however, to prove that his conjecture had been correct. It seemed to me that the mists in my own mind were gradually clearing away, and I began to have a dim, vague perception of the truth. \"All this seems strange to you,\" continued Holmes, \"because you failed at the beginning of the inquiry to grasp the importance of the single real clue which was presented to you. I had the good fortune to seize upon that, and everything which has occurred since then has served to confirm my original supposition, and, indeed, was the logical sequence of it. Hence things which have perplexed you and made the case more obscure, have served to enlighten me and to strengthen my conclusions. It is a mistake to confound strangeness with mystery. The most commonplace crime is often the most mysterious because it presents no new or special features from which deductions may be drawn. This murder would have been infinitely more difficult to unravel had the body of the victim been simply found lying in the roadway without any of those outr\u00e9 and sensational accompaniments which have rendered it remarkable. These strange details, far from making the case more difficult, have really had the effect of making it less so.\" Mr. Gregson, who had listened to this address with considerable impatience, could contain himself no longer. \"Look here, Mr. Sherlock Holmes,\" he said, \"we are all ready to acknowledge that you are a smart man, and that you have your own methods of working. We want something more than mere theory and preaching now, though. It is a case of taking the man. I have made my case out, and it seems I was wrong. Young Charpentier could not have been engaged in this second affair. Lestrade went after his man, Stangerson, and it appears that he was wrong too. You have thrown out hints here, and hints there, and seem to know more than we do, but the time has come when we feel that we have a right to ask you straight how much you do know of the business. Can you name the man who did it?\" \"I cannot help feeling that Gregson is right, sir,\" remarked Lestrade. \"We have both tried, and we have both failed. You have remarked more than once since I have been in the room that you had all the evidence which you require. Surely you will not withhold it any longer.\" \"Any delay in arresting the assassin,\" I observed, \"might give him time to perpetrate some fresh atrocity.\" Thus pressed by us all, Holmes showed signs of irresolution. He continued to walk up and down the room with his head sunk on his chest and his brows drawn down, as was his habit when lost in thought. \"There will be no more murders,\" he said at last, stopping abruptly and facing us. \"You can put that consideration out of the question. You have asked me if I know the name of the assassin. I do. The mere knowing of his name is a small thing, however, compared with the power of laying our hands upon him. This I expect very shortly to do. I have good hopes of managing it through my own arrangements; but it is a thing which needs delicate handling, for we have a shrewd and desperate man to deal with, who is supported, as I have had occasion to prove, by another who is as clever as himself. As long as this man has no idea that anyone can have a clue there is some chance of securing him; but if he had the slightest suspicion, he would change his name, and vanish in an instant among the four million inhabitants of this great city. Without meaning to hurt either of your feelings, I am bound to say that I consider these men to be more than a match for the official force, and that is why I have not asked your assistance. If I fail I shall, of course, incur all the blame due to this omission; but that I am prepared for. At present I am ready to promise that the instant that I can communicate with you without endangering my own combinations, I shall do so.\" Gregson and Lestrade seemed to be far from satisfied by this assurance, or by the depreciating allusion to the detective police. The former had flushed up to the roots of his flaxen hair, while the other's beady eyes glistened with curiosity and resentment. Neither of them had time to speak, however, before there was a tap at the door, and the spokesman of the street Arabs, young Wiggins, introduced his insignificant and unsavoury person. \"Please, sir,\" he said, touching his forelock, \"I have the cab downstairs.\" \"Good boy,\" said Holmes, blandly. \"Why don't you introduce this pattern at Scotland Yard?\" he continued, taking a pair of steel handcuffs from a drawer. \"See how beautifully the spring works. They fasten in an instant.\" \"The old pattern is good enough,\" remarked Lestrade, \"if we can only find the man to put them on.\" \"Very good, very good,\" said Holmes, smiling. \"The cabman may as well help me with my boxes. Just ask him to step up, Wiggins.\" I was surprised to find my companion speaking as though he were about to set out on a journey, since he had not said anything to me about it. There was a small portmanteau in the room, and this he pulled out and began to strap. He was busily engaged at it when the cabman entered the room. \"Just give me a help with this buckle, cabman,\" he said, kneeling over his task, and never turning his head. The fellow came forward with a somewhat sullen, defiant air, and put down his hands to assist. At that instant there was a sharp click, the jangling of metal, and Sherlock Holmes sprang to his feet again. \"Gentlemen,\" he cried, with flashing eyes, \"let me introduce you to Mr. Jefferson Hope, the murderer of Enoch Drebber and of Joseph Stangerson.\" The whole thing occurred in a moment--so quickly that I had no time to realize it. I have a vivid recollection of that instant, of Holmes' triumphant expression and the ring of his voice, of the cabman's dazed, savage face, as he glared at the glittering handcuffs, which had appeared as if by magic upon his wrists. For a second or two we might have been a group of statues. Then, with an inarticulate roar of fury, the prisoner wrenched himself free from Holmes's grasp, and hurled himself through the window. Woodwork and glass gave way before him; but before he got quite through, Gregson, Lestrade, and Holmes sprang upon him like so many staghounds. He was dragged back into the room, and then commenced a terrific conflict. So powerful and so fierce was he, that the four of us were shaken off again and again. He appeared to have the convulsive strength of a man in an epileptic fit. His face and hands were terribly mangled by his passage through the glass, but loss of blood had no effect in diminishing his resistance. It was not until Lestrade succeeded in getting his hand inside his neckcloth and half-strangling him that we made him realize that his struggles were of no avail; and even then we felt no security until we had pinioned his feet as well as his hands. That done, we rose to our feet breathless and panting. \"We have his cab,\" said Sherlock Holmes. \"It will serve to take him to Scotland Yard. And now, gentlemen,\" he continued, with a pleasant smile, \"we have reached the end of our little mystery. You are very welcome to put any questions that you like to me now, and there is no danger that I will refuse to answer them.\" PART II The Country of the Saints. CHAPTER I On The Great Alkali Plain In the central portion of the great North American Continent there lies an arid and repulsive desert, which for many a long year served as a barrier against the advance of civilisation. From the Sierra Nevada to Nebraska, and from the Yellowstone River in the north to the Colorado upon the south, is a region of desolation and silence. Nor is Nature always in one mood throughout this grim district. It comprises snow-capped and lofty mountains, and dark and gloomy valleys. There are swift-flowing rivers which dash through jagged ca\u00f1ons; and there are enormous plains, which in winter are white with snow, and in summer are grey with the saline alkali dust. They all preserve, however, the common characteristics of barrenness, inhospitality, and misery. There are no inhabitants of this land of despair. A band of Pawnees or of Blackfeet may occasionally traverse it in order to reach other hunting-grounds, but the hardiest of the braves are glad to lose sight of those awesome plains, and to find themselves once more upon their prairies. The coyote skulks among the scrub, the buzzard flaps heavily through the air, and the clumsy grizzly bear lumbers through the dark ravines, and picks up such sustenance as it can amongst the rocks. These are the sole dwellers in the wilderness. In the whole world there can be no more dreary view than that from the northern slope of the Sierra Blanco. As far as the eye can reach stretches the great flat plain-land, all dusted over with patches of alkali, and intersected by clumps of the dwarfish chaparral bushes. On the extreme verge of the horizon lie a long chain of mountain peaks, with their rugged summits flecked with snow. In this great stretch of country there is no sign of life, nor of anything appertaining to life. There is no bird in the steel-blue heaven, no movement upon the dull, grey earth--above all, there is absolute silence. Listen as one may, there is no shadow of a sound in all that mighty wilderness; nothing but silence--complete and heart-subduing silence. It has been said there is nothing appertaining to life upon the broad plain. That is hardly true. Looking down from the Sierra Blanco, one sees a pathway traced out across the desert, which winds away and is lost in the extreme distance. It is rutted with wheels and trodden down by the feet of many adventurers. Here and there there are scattered white objects which glisten in the sun, and stand out against the dull deposit of alkali. Approach, and examine them! They are bones: some large and coarse, others smaller and more delicate. The former have belonged to oxen, and the latter to men. For fifteen hundred miles one may trace this ghastly caravan route by these scattered remains of those who had fallen by the wayside. Looking down on this very scene, there stood upon the fourth of May, eighteen hundred and forty-seven, a solitary traveller. His appearance was such that he might have been the very genius or demon of the region. An observer would have found it difficult to say whether he was nearer to forty or to sixty. His face was lean and haggard, and the brown parchment-like skin was drawn tightly over the projecting bones; his long, brown hair and beard were all flecked and dashed with white; his eyes were sunken in his head, and burned with an unnatural lustre; while the hand which grasped his rifle was hardly more fleshy than that of a skeleton. As he stood, he leaned upon his weapon for support, and yet his tall figure and the massive framework of his bones suggested a wiry and vigorous constitution. His gaunt face, however, and his clothes, which hung so baggily over his shrivelled limbs, proclaimed what it was that gave him that senile and decrepit appearance. The man was dying--dying from hunger and from thirst. He had toiled painfully down the ravine, and on to this little elevation, in the vain hope of seeing some signs of water. Now the great salt plain stretched before his eyes, and the distant belt of savage mountains, without a sign anywhere of plant or tree, which might indicate the presence of moisture. In all that broad landscape there was no gleam of hope. North, and east, and west he looked with wild questioning eyes, and then he realised that his wanderings had come to an end, and that there, on that barren crag, he was about to die. \"Why not here, as well as in a feather bed, twenty years hence,\" he muttered, as he seated himself in the shelter of a boulder. Before sitting down, he had deposited upon the ground his useless rifle, and also a large bundle tied up in a grey shawl, which he had carried slung over his right shoulder. It appeared to be somewhat too heavy for his strength, for in lowering it, it came down on the ground with some little violence. Instantly there broke from the grey parcel a little moaning cry, and from it there protruded a small, scared face, with very bright brown eyes, and two little speckled, dimpled fists. \"You've hurt me!\" said a childish voice reproachfully. \"Have I though,\" the man answered penitently, \"I didn't go for to do it.\" As he spoke he unwrapped the grey shawl and extricated a pretty little girl of about five years of age, whose dainty shoes and smart pink frock with its little linen apron all bespoke a mother's care. The child was pale and wan, but her healthy arms and legs showed that she had suffered less than her companion. \"How is it now?\" he answered anxiously, for she was still rubbing the towsy golden curls which covered the back of her head. \"Kiss it and make it well,\" she said, with perfect gravity, shoving the injured part up to him. \"That's what mother used to do. Where's mother?\" \"Mother's gone. I guess you'll see her before long.\" \"Gone, eh!\" said the little girl. \"Funny, she didn't say good-bye; she 'most always did if she was just goin' over to Auntie's for tea, and now she's been away three days. Say, it's awful dry, ain't it? Ain't there no water, nor nothing to eat?\" \"No, there ain't nothing, dearie. You'll just need to be patient awhile, and then you'll be all right. Put your head up agin me like that, and then you'll feel bullier. It ain't easy to talk when your lips is like leather, but I guess I'd best let you know how the cards lie. What's that you've got?\" \"Pretty things! fine things!\" cried the little girl enthusiastically, holding up two glittering fragments of mica. \"When we goes back to home I'll give them to brother Bob.\" \"You'll see prettier things than them soon,\" said the man confidently. \"You just wait a bit. I was going to tell you though--you remember when we left the river?\" \"Oh, yes.\" \"Well, we reckoned we'd strike another river soon, d'ye see. But there was somethin' wrong; compasses, or map, or somethin', and it didn't turn up. Water ran out. Just except a little drop for the likes of you and--and--\" \"And you couldn't wash yourself,\" interrupted his companion gravely, staring up at his grimy visage. \"No, nor drink. And Mr. Bender, he was the fust to go, and then Indian Pete, and then Mrs. McGregor, and then Johnny Hones, and then, dearie, your mother.\" \"Then mother's a deader too,\" cried the little girl dropping her face in her pinafore and sobbing bitterly. \"Yes, they all went except you and me. Then I thought there was some chance of water in this direction, so I heaved you over my shoulder and we tramped it together. It don't seem as though we've improved matters. There's an almighty small chance for us now!\" \"Do you mean that we are going to die too?\" asked the child, checking her sobs, and raising her tear-stained face. \"I guess that's about the size of it.\" \"Why didn't you say so before?\" she said, laughing gleefully. \"You gave me such a fright. Why, of course, now as long as we die we'll be with mother again.\" \"Yes, you will, dearie.\" \"And you too. I'll tell her how awful good you've been. I'll bet she meets us at the door of Heaven with a big pitcher of water, and a lot of buckwheat cakes, hot, and toasted on both sides, like Bob and me was fond of. How long will it be first?\" \"I don't know--not very long.\" The man's eyes were fixed upon the northern horizon. In the blue vault of the heaven there had appeared three little specks which increased in size every moment, so rapidly did they approach. They speedily resolved themselves into three large brown birds, which circled over the heads of the two wanderers, and then settled upon some rocks which overlooked them. They were buzzards, the vultures of the west, whose coming is the forerunner of death. \"Cocks and hens,\" cried the little girl gleefully, pointing at their ill-omened forms, and clapping her hands to make them rise. \"Say, did God make this country?\" \"Of course He did,\" said her companion, rather startled by this unexpected question. \"He made the country down in Illinois, and He made the Missouri,\" the little girl continued. \"I guess somebody else made the country in these parts. It's not nearly so well done. They forgot the water and the trees.\" \"What would ye think of offering up prayer?\" the man asked diffidently. \"It ain't night yet,\" she answered. \"It don't matter. It ain't quite regular, but He won't mind that, you bet. You say over them ones that you used to say every night in the waggon when we was on the Plains.\" \"Why don't you say some yourself?\" the child asked, with wondering eyes. \"I disremember them,\" he answered. \"I hain't said none since I was half the height o' that gun. I guess it's never too late. You say them out, and I'll stand by and come in on the choruses.\" \"Then you'll need to kneel down, and me too,\" she said, laying the shawl out for that purpose. \"You've got to put your hands up like this. It makes you feel kind o' good.\" It was a strange sight had there been anything but the buzzards to see it. Side by side on the narrow shawl knelt the two wanderers, the little prattling child and the reckless, hardened adventurer. Her chubby face, and his haggard, angular visage were both turned up to the cloudless heaven in heartfelt entreaty to that dread being with whom they were face to face, while the two voices--the one thin and clear, the other deep and harsh--united in the entreaty for mercy and forgiveness. The prayer finished, they resumed their seat in the shadow of the boulder until the child fell asleep, nestling upon the broad breast of her protector. He watched over her slumber for some time, but Nature proved to be too strong for him. For three days and three nights he had allowed himself neither rest nor repose. Slowly the eyelids drooped over the tired eyes, and the head sunk lower and lower upon the breast, until the man's grizzled beard was mixed with the gold tresses of his companion, and both slept the same deep and dreamless slumber. Had the wanderer remained awake for another half hour a strange sight would have met his eyes. Far away on the extreme verge of the alkali plain there rose up a little spray of dust, very slight at first, and hardly to be distinguished from the mists of the distance, but gradually growing higher and broader until it formed a solid, well-defined cloud. This cloud continued to increase in size until it became evident that it could only be raised by a great multitude of moving creatures. In more fertile spots the observer would have come to the conclusion that one of those great herds of bisons which graze upon the prairie land was approaching him. This was obviously impossible in these arid wilds. As the whirl of dust drew nearer to the solitary bluff upon which the two castaways were reposing, the canvas-covered tilts of waggons and the figures of armed horsemen began to show up through the haze, and the apparition revealed itself as being a great caravan upon its journey for the West. But what a caravan! When the head of it had reached the base of the mountains, the rear was not yet visible on the horizon. Right across the enormous plain stretched the straggling array, waggons and carts, men on horseback, and men on foot. Innumerable women who staggered along under burdens, and children who toddled beside the waggons or peeped out from under the white coverings. This was evidently no ordinary party of immigrants, but rather some nomad people who had been compelled from stress of circumstances to seek themselves a new country. There rose through the clear air a confused clattering and rumbling from this great mass of humanity, with the creaking of wheels and the neighing of horses. Loud as it was, it was not sufficient to rouse the two tired wayfarers above them. At the head of the column there rode a score or more of grave ironfaced men, clad in sombre homespun garments and armed with rifles. On reaching the base of the bluff they halted, and held a short council among themselves. \"The wells are to the right, my brothers,\" said one, a hard-lipped, clean-shaven man with grizzly hair. \"To the right of the Sierra Blanco--so we shall reach the Rio Grande,\" said another. \"Fear not for water,\" cried a third. \"He who could draw it from the rocks will not now abandon His own chosen people.\" \"Amen! Amen!\" responded the whole party. They were about to resume their journey when one of the youngest and keenest-eyed uttered an exclamation and pointed up at the rugged crag above them. From its summit there fluttered a little wisp of pink, showing up hard and bright against the grey rocks behind. At the sight there was a general reining up of horses and unslinging of guns, while fresh horsemen came galloping up to reinforce the vanguard. The word \"Redskins\" was on every lip. \"There can't be any number of Injuns here,\" said the elderly man who appeared to be in command. \"We have passed the Pawnees, and there are no other tribes until we cross the great mountains.\" \"Shall I go forward and see, Brother Stangerson,\" asked one of the band. \"And I,\" \"and I,\" cried a dozen voices. \"Leave your horses below and we will await you here,\" the Elder answered. In a moment the young fellows had dismounted, fastened their horses, and were ascending the precipitous slope which led up to the object which had excited their curiosity. They advanced rapidly and noiselessly, with the confidence and dexterity of practised scouts. The watchers from the plain below could see them flit from rock to rock until their figures stood out against the skyline. The young man who had first given the alarm was leading them. Suddenly his followers saw him throw up his hands, as though overcome with astonishment, and on joining him they were affected in the same way by the sight which met their eyes. On the little plateau which crowned the barren hill there stood a single giant boulder, and against this boulder there lay a tall man, long-bearded and hard-featured, but of an excessive thinness. His placid face and regular breathing showed that he was fast asleep. Beside him lay a little child, with her round white arms encircling his brown sinewy neck, and her golden haired head resting upon the breast of his velveteen tunic. Her rosy lips were parted, showing the regular line of snow-white teeth within, and a playful smile played over her infantile features. Her plump little white legs terminating in white socks and neat shoes with shining buckles, offered a strange contrast to the long shrivelled members of her companion. On the ledge of rock above this strange couple there stood three solemn buzzards, who, at the sight of the new comers uttered raucous screams of disappointment and flapped sullenly away. The cries of the foul birds awoke the two sleepers who stared about them in bewilderment. The man staggered to his feet and looked down upon the plain which had been so desolate when sleep had overtaken him, and which was now traversed by this enormous body of men and of beasts. His face assumed an expression of incredulity as he gazed, and he passed his boney hand over his eyes. \"This is what they call delirium, I guess,\" he muttered. The child stood beside him, holding on to the skirt of his coat, and said nothing but looked all round her with the wondering questioning gaze of childhood. The rescuing party were speedily able to convince the two castaways that their appearance was no delusion. One of them seized the little girl, and hoisted her upon his shoulder, while two others supported her gaunt companion, and assisted him towards the waggons. \"My name is John Ferrier,\" the wanderer explained; \"me and that little un are all that's left o' twenty-one people. The rest is all dead o' thirst and hunger away down in the south.\" \"Is she your child?\" asked someone. \"I guess she is now,\" the other cried, defiantly; \"she's mine 'cause I saved her. No man will take her from me. She's Lucy Ferrier from this day on. Who are you, though?\" he continued, glancing with curiosity at his stalwart, sunburned rescuers; \"there seems to be a powerful lot of ye.\" \"Nigh upon ten thousand,\" said one of the young men; \"we are the persecuted children of God--the chosen of the Angel Merona.\" \"I never heard tell on him,\" said the wanderer. \"He appears to have chosen a fair crowd of ye.\" \"Do not jest at that which is sacred,\" said the other sternly. \"We are of those who believe in those sacred writings, drawn in Egyptian letters on plates of beaten gold, which were handed unto the holy Joseph Smith at Palmyra. We have come from Nauvoo, in the State of Illinois, where we had founded our temple. We have come to seek a refuge from the violent man and from the godless, even though it be the heart of the desert.\" The name of Nauvoo evidently recalled recollections to John Ferrier. \"I see,\" he said, \"you are the Mormons.\" \"We are the Mormons,\" answered his companions with one voice. \"And where are you going?\" \"We do not know. The hand of God is leading us under the person of our Prophet. You must come before him. He shall say what is to be done with you.\" They had reached the base of the hill by this time, and were surrounded by crowds of the pilgrims--pale-faced meek-looking women, strong laughing children, and anxious earnest-eyed men. Many were the cries of astonishment and of commiseration which arose from them when they perceived the youth of one of the strangers and the destitution of the other. Their escort did not halt, however, but pushed on, followed by a great crowd of Mormons, until they reached a waggon, which was conspicuous for its great size and for the gaudiness and smartness of its appearance. Six horses were yoked to it, whereas the others were furnished with two, or, at most, four a-piece. Beside the driver there sat a man who could not have been more than thirty years of age, but whose massive head and resolute expression marked him as a leader. He was reading a brown-backed volume, but as the crowd approached he laid it aside, and listened attentively to an account of the episode. Then he turned to the two castaways. \"If we take you with us,\" he said, in solemn words, \"it can only be as believers in our own creed. We shall have no wolves in our fold. Better far that your bones should bleach in this wilderness than that you should prove to be that little speck of decay which in time corrupts the whole fruit. Will you come with us on these terms?\" \"Guess I'll come with you on any terms,\" said Ferrier, with such emphasis that the grave Elders could not restrain a smile. The leader alone retained his stern, impressive expression. \"Take him, Brother Stangerson,\" he said, \"give him food and drink, and the child likewise. Let it be your task also to teach him our holy creed. We have delayed long enough. Forward! On, on to Zion!\" \"On, on to Zion!\" cried the crowd of Mormons, and the words rippled down the long caravan, passing from mouth to mouth until they died away in a dull murmur in the far distance. With a cracking of whips and a creaking of wheels the great waggons got into motion, and soon the whole caravan was winding along once more. The Elder to whose care the two waifs had been committed, led them to his waggon, where a meal was already awaiting them. \"You shall remain here,\" he said. \"In a few days you will have recovered from your fatigues. In the meantime, remember that now and forever you are of our religion. Brigham Young has said it, and he has spoken with the voice of Joseph Smith, which is the voice of God.\" CHAPTER II The Flower Of Utah This is not the place to commemorate the trials and privations endured by the immigrant Mormons before they came to their final haven. From the shores of the Mississippi to the western slopes of the Rocky Mountains they had struggled on with a constancy almost unparalleled in history. The savage man, and the savage beast, hunger, thirst, fatigue, and disease--every impediment which Nature could place in the way--had all been overcome with Anglo-Saxon tenacity. Yet the long journey and the accumulated terrors had shaken the hearts of the stoutest among them. There was not one who did not sink upon his knees in heartfelt prayer when they saw the broad valley of Utah bathed in the sunlight beneath them, and learned from the lips of their leader that this was the promised land, and that these virgin acres were to be theirs for evermore. Young speedily proved himself to be a skilful administrator as well as a resolute chief. Maps were drawn and charts prepared, in which the future city was sketched out. All around farms were apportioned and allotted in proportion to the standing of each individual. The tradesman was put to his trade and the artisan to his calling. In the town streets and squares sprang up, as if by magic. In the country there was draining and hedging, planting and clearing, until the next summer saw the whole country golden with the wheat crop. Everything prospered in the strange settlement. Above all, the great temple which they had erected in the centre of the city grew ever taller and larger. From the first blush of dawn until the closing of the twilight, the clatter of the hammer and the rasp of the saw was never absent from the monument which the immigrants erected to Him who had led them safe through many dangers. The two castaways, John Ferrier and the little girl who had shared his fortunes and had been adopted as his daughter, accompanied the Mormons to the end of their great pilgrimage. Little Lucy Ferrier was borne along pleasantly enough in Elder Stangerson's waggon, a retreat which she shared with the Mormon's three wives and with his son, a headstrong forward boy of twelve. Having rallied, with the elasticity of childhood, from the shock caused by her mother's death, she soon became a pet with the women, and reconciled herself to this new life in her moving canvas-covered home. In the meantime Ferrier having recovered from his privations, distinguished himself as a useful guide and an indefatigable hunter. So rapidly did he gain the esteem of his new companions, that when they reached the end of their wanderings, it was unanimously agreed that he should be provided with as large and as fertile a tract of land as any of the settlers, with the exception of Young himself, and of Stangerson, Kemball, Johnston, and Drebber, who were the four principal Elders. On the farm thus acquired John Ferrier built himself a substantial log-house, which received so many additions in succeeding years that it grew into a roomy villa. He was a man of a practical turn of mind, keen in his dealings and skilful with his hands. His iron constitution enabled him to work morning and evening at improving and tilling his lands. Hence it came about that his farm and all that belonged to him prospered exceedingly. In three years he was better off than his neighbours, in six he was well-to-do, in nine he was rich, and in twelve there were not half a dozen men in the whole of Salt Lake City who could compare with him. From the great inland sea to the distant Wahsatch Mountains there was no name better known than that of John Ferrier. There was one way and only one in which he offended the susceptibilities of his co-religionists. No argument or persuasion could ever induce him to set up a female establishment after the manner of his companions. He never gave reasons for this persistent refusal, but contented himself by resolutely and inflexibly adhering to his determination. There were some who accused him of lukewarmness in his adopted religion, and others who put it down to greed of wealth and reluctance to incur expense. Others, again, spoke of some early love affair, and of a fair-haired girl who had pined away on the shores of the Atlantic. Whatever the reason, Ferrier remained strictly celibate. In every other respect he conformed to the religion of the young settlement, and gained the name of being an orthodox and straight-walking man. Lucy Ferrier grew up within the log-house, and assisted her adopted father in all his undertakings. The keen air of the mountains and the balsamic odour of the pine trees took the place of nurse and mother to the young girl. As year succeeded to year she grew taller and stronger, her cheek more rudy, and her step more elastic. Many a wayfarer upon the high road which ran by Ferrier's farm felt long-forgotten thoughts revive in their mind as they watched her lithe girlish figure tripping through the wheatfields, or met her mounted upon her father's mustang, and managing it with all the ease and grace of a true child of the West. So the bud blossomed into a flower, and the year which saw her father the richest of the farmers left her as fair a specimen of American girlhood as could be found in the whole Pacific slope. It was not the father, however, who first discovered that the child had developed into the woman. It seldom is in such cases. That mysterious change is too subtle and too gradual to be measured by dates. Least of all does the maiden herself know it until the tone of a voice or the touch of a hand sets her heart thrilling within her, and she learns, with a mixture of pride and of fear, that a new and a larger nature has awoken within her. There are few who cannot recall that day and remember the one little incident which heralded the dawn of a new life. In the case of Lucy Ferrier the occasion was serious enough in itself, apart from its future influence on her destiny and that of many besides. It was a warm June morning, and the Latter Day Saints were as busy as the bees whose hive they have chosen for their emblem. In the fields and in the streets rose the same hum of human industry. Down the dusty high roads defiled long streams of heavily-laden mules, all heading to the west, for the gold fever had broken out in California, and the Overland Route lay through the City of the Elect. There, too, were droves of sheep and bullocks coming in from the outlying pasture lands, and trains of tired immigrants, men and horses equally weary of their interminable journey. Through all this motley assemblage, threading her way with the skill of an accomplished rider, there galloped Lucy Ferrier, her fair face flushed with the exercise and her long chestnut hair floating out behind her. She had a commission from her father in the City, and was dashing in as she had done many a time before, with all the fearlessness of youth, thinking only of her task and how it was to be performed. The travel-stained adventurers gazed after her in astonishment, and even the unemotional Indians, journeying in with their pelties, relaxed their accustomed stoicism as they marvelled at the beauty of the pale-faced maiden. She had reached the outskirts of the city when she found the road blocked by a great drove of cattle, driven by a half-dozen wild-looking herdsmen from the plains. In her impatience she endeavoured to pass this obstacle by pushing her horse into what appeared to be a gap. Scarcely had she got fairly into it, however, before the beasts closed in behind her, and she found herself completely imbedded in the moving stream of fierce-eyed, long-horned bullocks. Accustomed as she was to deal with cattle, she was not alarmed at her situation, but took advantage of every opportunity to urge her horse on in the hopes of pushing her way through the cavalcade. Unfortunately the horns of one of the creatures, either by accident or design, came in violent contact with the flank of the mustang, and excited it to madness. In an instant it reared up upon its hind legs with a snort of rage, and pranced and tossed in a way that would have unseated any but a most skilful rider. The situation was full of peril. Every plunge of the excited horse brought it against the horns again, and goaded it to fresh madness. It was all that the girl could do to keep herself in the saddle, yet a slip would mean a terrible death under the hoofs of the unwieldy and terrified animals. Unaccustomed to sudden emergencies, her head began to swim, and her grip upon the bridle to relax. Choked by the rising cloud of dust and by the steam from the struggling creatures, she might have abandoned her efforts in despair, but for a kindly voice at her elbow which assured her of assistance. At the same moment a sinewy brown hand caught the frightened horse by the curb, and forcing a way through the drove, soon brought her to the outskirts. \"You're not hurt, I hope, miss,\" said her preserver, respectfully. She looked up at his dark, fierce face, and laughed saucily. \"I'm awful frightened,\" she said, naively; \"whoever would have thought that Poncho would have been so scared by a lot of cows?\" \"Thank God you kept your seat,\" the other said earnestly. He was a tall, savage-looking young fellow, mounted on a powerful roan horse, and clad in the rough dress of a hunter, with a long rifle slung over his shoulders. \"I guess you are the daughter of John Ferrier,\" he remarked, \"I saw you ride down from his house. When you see him, ask him if he remembers the Jefferson Hopes of St. Louis. If he's the same Ferrier, my father and he were pretty thick.\" \"Hadn't you better come and ask yourself?\" she asked, demurely. The young fellow seemed pleased at the suggestion, and his dark eyes sparkled with pleasure. \"I'll do so,\" he said, \"we've been in the mountains for two months, and are not over and above in visiting condition. He must take us as he finds us.\" \"He has a good deal to thank you for, and so have I,\" she answered, \"he's awful fond of me. If those cows had jumped on me he'd have never got over it.\" \"Neither would I,\" said her companion. \"You! Well, I don't see that it would make much matter to you, anyhow. You ain't even a friend of ours.\" The young hunter's dark face grew so gloomy over this remark that Lucy Ferrier laughed aloud. \"There, I didn't mean that,\" she said; \"of course, you are a friend now. You must come and see us. Now I must push along, or father won't trust me with his business any more. Good-bye!\" \"Good-bye,\" he answered, raising his broad sombrero, and bending over her little hand. She wheeled her mustang round, gave it a cut with her riding-whip, and darted away down the broad road in a rolling cloud of dust. Young Jefferson Hope rode on with his companions, gloomy and taciturn. He and they had been among the Nevada Mountains prospecting for silver, and were returning to Salt Lake City in the hope of raising capital enough to work some lodes which they had discovered. He had been as keen as any of them upon the business until this sudden incident had drawn his thoughts into another channel. The sight of the fair young girl, as frank and wholesome as the Sierra breezes, had stirred his volcanic, untamed heart to its very depths. When she had vanished from his sight, he realized that a crisis had come in his life, and that neither silver speculations nor any other questions could ever be of such importance to him as this new and all-absorbing one. The love which had sprung up in his heart was not the sudden, changeable fancy of a boy, but rather the wild, fierce passion of a man of strong will and imperious temper. He had been accustomed to succeed in all that he undertook. He swore in his heart that he would not fail in this if human effort and human perseverance could render him successful. He called on John Ferrier that night, and many times again, until his face was a familiar one at the farm-house. John, cooped up in the valley, and absorbed in his work, had had little chance of learning the news of the outside world during the last twelve years. All this Jefferson Hope was able to tell him, and in a style which interested Lucy as well as her father. He had been a pioneer in California, and could narrate many a strange tale of fortunes made and fortunes lost in those wild, halcyon days. He had been a scout too, and a trapper, a silver explorer, and a ranchman. Wherever stirring adventures were to be had, Jefferson Hope had been there in search of them. He soon became a favourite with the old farmer, who spoke eloquently of his virtues. On such occasions, Lucy was silent, but her blushing cheek and her bright, happy eyes, showed only too clearly that her young heart was no longer her own. Her honest father may not have observed these symptoms, but they were assuredly not thrown away upon the man who had won her affections. It was a summer evening when he came galloping down the road and pulled up at the gate. She was at the doorway, and came down to meet him. He threw the bridle over the fence and strode up the pathway. \"I am off, Lucy,\" he said, taking her two hands in his, and gazing tenderly down into her face; \"I won't ask you to come with me now, but will you be ready to come when I am here again?\" \"And when will that be?\" she asked, blushing and laughing. \"A couple of months at the outside. I will come and claim you then, my darling. There's no one who can stand between us.\" \"And how about father?\" she asked. \"He has given his consent, provided we get these mines working all right. I have no fear on that head.\" \"Oh, well; of course, if you and father have arranged it all, there's no more to be said,\" she whispered, with her cheek against his broad breast. \"Thank God!\" he said, hoarsely, stooping and kissing her. \"It is settled, then. The longer I stay, the harder it will be to go. They are waiting for me at the ca\u00f1on. Good-bye, my own darling--good-bye. In two months you shall see me.\" He tore himself from her as he spoke, and, flinging himself upon his horse, galloped furiously away, never even looking round, as though afraid that his resolution might fail him if he took one glance at what he was leaving. She stood at the gate, gazing after him until he vanished from her sight. Then she walked back into the house, the happiest girl in all Utah. CHAPTER III John Ferrier Talks With The Prophet Three weeks had passed since Jefferson Hope and his comrades had departed from Salt Lake City. John Ferrier's heart was sore within him when he thought of the young man's return, and of the impending loss of his adopted child. Yet her bright and happy face reconciled him to the arrangement more than any argument could have done. He had always determined, deep down in his resolute heart, that nothing would ever induce him to allow his daughter to wed a Mormon. Such a marriage he regarded as no marriage at all, but as a shame and a disgrace. Whatever he might think of the Mormon doctrines, upon that one point he was inflexible. He had to seal his mouth on the subject, however, for to express an unorthodox opinion was a dangerous matter in those days in the Land of the Saints. Yes, a dangerous matter--so dangerous that even the most saintly dared only whisper their religious opinions with bated breath, lest something which fell from their lips might be misconstrued, and bring down a swift retribution upon them. The victims of persecution had now turned persecutors on their own account, and persecutors of the most terrible description. Not the Inquisition of Seville, nor the German Vehmgericht, nor the Secret Societies of Italy, were ever able to put a more formidable machinery in motion than that which cast a cloud over the State of Utah. Its invisibility, and the mystery which was attached to it, made this organization doubly terrible. It appeared to be omniscient and omnipotent, and yet was neither seen nor heard. The man who held out against the Church vanished away, and none knew whither he had gone or what had befallen him. His wife and his children awaited him at home, but no father ever returned to tell them how he had fared at the hands of his secret judges. A rash word or a hasty act was followed by annihilation, and yet none knew what the nature might be of this terrible power which was suspended over them. No wonder that men went about in fear and trembling, and that even in the heart of the wilderness they dared not whisper the doubts which oppressed them. At first this vague and terrible power was exercised only upon the recalcitrants who, having embraced the Mormon faith, wished afterwards to pervert or to abandon it. Soon, however, it took a wider range. The supply of adult women was running short, and polygamy without a female population on which to draw was a barren doctrine indeed. Strange rumours began to be bandied about--rumours of murdered immigrants and rifled camps in regions where Indians had never been seen. Fresh women appeared in the harems of the Elders--women who pined and wept, and bore upon their faces the traces of an unextinguishable horror. Belated wanderers upon the mountains spoke of gangs of armed men, masked, stealthy, and noiseless, who flitted by them in the darkness. These tales and rumours took substance and shape, and were corroborated and re-corroborated, until they resolved themselves into a definite name. To this day, in the lonely ranches of the West, the name of the Danite Band, or the Avenging Angels, is a sinister and an ill-omened one. Fuller knowledge of the organization which produced such terrible results served to increase rather than to lessen the horror which it inspired in the minds of men. None knew who belonged to this ruthless society. The names of the participators in the deeds of blood and violence done under the name of religion were kept profoundly secret. The very friend to whom you communicated your misgivings as to the Prophet and his mission, might be one of those who would come forth at night with fire and sword to exact a terrible reparation. Hence every man feared his neighbour, and none spoke of the things which were nearest his heart. One fine morning, John Ferrier was about to set out to his wheatfields, when he heard the click of the latch, and, looking through the window, saw a stout, sandy-haired, middle-aged man coming up the pathway. His heart leapt to his mouth, for this was none other than the great Brigham Young himself. Full of trepidation--for he knew that such a visit boded him little good--Ferrier ran to the door to greet the Mormon chief. The latter, however, received his salutations coldly, and followed him with a stern face into the sitting-room. \"Brother Ferrier,\" he said, taking a seat, and eyeing the farmer keenly from under his light-coloured eyelashes, \"the true believers have been good friends to you. We picked you up when you were starving in the desert, we shared our food with you, led you safe to the Chosen Valley, gave you a goodly share of land, and allowed you to wax rich under our protection. Is not this so?\" \"It is so,\" answered John Ferrier. \"In return for all this we asked but one condition: that was, that you should embrace the true faith, and conform in every way to its usages. This you promised to do, and this, if common report says truly, you have neglected.\" \"And how have I neglected it?\" asked Ferrier, throwing out his hands in expostulation. \"Have I not given to the common fund? Have I not attended at the Temple? Have I not--?\" \"Where are your wives?\" asked Young, looking round him. \"Call them in, that I may greet them.\" \"It is true that I have not married,\" Ferrier answered. \"But women were few, and there were many who had better claims than I. I was not a lonely man: I had my daughter to attend to my wants.\" \"It is of that daughter that I would speak to you,\" said the leader of the Mormons. \"She has grown to be the flower of Utah, and has found favour in the eyes of many who are high in the land.\" John Ferrier groaned internally. \"There are stories of her which I would fain disbelieve--stories that she is sealed to some Gentile. This must be the gossip of idle tongues. What is the thirteenth rule in the code of the sainted Joseph Smith? 'Let every maiden of the true faith marry one of the elect; for if she wed a Gentile, she commits a grievous sin.' This being so, it is impossible that you, who profess the holy creed, should suffer your daughter to violate it.\" John Ferrier made no answer, but he played nervously with his riding-whip. \"Upon this one point your whole faith shall be tested--so it has been decided in the Sacred Council of Four. The girl is young, and we would not have her wed grey hairs, neither would we deprive her of all choice. We Elders have many heifers*1, but our children must also be provided. Stangerson has a son, and Drebber has a son, and either of them would gladly welcome your daughter to their house. Let her choose between them. They are young and rich, and of the true faith. What say you to that?\" Ferrier remained silent for some little time with his brows knitted. \"You will give us time,\" he said at last. \"My daughter is very young--she is scarce of an age to marry.\" \"She shall have a month to choose,\" said Young, rising from his seat. \"At the end of that time she shall give her answer.\" He was passing through the door, when he turned, with flushed face and flashing eyes. \"It were better for you, John Ferrier,\" he thundered, \"that you and she were now lying blanched skeletons upon the Sierra Blanco, than that you should put your weak wills against the orders of the Holy Four!\" With a threatening gesture of his hand, he turned from the door, and Ferrier heard his heavy step scrunching along the shingly path. He was still sitting with his elbows upon his knees, considering how he should broach the matter to his daughter when a soft hand was laid upon his, and looking up, he saw her standing beside him. One glance at her pale, frightened face showed him that she had heard what had passed. \"I could not help it,\" she said, in answer to his look. \"His voice rang through the house. Oh, father, father, what shall we do?\" \"Don't you scare yourself,\" he answered, drawing her to him, and passing his broad, rough hand caressingly over her chestnut hair. \"We'll fix it up somehow or another. You don't find your fancy kind o' lessening for this chap, do you?\" A sob and a squeeze of his hand was her only answer. \"No; of course not. I shouldn't care to hear you say you did. He's a likely lad, and he's a Christian, which is more than these folk here, in spite o' all their praying and preaching. There's a party starting for Nevada to-morrow, and I'll manage to send him a message letting him know the hole we are in. If I know anything o' that young man, he'll be back here with a speed that would whip electro-telegraphs.\" Lucy laughed through her tears at her father's description. \"When he comes, he will advise us for the best. But it is for you that I am frightened, dear. One hears--one hears such dreadful stories about those who oppose the Prophet: something terrible always happens to them.\" \"But we haven't opposed him yet,\" her father answered. \"It will be time to look out for squalls when we do. We have a clear month before us; at the end of that, I guess we had best shin out of Utah.\" \"Leave Utah!\" \"That's about the size of it.\" \"But the farm?\" \"We will raise as much as we can in money, and let the rest go. To tell the truth, Lucy, it isn't the first time I have thought of doing it. I don't care about knuckling under to any man, as these folk do to their darned prophet. I'm a free-born American, and it's all new to me. Guess I'm too old to learn. If he comes browsing about this farm, he might chance to run up against a charge of buckshot travelling in the opposite direction.\" \"But they won't let us leave,\" his daughter objected. \"Wait till Jefferson comes, and we'll soon manage that. In the meantime, don't you fret yourself, my dearie, and don't get your eyes swelled up, else he'll be walking into me when he sees you. There's nothing to be afeared about, and there's no danger at all.\" John Ferrier uttered these consoling remarks in a very confident tone, but she could not help observing that he paid unusual care to the fastening of the doors that night, and that he carefully cleaned and loaded the rusty old shotgun which hung upon the wall of his bedroom. ----- *1: Heber C Kemball, in one of his sermons, alludes to his hundred wives under this endearing epithet. CHAPTER IV A Flight For Life On the morning which followed his interview with the Mormon Prophet, John Ferrier went in to Salt Lake City, and having found his acquaintance, who was bound for the Nevada Mountains, he entrusted him with his message to Jefferson Hope. In it he told the young man of the imminent danger which threatened them, and how necessary it was that he should return. Having done thus he felt easier in his mind, and returned home with a lighter heart. As he approached his farm, he was surprised to see a horse hitched to each of the posts of the gate. Still more surprised was he on entering to find two young men in possession of his sitting-room. One, with a long pale face, was leaning back in the rocking-chair, with his feet cocked up upon the stove. The other, a bull-necked youth with coarse bloated features, was standing in front of the window with his hands in his pocket, whistling a popular hymn. Both of them nodded to Ferrier as he entered, and the one in the rocking-chair commenced the conversation. \"Maybe you don't know us,\" he said. \"This here is the son of Elder Drebber, and I'm Joseph Stangerson, who travelled with you in the desert when the Lord stretched out His hand and gathered you into the true fold.\" \"As He will all the nations in His own good time,\" said the other in a nasal voice; \"He grindeth slowly but exceeding small.\" John Ferrier bowed coldly. He had guessed who his visitors were. \"We have come,\" continued Stangerson, \"at the advice of our fathers to solicit the hand of your daughter for whichever of us may seem good to you and to her. As I have but four wives and Brother Drebber here has seven, it appears to me that my claim is the stronger one.\" \"Nay, nay, Brother Stangerson,\" cried the other; \"the question is not how many wives we have, but how many we can keep. My father has now given over his mills to me, and I am the richer man.\" \"But my prospects are better,\" said the other, warmly. \"When the Lord removes my father, I shall have his tanning yard and his leather factory. Then I am your elder, and am higher in the Church.\" \"It will be for the maiden to decide,\" rejoined young Drebber, smirking at his own reflection in the glass. \"We will leave it all to her decision.\" During this dialogue, John Ferrier had stood fuming in the doorway, hardly able to keep his riding-whip from the backs of his two visitors. \"Look here,\" he said at last, striding up to them, \"when my daughter summons you, you can come, but until then I don't want to see your faces again.\" The two young Mormons stared at him in amazement. In their eyes this competition between them for the maiden's hand was the highest of honours both to her and her father. \"There are two ways out of the room,\" cried Ferrier; \"there is the door, and there is the window. Which do you care to use?\" His brown face looked so savage, and his gaunt hands so threatening, that his visitors sprang to their feet and beat a hurried retreat. The old farmer followed them to the door. \"Let me know when you have settled which it is to be,\" he said, sardonically. \"You shall smart for this!\" Stangerson cried, white with rage. \"You have defied the Prophet and the Council of Four. You shall rue it to the end of your days.\" \"The hand of the Lord shall be heavy upon you,\" cried young Drebber; \"He will arise and smite you!\" \"Then I'll start the smiting,\" exclaimed Ferrier furiously, and would have rushed upstairs for his gun had not Lucy seized him by the arm and restrained him. Before he could escape from her, the clatter of horses' hoofs told him that they were beyond his reach. \"The young canting rascals!\" he exclaimed, wiping the perspiration from his forehead; \"I would sooner see you in your grave, my girl, than the wife of either of them.\" \"And so should I, father,\" she answered, with spirit; \"but Jefferson will soon be here.\" \"Yes. It will not be long before he comes. The sooner the better, for we do not know what their next move may be.\" It was, indeed, high time that someone capable of giving advice and help should come to the aid of the sturdy old farmer and his adopted daughter. In the whole history of the settlement there had never been such a case of rank disobedience to the authority of the Elders. If minor errors were punished so sternly, what would be the fate of this arch rebel. Ferrier knew that his wealth and position would be of no avail to him. Others as well known and as rich as himself had been spirited away before now, and their goods given over to the Church. He was a brave man, but he trembled at the vague, shadowy terrors which hung over him. Any known danger he could face with a firm lip, but this suspense was unnerving. He concealed his fears from his daughter, however, and affected to make light of the whole matter, though she, with the keen eye of love, saw plainly that he was ill at ease. He expected that he would receive some message or remonstrance from Young as to his conduct, and he was not mistaken, though it came in an unlooked-for manner. Upon rising next morning he found, to his surprise, a small square of paper pinned on to the coverlet of his bed just over his chest. On it was printed, in bold straggling letters:-- \"Twenty-nine days are given you for amendment, and then--\" The dash was more fear-inspiring than any threat could have been. How this warning came into his room puzzled John Ferrier sorely, for his servants slept in an outhouse, and the doors and windows had all been secured. He crumpled the paper up and said nothing to his daughter, but the incident struck a chill into his heart. The twenty-nine days were evidently the balance of the month which Young had promised. What strength or courage could avail against an enemy armed with such mysterious powers? The hand which fastened that pin might have struck him to the heart, and he could never have known who had slain him. Still more shaken was he next morning. They had sat down to their breakfast when Lucy with a cry of surprise pointed upwards. In the centre of the ceiling was scrawled, with a burned stick apparently, the number 28. To his daughter it was unintelligible, and he did not enlighten her. That night he sat up with his gun and kept watch and ward. He saw and he heard nothing, and yet in the morning a great 27 had been painted upon the outside of his door. Thus day followed day; and as sure as morning came he found that his unseen enemies had kept their register, and had marked up in some conspicuous position how many days were still left to him out of the month of grace. Sometimes the fatal numbers appeared upon the walls, sometimes upon the floors, occasionally they were on small placards stuck upon the garden gate or the railings. With all his vigilance John Ferrier could not discover whence these daily warnings proceeded. A horror which was almost superstitious came upon him at the sight of them. He became haggard and restless, and his eyes had the troubled look of some hunted creature. He had but one hope in life now, and that was for the arrival of the young hunter from Nevada. Twenty had changed to fifteen and fifteen to ten, but there was no news of the absentee. One by one the numbers dwindled down, and still there came no sign of him. Whenever a horseman clattered down the road, or a driver shouted at his team, the old farmer hurried to the gate thinking that help had arrived at last. At last, when he saw five give way to four and that again to three, he lost heart, and abandoned all hope of escape. Single-handed, and with his limited knowledge of the mountains which surrounded the settlement, he knew that he was powerless. The more-frequented roads were strictly watched and guarded, and none could pass along them without an order from the Council. Turn which way he would, there appeared to be no avoiding the blow which hung over him. Yet the old man never wavered in his resolution to part with life itself before he consented to what he regarded as his daughter's dishonour. He was sitting alone one evening pondering deeply over his troubles, and searching vainly for some way out of them. That morning had shown the figure 2 upon the wall of his house, and the next day would be the last of the allotted time. What was to happen then? All manner of vague and terrible fancies filled his imagination. And his daughter--what was to become of her after he was gone? Was there no escape from the invisible network which was drawn all round them. He sank his head upon the table and sobbed at the thought of his own impotence. What was that? In the silence he heard a gentle scratching sound--low, but very distinct in the quiet of the night. It came from the door of the house. Ferrier crept into the hall and listened intently. There was a pause for a few moments, and then the low insidious sound was repeated. Someone was evidently tapping very gently upon one of the panels of the door. Was it some midnight assassin who had come to carry out the murderous orders of the secret tribunal? Or was it some agent who was marking up that the last day of grace had arrived. John Ferrier felt that instant death would be better than the suspense which shook his nerves and chilled his heart. Springing forward he drew the bolt and threw the door open. Outside all was calm and quiet. The night was fine, and the stars were twinkling brightly overhead. The little front garden lay before the farmer's eyes bounded by the fence and gate, but neither there nor on the road was any human being to be seen. With a sigh of relief, Ferrier looked to right and to left, until happening to glance straight down at his own feet he saw to his astonishment a man lying flat upon his face upon the ground, with arms and legs all asprawl. So unnerved was he at the sight that he leaned up against the wall with his hand to his throat to stifle his inclination to call out. His first thought was that the prostrate figure was that of some wounded or dying man, but as he watched it he saw it writhe along the ground and into the hall with the rapidity and noiselessness of a serpent. Once within the house the man sprang to his feet, closed the door, and revealed to the astonished farmer the fierce face and resolute expression of Jefferson Hope. \"Good God!\" gasped John Ferrier. \"How you scared me! Whatever made you come in like that.\" \"Give me food,\" the other said, hoarsely. \"I have had no time for bite or sup for eight-and-forty hours.\" He flung himself upon the cold meat and bread which were still lying upon the table from his host's supper, and devoured it voraciously. \"Does Lucy bear up well?\" he asked, when he had satisfied his hunger. \"Yes. She does not know the danger,\" her father answered. \"That is well. The house is watched on every side. That is why I crawled my way up to it. They may be darned sharp, but they're not quite sharp enough to catch a Washoe hunter.\" John Ferrier felt a different man now that he realized that he had a devoted ally. He seized the young man's leathery hand and wrung it cordially. \"You're a man to be proud of,\" he said. \"There are not many who would come to share our danger and our troubles.\" \"You've hit it there, pard,\" the young hunter answered. \"I have a respect for you, but if you were alone in this business I'd think twice before I put my head into such a hornet's nest. It's Lucy that brings me here, and before harm comes on her I guess there will be one less o' the Hope family in Utah.\" \"What are we to do?\" \"To-morrow is your last day, and unless you act to-night you are lost. I have a mule and two horses waiting in the Eagle Ravine. How much money have you?\" \"Two thousand dollars in gold, and five in notes.\" \"That will do. I have as much more to add to it. We must push for Carson City through the mountains. You had best wake Lucy. It is as well that the servants do not sleep in the house.\" While Ferrier was absent, preparing his daughter for the approaching journey, Jefferson Hope packed all the eatables that he could find into a small parcel, and filled a stoneware jar with water, for he knew by experience that the mountain wells were few and far between. He had hardly completed his arrangements before the farmer returned with his daughter all dressed and ready for a start. The greeting between the lovers was warm, but brief, for minutes were precious, and there was much to be done. \"We must make our start at once,\" said Jefferson Hope, speaking in a low but resolute voice, like one who realizes the greatness of the peril, but has steeled his heart to meet it. \"The front and back entrances are watched, but with caution we may get away through the side window and across the fields. Once on the road we are only two miles from the Ravine where the horses are waiting. By daybreak we should be half-way through the mountains.\" \"What if we are stopped,\" asked Ferrier. Hope slapped the revolver butt which protruded from the front of his tunic. \"If they are too many for us we shall take two or three of them with us,\" he said with a sinister smile. The lights inside the house had all been extinguished, and from the darkened window Ferrier peered over the fields which had been his own, and which he was now about to abandon for ever. He had long nerved himself to the sacrifice, however, and the thought of the honour and happiness of his daughter outweighed any regret at his ruined fortunes. All looked so peaceful and happy, the rustling trees and the broad silent stretch of grain-land, that it was difficult to realize that the spirit of murder lurked through it all. Yet the white face and set expression of the young hunter showed that in his approach to the house he had seen enough to satisfy him upon that head. Ferrier carried the bag of gold and notes, Jefferson Hope had the scanty provisions and water, while Lucy had a small bundle containing a few of her more valued possessions. Opening the window very slowly and carefully, they waited until a dark cloud had somewhat obscured the night, and then one by one passed through into the little garden. With bated breath and crouching figures they stumbled across it, and gained the shelter of the hedge, which they skirted until they came to the gap which opened into the cornfields. They had just reached this point when the young man seized his two companions and dragged them down into the shadow, where they lay silent and trembling. It was as well that his prairie training had given Jefferson Hope the ears of a lynx. He and his friends had hardly crouched down before the melancholy hooting of a mountain owl was heard within a few yards of them, which was immediately answered by another hoot at a small distance. At the same moment a vague shadowy figure emerged from the gap for which they had been making, and uttered the plaintive signal cry again, on which a second man appeared out of the obscurity. \"To-morrow at midnight,\" said the first who appeared to be in authority. \"When the Whip-poor-Will calls three times.\" \"It is well,\" returned the other. \"Shall I tell Brother Drebber?\" \"Pass it on to him, and from him to the others. Nine to seven!\" \"Seven to five!\" repeated the other, and the two figures flitted away in different directions. Their concluding words had evidently been some form of sign and countersign. The instant that their footsteps had died away in the distance, Jefferson Hope sprang to his feet, and helping his companions through the gap, led the way across the fields at the top of his speed, supporting and half-carrying the girl when her strength appeared to fail her. \"Hurry on! hurry on!\" he gasped from time to time. \"We are through the line of sentinels. Everything depends on speed. Hurry on!\" Once on the high road they made rapid progress. Only once did they meet anyone, and then they managed to slip into a field, and so avoid recognition. Before reaching the town the hunter branched away into a rugged and narrow footpath which led to the mountains. Two dark jagged peaks loomed above them through the darkness, and the defile which led between them was the Eagle Ca\u00f1on in which the horses were awaiting them. With unerring instinct Jefferson Hope picked his way among the great boulders and along the bed of a dried-up watercourse, until he came to the retired corner, screened with rocks, where the faithful animals had been picketed. The girl was placed upon the mule, and old Ferrier upon one of the horses, with his money-bag, while Jefferson Hope led the other along the precipitous and dangerous path. It was a bewildering route for anyone who was not accustomed to face Nature in her wildest moods. On the one side a great crag towered up a thousand feet or more, black, stern, and menacing, with long basaltic columns upon its rugged surface like the ribs of some petrified monster. On the other hand a wild chaos of boulders and debris made all advance impossible. Between the two ran the irregular track, so narrow in places that they had to travel in Indian file, and so rough that only practised riders could have traversed it at all. Yet in spite of all dangers and difficulties, the hearts of the fugitives were light within them, for every step increased the distance between them and the terrible despotism from which they were flying. They soon had a proof, however, that they were still within the jurisdiction of the Saints. They had reached the very wildest and most desolate portion of the pass when the girl gave a startled cry, and pointed upwards. On a rock which overlooked the track, showing out dark and plain against the sky, there stood a solitary sentinel. He saw them as soon as they perceived him, and his military challenge of \"Who goes there?\" rang through the silent ravine. \"Travellers for Nevada,\" said Jefferson Hope, with his hand upon the rifle which hung by his saddle. They could see the lonely watcher fingering his gun, and peering down at them as if dissatisfied at their reply. \"By whose permission?\" he asked. \"The Holy Four,\" answered Ferrier. His Mormon experiences had taught him that that was the highest authority to which he could refer. \"Nine from seven,\" cried the sentinel. \"Seven from five,\" returned Jefferson Hope promptly, remembering the countersign which he had heard in the garden. \"Pass, and the Lord go with you,\" said the voice from above. Beyond his post the path broadened out, and the horses were able to break into a trot. Looking back, they could see the solitary watcher leaning upon his gun, and knew that they had passed the outlying post of the chosen people, and that freedom lay before them. CHAPTER V The Avenging Angels All night their course lay through intricate defiles and over irregular and rock-strewn paths. More than once they lost their way, but Hope's intimate knowledge of the mountains enabled them to regain the track once more. When morning broke, a scene of marvellous though savage beauty lay before them. In every direction the great snow-capped peaks hemmed them in, peeping over each other's shoulders to the far horizon. So steep were the rocky banks on either side of them, that the larch and the pine seemed to be suspended over their heads, and to need only a gust of wind to come hurtling down upon them. Nor was the fear entirely an illusion, for the barren valley was thickly strewn with trees and boulders which had fallen in a similar manner. Even as they passed, a great rock came thundering down with a hoarse rattle which woke the echoes in the silent gorges, and startled the weary horses into a gallop. As the sun rose slowly above the eastern horizon, the caps of the great mountains lit up one after the other, like lamps at a festival, until they were all ruddy and glowing. The magnificent spectacle cheered the hearts of the three fugitives and gave them fresh energy. At a wild torrent which swept out of a ravine they called a halt and watered their horses, while they partook of a hasty breakfast. Lucy and her father would fain have rested longer, but Jefferson Hope was inexorable. \"They will be upon our track by this time,\" he said. \"Everything depends upon our speed. Once safe in Carson we may rest for the remainder of our lives.\" During the whole of that day they struggled on through the defiles, and by evening they calculated that they were more than thirty miles from their enemies. At night-time they chose the base of a beetling crag, where the rocks offered some protection from the chill wind, and there huddled together for warmth, they enjoyed a few hours' sleep. Before daybreak, however, they were up and on their way once more. They had seen no signs of any pursuers, and Jefferson Hope began to think that they were fairly out of the reach of the terrible organization whose enmity they had incurred. He little knew how far that iron grasp could reach, or how soon it was to close upon them and crush them. About the middle of the second day of their flight their scanty store of provisions began to run out. This gave the hunter little uneasiness, however, for there was game to be had among the mountains, and he had frequently before had to depend upon his rifle for the needs of life. Choosing a sheltered nook, he piled together a few dried branches and made a blazing fire, at which his companions might warm themselves, for they were now nearly five thousand feet above the sea level, and the air was bitter and keen. Having tethered the horses, and bade Lucy adieu, he threw his gun over his shoulder, and set out in search of whatever chance might throw in his way. Looking back he saw the old man and the young girl crouching over the blazing fire, while the three animals stood motionless in the back-ground. Then the intervening rocks hid them from his view. He walked for a couple of miles through one ravine after another without success, though from the marks upon the bark of the trees, and other indications, he judged that there were numerous bears in the vicinity. At last, after two or three hours' fruitless search, he was thinking of turning back in despair, when casting his eyes upwards he saw a sight which sent a thrill of pleasure through his heart. On the edge of a jutting pinnacle, three or four hundred feet above him, there stood a creature somewhat resembling a sheep in appearance, but armed with a pair of gigantic horns. The big-horn--for so it is called--was acting, probably, as a guardian over a flock which were invisible to the hunter; but fortunately it was heading in the opposite direction, and had not perceived him. Lying on his face, he rested his rifle upon a rock, and took a long and steady aim before drawing the trigger. The animal sprang into the air, tottered for a moment upon the edge of the precipice, and then came crashing down into the valley beneath. The creature was too unwieldy to lift, so the hunter contented himself with cutting away one haunch and part of the flank. With this trophy over his shoulder, he hastened to retrace his steps, for the evening was already drawing in. He had hardly started, however, before he realized the difficulty which faced him. In his eagerness he had wandered far past the ravines which were known to him, and it was no easy matter to pick out the path which he had taken. The valley in which he found himself divided and sub-divided into many gorges, which were so like each other that it was impossible to distinguish one from the other. He followed one for a mile or more until he came to a mountain torrent which he was sure that he had never seen before. Convinced that he had taken the wrong turn, he tried another, but with the same result. Night was coming on rapidly, and it was almost dark before he at last found himself in a defile which was familiar to him. Even then it was no easy matter to keep to the right track, for the moon had not yet risen, and the high cliffs on either side made the obscurity more profound. Weighed down with his burden, and weary from his exertions, he stumbled along, keeping up his heart by the reflection that every step brought him nearer to Lucy, and that he carried with him enough to ensure them food for the remainder of their journey. He had now come to the mouth of the very defile in which he had left them. Even in the darkness he could recognize the outline of the cliffs which bounded it. They must, he reflected, be awaiting him anxiously, for he had been absent nearly five hours. In the gladness of his heart he put his hands to his mouth and made the glen re-echo to a loud halloo as a signal that he was coming. He paused and listened for an answer. None came save his own cry, which clattered up the dreary silent ravines, and was borne back to his ears in countless repetitions. Again he shouted, even louder than before, and again no whisper came back from the friends whom he had left such a short time ago. A vague, nameless dread came over him, and he hurried onwards frantically, dropping the precious food in his agitation. When he turned the corner, he came full in sight of the spot where the fire had been lit. There was still a glowing pile of wood ashes there, but it had evidently not been tended since his departure. The same dead silence still reigned all round. With his fears all changed to convictions, he hurried on. There was no living creature near the remains of the fire: animals, man, maiden, all were gone. It was only too clear that some sudden and terrible disaster had occurred during his absence--a disaster which had embraced them all, and yet had left no traces behind it. Bewildered and stunned by this blow, Jefferson Hope felt his head spin round, and had to lean upon his rifle to save himself from falling. He was essentially a man of action, however, and speedily recovered from his temporary impotence. Seizing a half-consumed piece of wood from the smouldering fire, he blew it into a flame, and proceeded with its help to examine the little camp. The ground was all stamped down by the feet of horses, showing that a large party of mounted men had overtaken the fugitives, and the direction of their tracks proved that they had afterwards turned back to Salt Lake City. Had they carried back both of his companions with them? Jefferson Hope had almost persuaded himself that they must have done so, when his eye fell upon an object which made every nerve of his body tingle within him. A little way on one side of the camp was a low-lying heap of reddish soil, which had assuredly not been there before. There was no mistaking it for anything but a newly-dug grave. As the young hunter approached it, he perceived that a stick had been planted on it, with a sheet of paper stuck in the cleft fork of it. The inscription upon the paper was brief, but to the point: JOHN FERRIER, Formerly of Salt Lake City, Died August 4th, 1860. The sturdy old man, whom he had left so short a time before, was gone, then, and this was all his epitaph. Jefferson Hope looked wildly round to see if there was a second grave, but there was no sign of one. Lucy had been carried back by their terrible pursuers to fulfil her original destiny, by becoming one of the harem of the Elder's son. As the young fellow realized the certainty of her fate, and his own powerlessness to prevent it, he wished that he, too, was lying with the old farmer in his last silent resting-place. Again, however, his active spirit shook off the lethargy which springs from despair. If there was nothing else left to him, he could at least devote his life to revenge. With indomitable patience and perseverance, Jefferson Hope possessed also a power of sustained vindictiveness, which he may have learned from the Indians amongst whom he had lived. As he stood by the desolate fire, he felt that the only one thing which could assuage his grief would be thorough and complete retribution, brought by his own hand upon his enemies. His strong will and untiring energy should, he determined, be devoted to that one end. With a grim, white face, he retraced his steps to where he had dropped the food, and having stirred up the smouldering fire, he cooked enough to last him for a few days. This he made up into a bundle, and, tired as he was, he set himself to walk back through the mountains upon the track of the avenging angels. For five days he toiled footsore and weary through the defiles which he had already traversed on horseback. At night he flung himself down among the rocks, and snatched a few hours of sleep; but before daybreak he was always well on his way. On the sixth day, he reached the Eagle Ca\u00f1on, from which they had commenced their ill-fated flight. Thence he could look down upon the home of the saints. Worn and exhausted, he leaned upon his rifle and shook his gaunt hand fiercely at the silent widespread city beneath him. As he looked at it, he observed that there were flags in some of the principal streets, and other signs of festivity. He was still speculating as to what this might mean when he heard the clatter of horse's hoofs, and saw a mounted man riding towards him. As he approached, he recognized him as a Mormon named Cowper, to whom he had rendered services at different times. He therefore accosted him when he got up to him, with the object of finding out what Lucy Ferrier's fate had been. \"I am Jefferson Hope,\" he said. \"You remember me.\" The Mormon looked at him with undisguised astonishment--indeed, it was difficult to recognize in this tattered, unkempt wanderer, with ghastly white face and fierce, wild eyes, the spruce young hunter of former days. Having, however, at last, satisfied himself as to his identity, the man's surprise changed to consternation. \"You are mad to come here,\" he cried. \"It is as much as my own life is worth to be seen talking with you. There is a warrant against you from the Holy Four for assisting the Ferriers away.\" \"I don't fear them, or their warrant,\" Hope said, earnestly. \"You must know something of this matter, Cowper. I conjure you by everything you hold dear to answer a few questions. We have always been friends. For God's sake, don't refuse to answer me.\" \"What is it?\" the Mormon asked uneasily. \"Be quick. The very rocks have ears and the trees eyes.\" \"What has become of Lucy Ferrier?\" \"She was married yesterday to young Drebber. Hold up, man, hold up, you have no life left in you.\" \"Don't mind me,\" said Hope faintly. He was white to the very lips, and had sunk down on the stone against which he had been leaning. \"Married, you say?\" \"Married yesterday--that's what those flags are for on the Endowment House. There was some words between young Drebber and young Stangerson as to which was to have her. They'd both been in the party that followed them, and Stangerson had shot her father, which seemed to give him the best claim; but when they argued it out in council, Drebber's party was the stronger, so the Prophet gave her over to him. No one won't have her very long though, for I saw death in her face yesterday. She is more like a ghost than a woman. Are you off, then?\" \"Yes, I am off,\" said Jefferson Hope, who had risen from his seat. His face might have been chiselled out of marble, so hard and set was its expression, while its eyes glowed with a baleful light. \"Where are you going?\" \"Never mind,\" he answered; and, slinging his weapon over his shoulder, strode off down the gorge and so away into the heart of the mountains to the haunts of the wild beasts. Amongst them all there was none so fierce and so dangerous as himself. The prediction of the Mormon was only too well fulfilled. Whether it was the terrible death of her father or the effects of the hateful marriage into which she had been forced, poor Lucy never held up her head again, but pined away and died within a month. Her sottish husband, who had married her principally for the sake of John Ferrier's property, did not affect any great grief at his bereavement; but his other wives mourned over her, and sat up with her the night before the burial, as is the Mormon custom. They were grouped round the bier in the early hours of the morning, when, to their inexpressible fear and astonishment, the door was flung open, and a savage-looking, weather-beaten man in tattered garments strode into the room. Without a glance or a word to the cowering women, he walked up to the white silent figure which had once contained the pure soul of Lucy Ferrier. Stooping over her, he pressed his lips reverently to her cold forehead, and then, snatching up her hand, he took the wedding-ring from her finger. \"She shall not be buried in that,\" he cried with a fierce snarl, and before an alarm could be raised sprang down the stairs and was gone. So strange and so brief was the episode, that the watchers might have found it hard to believe it themselves or persuade other people of it, had it not been for the undeniable fact that the circlet of gold which marked her as having been a bride had disappeared. For some months Jefferson Hope lingered among the mountains, leading a strange wild life, and nursing in his heart the fierce desire for vengeance which possessed him. Tales were told in the City of the weird figure which was seen prowling about the suburbs, and which haunted the lonely mountain gorges. Once a bullet whistled through Stangerson's window and flattened itself upon the wall within a foot of him. On another occasion, as Drebber passed under a cliff a great boulder crashed down on him, and he only escaped a terrible death by throwing himself upon his face. The two young Mormons were not long in discovering the reason of these attempts upon their lives, and led repeated expeditions into the mountains in the hope of capturing or killing their enemy, but always without success. Then they adopted the precaution of never going out alone or after nightfall, and of having their houses guarded. After a time they were able to relax these measures, for nothing was either heard or seen of their opponent, and they hoped that time had cooled his vindictiveness. Far from doing so, it had, if anything, augmented it. The hunter's mind was of a hard, unyielding nature, and the predominant idea of revenge had taken such complete possession of it that there was no room for any other emotion. He was, however, above all things practical. He soon realized that even his iron constitution could not stand the incessant strain which he was putting upon it. Exposure and want of wholesome food were wearing him out. If he died like a dog among the mountains, what was to become of his revenge then? And yet such a death was sure to overtake him if he persisted. He felt that that was to play his enemy's game, so he reluctantly returned to the old Nevada mines, there to recruit his health and to amass money enough to allow him to pursue his object without privation. His intention had been to be absent a year at the most, but a combination of unforeseen circumstances prevented his leaving the mines for nearly five. At the end of that time, however, his memory of his wrongs and his craving for revenge were quite as keen as on that memorable night when he had stood by John Ferrier's grave. Disguised, and under an assumed name, he returned to Salt Lake City, careless what became of his own life, as long as he obtained what he knew to be justice. There he found evil tidings awaiting him. There had been a schism among the Chosen People a few months before, some of the younger members of the Church having rebelled against the authority of the Elders, and the result had been the secession of a certain number of the malcontents, who had left Utah and become Gentiles. Among these had been Drebber and Stangerson; and no one knew whither they had gone. Rumour reported that Drebber had managed to convert a large part of his property into money, and that he had departed a wealthy man, while his companion, Stangerson, was comparatively poor. There was no clue at all, however, as to their whereabouts. Many a man, however vindictive, would have abandoned all thought of revenge in the face of such a difficulty, but Jefferson Hope never faltered for a moment. With the small competence he possessed, eked out by such employment as he could pick up, he travelled from town to town through the United States in quest of his enemies. Year passed into year, his black hair turned grizzled, but still he wandered on, a human bloodhound, with his mind wholly set upon the one object upon which he had devoted his life. At last his perseverance was rewarded. It was but a glance of a face in a window, but that one glance told him that Cleveland in Ohio possessed the men whom he was in pursuit of. He returned to his miserable lodgings with his plan of vengeance all arranged. It chanced, however, that Drebber, looking from his window, had recognized the vagrant in the street, and had read murder in his eyes. He hurried before a justice of the peace, accompanied by Stangerson, who had become his private secretary, and represented to him that they were in danger of their lives from the jealousy and hatred of an old rival. That evening Jefferson Hope was taken into custody, and not being able to find sureties, was detained for some weeks. When at last he was liberated, it was only to find that Drebber's house was deserted, and that he and his secretary had departed for Europe. Again the avenger had been foiled, and again his concentrated hatred urged him to continue the pursuit. Funds were wanting, however, and for some time he had to return to work, saving every dollar for his approaching journey. At last, having collected enough to keep life in him, he departed for Europe, and tracked his enemies from city to city, working his way in any menial capacity, but never overtaking the fugitives. When he reached St. Petersburg they had departed for Paris; and when he followed them there he learned that they had just set off for Copenhagen. At the Danish capital he was again a few days late, for they had journeyed on to London, where he at last succeeded in running them to earth. As to what occurred there, we cannot do better than quote the old hunter's own account, as duly recorded in Dr. Watson's Journal, to which we are already under such obligations. CHAPTER VI A Continuation Of The Reminiscences Of John Watson, M.D. Our prisoner's furious resistance did not apparently indicate any ferocity in his disposition towards ourselves, for on finding himself powerless, he smiled in an affable manner, and expressed his hopes that he had not hurt any of us in the scuffle. \"I guess you're going to take me to the police-station,\" he remarked to Sherlock Holmes. \"My cab's at the door. If you'll loose my legs I'll walk down to it. I'm not so light to lift as I used to be.\" Gregson and Lestrade exchanged glances as if they thought this proposition rather a bold one; but Holmes at once took the prisoner at his word, and loosened the towel which we had bound round his ankles. He rose and stretched his legs, as though to assure himself that they were free once more. I remember that I thought to myself, as I eyed him, that I had seldom seen a more powerfully built man; and his dark sunburned face bore an expression of determination and energy which was as formidable as his personal strength. \"If there's a vacant place for a chief of the police, I reckon you are the man for it,\" he said, gazing with undisguised admiration at my fellow-lodger. \"The way you kept on my trail was a caution.\" \"You had better come with me,\" said Holmes to the two detectives. \"I can drive you,\" said Lestrade. \"Good! and Gregson can come inside with me. You too, Doctor, you have taken an interest in the case and may as well stick to us.\" I assented gladly, and we all descended together. Our prisoner made no attempt at escape, but stepped calmly into the cab which had been his, and we followed him. Lestrade mounted the box, whipped up the horse, and brought us in a very short time to our destination. We were ushered into a small chamber where a police Inspector noted down our prisoner's name and the names of the men with whose murder he had been charged. The official was a white-faced unemotional man, who went through his duties in a dull mechanical way. \"The prisoner will be put before the magistrates in the course of the week,\" he said; \"in the mean time, Mr. Jefferson Hope, have you anything that you wish to say? I must warn you that your words will be taken down, and may be used against you.\" \"I've got a good deal to say,\" our prisoner said slowly. \"I want to tell you gentlemen all about it.\" \"Hadn't you better reserve that for your trial?\" asked the Inspector. \"I may never be tried,\" he answered. \"You needn't look startled. It isn't suicide I am thinking of. Are you a Doctor?\" He turned his fierce dark eyes upon me as he asked this last question. \"Yes; I am,\" I answered. \"Then put your hand here,\" he said, with a smile, motioning with his manacled wrists towards his chest. I did so; and became at once conscious of an extraordinary throbbing and commotion which was going on inside. The walls of his chest seemed to thrill and quiver as a frail building would do inside when some powerful engine was at work. In the silence of the room I could hear a dull humming and buzzing noise which proceeded from the same source. \"Why,\" I cried, \"you have an aortic aneurism!\" \"That's what they call it,\" he said, placidly. \"I went to a Doctor last week about it, and he told me that it is bound to burst before many days passed. It has been getting worse for years. I got it from over-exposure and under-feeding among the Salt Lake Mountains. I've done my work now, and I don't care how soon I go, but I should like to leave some account of the business behind me. I don't want to be remembered as a common cut-throat.\" The Inspector and the two detectives had a hurried discussion as to the advisability of allowing him to tell his story. \"Do you consider, Doctor, that there is immediate danger?\" the former asked. \"Most certainly there is,\" I answered. \"In that case it is clearly our duty, in the interests of justice, to take his statement,\" said the Inspector. \"You are at liberty, sir, to give your account, which I again warn you will be taken down.\" \"I'll sit down, with your leave,\" the prisoner said, suiting the action to the word. \"This aneurism of mine makes me easily tired, and the tussle we had half an hour ago has not mended matters. I'm on the brink of the grave, and I am not likely to lie to you. Every word I say is the absolute truth, and how you use it is a matter of no consequence to me.\" With these words, Jefferson Hope leaned back in his chair and began the following remarkable statement. He spoke in a calm and methodical manner, as though the events which he narrated were commonplace enough. I can vouch for the accuracy of the subjoined account, for I have had access to Lestrade's note-book, in which the prisoner's words were taken down exactly as they were uttered. \"It don't much matter to you why I hated these men,\" he said; \"it's enough that they were guilty of the death of two human beings--a father and a daughter--and that they had, therefore, forfeited their own lives. After the lapse of time that has passed since their crime, it was impossible for me to secure a conviction against them in any court. I knew of their guilt though, and I determined that I should be judge, jury, and executioner all rolled into one. You'd have done the same, if you have any manhood in you, if you had been in my place. \"That girl that I spoke of was to have married me twenty years ago. She was forced into marrying that same Drebber, and broke her heart over it. I took the marriage ring from her dead finger, and I vowed that his dying eyes should rest upon that very ring, and that his last thoughts should be of the crime for which he was punished. I have carried it about with me, and have followed him and his accomplice over two continents until I caught them. They thought to tire me out, but they could not do it. If I die to-morrow, as is likely enough, I die knowing that my work in this world is done, and well done. They have perished, and by my hand. There is nothing left for me to hope for, or to desire. \"They were rich and I was poor, so that it was no easy matter for me to follow them. When I got to London my pocket was about empty, and I found that I must turn my hand to something for my living. Driving and riding are as natural to me as walking, so I applied at a cabowner's office, and soon got employment. I was to bring a certain sum a week to the owner, and whatever was over that I might keep for myself. There was seldom much over, but I managed to scrape along somehow. The hardest job was to learn my way about, for I reckon that of all the mazes that ever were contrived, this city is the most confusing. I had a map beside me though, and when once I had spotted the principal hotels and stations, I got on pretty well. \"It was some time before I found out where my two gentlemen were living; but I inquired and inquired until at last I dropped across them. They were at a boarding-house at Camberwell, over on the other side of the river. When once I found them out I knew that I had them at my mercy. I had grown my beard, and there was no chance of their recognizing me. I would dog them and follow them until I saw my opportunity. I was determined that they should not escape me again. \"They were very near doing it for all that. Go where they would about London, I was always at their heels. Sometimes I followed them on my cab, and sometimes on foot, but the former was the best, for then they could not get away from me. It was only early in the morning or late at night that I could earn anything, so that I began to get behind hand with my employer. I did not mind that, however, as long as I could lay my hand upon the men I wanted. \"They were very cunning, though. They must have thought that there was some chance of their being followed, for they would never go out alone, and never after nightfall. During two weeks I drove behind them every day, and never once saw them separate. Drebber himself was drunk half the time, but Stangerson was not to be caught napping. I watched them late and early, but never saw the ghost of a chance; but I was not discouraged, for something told me that the hour had almost come. My only fear was that this thing in my chest might burst a little too soon and leave my work undone. \"At last, one evening I was driving up and down Torquay Terrace, as the street was called in which they boarded, when I saw a cab drive up to their door. Presently some luggage was brought out, and after a time Drebber and Stangerson followed it, and drove off. I whipped up my horse and kept within sight of them, feeling very ill at ease, for I feared that they were going to shift their quarters. At Euston Station they got out, and I left a boy to hold my horse, and followed them on to the platform. I heard them ask for the Liverpool train, and the guard answer that one had just gone and there would not be another for some hours. Stangerson seemed to be put out at that, but Drebber was rather pleased than otherwise. I got so close to them in the bustle that I could hear every word that passed between them. Drebber said that he had a little business of his own to do, and that if the other would wait for him he would soon rejoin him. His companion remonstrated with him, and reminded him that they had resolved to stick together. Drebber answered that the matter was a delicate one, and that he must go alone. I could not catch what Stangerson said to that, but the other burst out swearing, and reminded him that he was nothing more than his paid servant, and that he must not presume to dictate to him. On that the Secretary gave it up as a bad job, and simply bargained with him that if he missed the last train he should rejoin him at Halliday's Private Hotel; to which Drebber answered that he would be back on the platform before eleven, and made his way out of the station. \"The moment for which I had waited so long had at last come. I had my enemies within my power. Together they could protect each other, but singly they were at my mercy. I did not act, however, with undue precipitation. My plans were already formed. There is no satisfaction in vengeance unless the offender has time to realize who it is that strikes him, and why retribution has come upon him. I had my plans arranged by which I should have the opportunity of making the man who had wronged me understand that his old sin had found him out. It chanced that some days before a gentleman who had been engaged in looking over some houses in the Brixton Road had dropped the key of one of them in my carriage. It was claimed that same evening, and returned; but in the interval I had taken a moulding of it, and had a duplicate constructed. By means of this I had access to at least one spot in this great city where I could rely upon being free from interruption. How to get Drebber to that house was the difficult problem which I had now to solve. \"He walked down the road and went into one or two liquor shops, staying for nearly half-an-hour in the last of them. When he came out he staggered in his walk, and was evidently pretty well on. There was a hansom just in front of me, and he hailed it. I followed it so close that the nose of my horse was within a yard of his driver the whole way. We rattled across Waterloo Bridge and through miles of streets, until, to my astonishment, we found ourselves back in the Terrace in which he had boarded. I could not imagine what his intention was in returning there; but I went on and pulled up my cab a hundred yards or so from the house. He entered it, and his hansom drove away. Give me a glass of water, if you please. My mouth gets dry with the talking.\" I handed him the glass, and he drank it down. \"That's better,\" he said. \"Well, I waited for a quarter of an hour, or more, when suddenly there came a noise like people struggling inside the house. Next moment the door was flung open and two men appeared, one of whom was Drebber, and the other was a young chap whom I had never seen before. This fellow had Drebber by the collar, and when they came to the head of the steps he gave him a shove and a kick which sent him half across the road. 'You hound,' he cried, shaking his stick at him; 'I'll teach you to insult an honest girl!' He was so hot that I think he would have thrashed Drebber with his cudgel, only that the cur staggered away down the road as fast as his legs would carry him. He ran as far as the corner, and then, seeing my cab, he hailed me and jumped in. 'Drive me to Halliday's Private Hotel,' said he. \"When I had him fairly inside my cab, my heart jumped so with joy that I feared lest at this last moment my aneurism might go wrong. I drove along slowly, weighing in my own mind what it was best to do. I might take him right out into the country, and there in some deserted lane have my last interview with him. I had almost decided upon this, when he solved the problem for me. The craze for drink had seized him again, and he ordered me to pull up outside a gin palace. He went in, leaving word that I should wait for him. There he remained until closing time, and when he came out he was so far gone that I knew the game was in my own hands. \"Don't imagine that I intended to kill him in cold blood. It would only have been rigid justice if I had done so, but I could not bring myself to do it. I had long determined that he should have a show for his life if he chose to take advantage of it. Among the many billets which I have filled in America during my wandering life, I was once janitor and sweeper out of the laboratory at York College. One day the professor was lecturing on poisons, and he showed his students some alkaloid, as he called it, which he had extracted from some South American arrow poison, and which was so powerful that the least grain meant instant death. I spotted the bottle in which this preparation was kept, and when they were all gone, I helped myself to a little of it. I was a fairly good dispenser, so I worked this alkaloid into small, soluble pills, and each pill I put in a box with a similar pill made without the poison. I determined at the time that when I had my chance, my gentlemen should each have a draw out of one of these boxes, while I ate the pill that remained. It would be quite as deadly, and a good deal less noisy than firing across a handkerchief. From that day I had always my pill boxes about with me, and the time had now come when I was to use them. \"It was nearer one than twelve, and a wild, bleak night, blowing hard and raining in torrents. Dismal as it was outside, I was glad within--so glad that I could have shouted out from pure exultation. If any of you gentlemen have ever pined for a thing, and longed for it during twenty long years, and then suddenly found it within your reach, you would understand my feelings. I lit a cigar, and puffed at it to steady my nerves, but my hands were trembling, and my temples throbbing with excitement. As I drove, I could see old John Ferrier and sweet Lucy looking at me out of the darkness and smiling at me, just as plain as I see you all in this room. All the way they were ahead of me, one on each side of the horse until I pulled up at the house in the Brixton Road. \"There was not a soul to be seen, nor a sound to be heard, except the dripping of the rain. When I looked in at the window, I found Drebber all huddled together in a drunken sleep. I shook him by the arm, 'It's time to get out,' I said. \"'All right, cabby,' said he. \"I suppose he thought we had come to the hotel that he had mentioned, for he got out without another word, and followed me down the garden. I had to walk beside him to keep him steady, for he was still a little top-heavy. When we came to the door, I opened it, and led him into the front room. I give you my word that all the way, the father and the daughter were walking in front of us. \"'It's infernally dark,' said he, stamping about. \"'We'll soon have a light,' I said, striking a match and putting it to a wax candle which I had brought with me. 'Now, Enoch Drebber,' I continued, turning to him, and holding the light to my own face, 'who am I?' \"He gazed at me with bleared, drunken eyes for a moment, and then I saw a horror spring up in them, and convulse his whole features, which showed me that he knew me. He staggered back with a livid face, and I saw the perspiration break out upon his brow, while his teeth chattered in his head. At the sight, I leaned my back against the door and laughed loud and long. I had always known that vengeance would be sweet, but I had never hoped for the contentment of soul which now possessed me. \"'You dog!' I said; 'I have hunted you from Salt Lake City to St. Petersburg, and you have always escaped me. Now, at last your wanderings have come to an end, for either you or I shall never see to-morrow's sun rise.' He shrunk still further away as I spoke, and I could see on his face that he thought I was mad. So I was for the time. The pulses in my temples beat like sledge-hammers, and I believe I would have had a fit of some sort if the blood had not gushed from my nose and relieved me. \"'What do you think of Lucy Ferrier now?' I cried, locking the door, and shaking the key in his face. 'Punishment has been slow in coming, but it has overtaken you at last.' I saw his coward lips tremble as I spoke. He would have begged for his life, but he knew well that it was useless. \"'Would you murder me?' he stammered. \"'There is no murder,' I answered. 'Who talks of murdering a mad dog? What mercy had you upon my poor darling, when you dragged her from her slaughtered father, and bore her away to your accursed and shameless harem.' \"'It was not I who killed her father,' he cried. \"'But it was you who broke her innocent heart,' I shrieked, thrusting the box before him. 'Let the high God judge between us. Choose and eat. There is death in one and life in the other. I shall take what you leave. Let us see if there is justice upon the earth, or if we are ruled by chance.' \"He cowered away with wild cries and prayers for mercy, but I drew my knife and held it to his throat until he had obeyed me. Then I swallowed the other, and we stood facing one another in silence for a minute or more, waiting to see which was to live and which was to die. Shall I ever forget the look which came over his face when the first warning pangs told him that the poison was in his system? I laughed as I saw it, and held Lucy's marriage ring in front of his eyes. It was but for a moment, for the action of the alkaloid is rapid. A spasm of pain contorted his features; he threw his hands out in front of him, staggered, and then, with a hoarse cry, fell heavily upon the floor. I turned him over with my foot, and placed my hand upon his heart. There was no movement. He was dead! \"The blood had been streaming from my nose, but I had taken no notice of it. I don't know what it was that put it into my head to write upon the wall with it. Perhaps it was some mischievous idea of setting the police upon a wrong track, for I felt light-hearted and cheerful. I remembered a German being found in New York with RACHE written up above him, and it was argued at the time in the newspapers that the secret societies must have done it. I guessed that what puzzled the New Yorkers would puzzle the Londoners, so I dipped my finger in my own blood and printed it on a convenient place on the wall. Then I walked down to my cab and found that there was nobody about, and that the night was still very wild. I had driven some distance when I put my hand into the pocket in which I usually kept Lucy's ring, and found that it was not there. I was thunderstruck at this, for it was the only memento that I had of her. Thinking that I might have dropped it when I stooped over Drebber's body, I drove back, and leaving my cab in a side street, I went boldly up to the house--for I was ready to dare anything rather than lose the ring. When I arrived there, I walked right into the arms of a police-officer who was coming out, and only managed to disarm his suspicions by pretending to be hopelessly drunk. \"That was how Enoch Drebber came to his end. All I had to do then was to do as much for Stangerson, and so pay off John Ferrier's debt. I knew that he was staying at Halliday's Private Hotel, and I hung about all day, but he never came out. I fancy that he suspected something when Drebber failed to put in an appearance. He was cunning, was Stangerson, and always on his guard. If he thought he could keep me off by staying indoors he was very much mistaken. I soon found out which was the window of his bedroom, and early next morning I took advantage of some ladders which were lying in the lane behind the hotel, and so made my way into his room in the grey of the dawn. I woke him up and told him that the hour had come when he was to answer for the life he had taken so long before. I described Drebber's death to him, and I gave him the same choice of the poisoned pills. Instead of grasping at the chance of safety which that offered him, he sprang from his bed and flew at my throat. In self-defence I stabbed him to the heart. It would have been the same in any case, for Providence would never have allowed his guilty hand to pick out anything but the poison. \"I have little more to say, and it's as well, for I am about done up. I went on cabbing it for a day or so, intending to keep at it until I could save enough to take me back to America. I was standing in the yard when a ragged youngster asked if there was a cabby there called Jefferson Hope, and said that his cab was wanted by a gentleman at 221b, Baker Street. I went round, suspecting no harm, and the next thing I knew, this young man here had the bracelets on my wrists, and as neatly snackled as ever I saw in my life. That's the whole of my story, gentlemen. You may consider me to be a murderer; but I hold that I am just as much an officer of justice as you are.\" So thrilling had the man's narrative been, and his manner was so impressive that we had sat silent and absorbed. Even the professional detectives, blase as they were in every detail of crime, appeared to be keenly interested in the man's story. When he finished we sat for some minutes in a stillness which was only broken by the scratching of Lestrade's pencil as he gave the finishing touches to his shorthand account. \"There is only one point on which I should like a little more information,\" Sherlock Holmes said at last. \"Who was your accomplice who came for the ring which I advertised?\" The prisoner winked at my friend jocosely. \"I can tell my own secrets,\" he said, \"but I don't get other people into trouble. I saw your advertisement, and I thought it might be a plant, or it might be the ring which I wanted. My friend volunteered to go and see. I think you'll own he did it smartly.\" \"Not a doubt of that,\" said Holmes heartily. \"Now, gentlemen,\" the Inspector remarked gravely, \"the forms of the law must be complied with. On Thursday the prisoner will be brought before the magistrates, and your attendance will be required. Until then I will be responsible for him.\" He rang the bell as he spoke, and Jefferson Hope was led off by a couple of warders, while my friend and I made our way out of the Station and took a cab back to Baker Street. CHAPTER VII The Conclusion We had all been warned to appear before the magistrates upon the Thursday; but when the Thursday came there was no occasion for our testimony. A higher Judge had taken the matter in hand, and Jefferson Hope had been summoned before a tribunal where strict justice would be meted out to him. On the very night after his capture the aneurism burst, and he was found in the morning stretched upon the floor of the cell, with a placid smile upon his face, as though he had been able in his dying moments to look back upon a useful life, and on work well done. \"Gregson and Lestrade will be wild about his death,\" Holmes remarked, as we chatted it over next evening. \"Where will their grand advertisement be now?\" \"I don't see that they had very much to do with his capture,\" I answered. \"What you do in this world is a matter of no consequence,\" returned my companion, bitterly. \"The question is, what can you make people believe that you have done. Never mind,\" he continued, more brightly, after a pause. \"I would not have missed the investigation for anything. There has been no better case within my recollection. Simple as it was, there were several most instructive points about it.\" \"Simple!\" I ejaculated. \"Well, really, it can hardly be described as otherwise,\" said Sherlock Holmes, smiling at my surprise. \"The proof of its intrinsic simplicity is, that without any help save a few very ordinary deductions I was able to lay my hand upon the criminal within three days.\" \"That is true,\" said I. \"I have already explained to you that what is out of the common is usually a guide rather than a hindrance. In solving a problem of this sort, the grand thing is to be able to reason backwards. That is a very useful accomplishment, and a very easy one, but people do not practise it much. In the every-day affairs of life it is more useful to reason forwards, and so the other comes to be neglected. There are fifty who can reason synthetically for one who can reason analytically.\" \"I confess,\" said I, \"that I do not quite follow you.\" \"I hardly expected that you would. Let me see if I can make it clearer. Most people, if you describe a train of events to them, will tell you what the result would be. They can put those events together in their minds, and argue from them that something will come to pass. There are few people, however, who, if you told them a result, would be able to evolve from their own inner consciousness what the steps were which led up to that result. This power is what I mean when I talk of reasoning backwards, or analytically.\" \"I understand,\" said I. \"Now this was a case in which you were given the result and had to find everything else for yourself. Now let me endeavour to show you the different steps in my reasoning. To begin at the beginning. I approached the house, as you know, on foot, and with my mind entirely free from all impressions. I naturally began by examining the roadway, and there, as I have already explained to you, I saw clearly the marks of a cab, which, I ascertained by inquiry, must have been there during the night. I satisfied myself that it was a cab and not a private carriage by the narrow gauge of the wheels. The ordinary London growler is considerably less wide than a gentleman's brougham. \"This was the first point gained. I then walked slowly down the garden path, which happened to be composed of a clay soil, peculiarly suitable for taking impressions. No doubt it appeared to you to be a mere trampled line of slush, but to my trained eyes every mark upon its surface had a meaning. There is no branch of detective science which is so important and so much neglected as the art of tracing footsteps. Happily, I have always laid great stress upon it, and much practice has made it second nature to me. I saw the heavy footmarks of the constables, but I saw also the track of the two men who had first passed through the garden. It was easy to tell that they had been before the others, because in places their marks had been entirely obliterated by the others coming upon the top of them. In this way my second link was formed, which told me that the nocturnal visitors were two in number, one remarkable for his height (as I calculated from the length of his stride), and the other fashionably dressed, to judge from the small and elegant impression left by his boots. \"On entering the house this last inference was confirmed. My well-booted man lay before me. The tall one, then, had done the murder, if murder there was. There was no wound upon the dead man's person, but the agitated expression upon his face assured me that he had foreseen his fate before it came upon him. Men who die from heart disease, or any sudden natural cause, never by any chance exhibit agitation upon their features. Having sniffed the dead man's lips I detected a slightly sour smell, and I came to the conclusion that he had had poison forced upon him. Again, I argued that it had been forced upon him from the hatred and fear expressed upon his face. By the method of exclusion, I had arrived at this result, for no other hypothesis would meet the facts. Do not imagine that it was a very unheard of idea. The forcible administration of poison is by no means a new thing in criminal annals. The cases of Dolsky in Odessa, and of Leturier in Montpellier, will occur at once to any toxicologist. \"And now came the great question as to the reason why. Robbery had not been the object of the murder, for nothing was taken. Was it politics, then, or was it a woman? That was the question which confronted me. I was inclined from the first to the latter supposition. Political assassins are only too glad to do their work and to fly. This murder had, on the contrary, been done most deliberately, and the perpetrator had left his tracks all over the room, showing that he had been there all the time. It must have been a private wrong, and not a political one, which called for such a methodical revenge. When the inscription was discovered upon the wall I was more inclined than ever to my opinion. The thing was too evidently a blind. When the ring was found, however, it settled the question. Clearly the murderer had used it to remind his victim of some dead or absent woman. It was at this point that I asked Gregson whether he had enquired in his telegram to Cleveland as to any particular point in Mr. Drebber's former career. He answered, you remember, in the negative. \"I then proceeded to make a careful examination of the room, which confirmed me in my opinion as to the murderer's height, and furnished me with the additional details as to the Trichinopoly cigar and the length of his nails. I had already come to the conclusion, since there were no signs of a struggle, that the blood which covered the floor had burst from the murderer's nose in his excitement. I could perceive that the track of blood coincided with the track of his feet. It is seldom that any man, unless he is very full-blooded, breaks out in this way through emotion, so I hazarded the opinion that the criminal was probably a robust and ruddy-faced man. Events proved that I had judged correctly. \"Having left the house, I proceeded to do what Gregson had neglected. I telegraphed to the head of the police at Cleveland, limiting my enquiry to the circumstances connected with the marriage of Enoch Drebber. The answer was conclusive. It told me that Drebber had already applied for the protection of the law against an old rival in love, named Jefferson Hope, and that this same Hope was at present in Europe. I knew now that I held the clue to the mystery in my hand, and all that remained was to secure the murderer. \"I had already determined in my own mind that the man who had walked into the house with Drebber, was none other than the man who had driven the cab. The marks in the road showed me that the horse had wandered on in a way which would have been impossible had there been anyone in charge of it. Where, then, could the driver be, unless he were inside the house? Again, it is absurd to suppose that any sane man would carry out a deliberate crime under the very eyes, as it were, of a third person, who was sure to betray him. Lastly, supposing one man wished to dog another through London, what better means could he adopt than to turn cabdriver. All these considerations led me to the irresistible conclusion that Jefferson Hope was to be found among the jarveys of the Metropolis. \"If he had been one there was no reason to believe that he had ceased to be. On the contrary, from his point of view, any sudden chance would be likely to draw attention to himself. He would, probably, for a time at least, continue to perform his duties. There was no reason to suppose that he was going under an assumed name. Why should he change his name in a country where no one knew his original one? I therefore organized my Street Arab detective corps, and sent them systematically to every cab proprietor in London until they ferreted out the man that I wanted. How well they succeeded, and how quickly I took advantage of it, are still fresh in your recollection. The murder of Stangerson was an incident which was entirely unexpected, but which could hardly in any case have been prevented. Through it, as you know, I came into possession of the pills, the existence of which I had already surmised. You see the whole thing is a chain of logical sequences without a break or flaw.\" \"It is wonderful!\" I cried. \"Your merits should be publicly recognized. You should publish an account of the case. If you won't, I will for you.\" \"You may do what you like, Doctor,\" he answered. \"See here!\" he continued, handing a paper over to me, \"look at this!\" It was the Echo for the day, and the paragraph to which he pointed was devoted to the case in question. \"The public,\" it said, \"have lost a sensational treat through the sudden death of the man Hope, who was suspected of the murder of Mr. Enoch Drebber and of Mr. Joseph Stangerson. The details of the case will probably be never known now, though we are informed upon good authority that the crime was the result of an old standing and romantic feud, in which love and Mormonism bore a part. It seems that both the victims belonged, in their younger days, to the Latter Day Saints, and Hope, the deceased prisoner, hails also from Salt Lake City. If the case has had no other effect, it, at least, brings out in the most striking manner the efficiency of our detective police force, and will serve as a lesson to all foreigners that they will do wisely to settle their feuds at home, and not to carry them on to British soil. It is an open secret that the credit of this smart capture belongs entirely to the well-known Scotland Yard officials, Messrs. Lestrade and Gregson. The man was apprehended, it appears, in the rooms of a certain Mr. Sherlock Holmes, who has himself, as an amateur, shown some talent in the detective line, and who, with such instructors, may hope in time to attain to some degree of their skill. It is expected that a testimonial of some sort will be presented to the two officers as a fitting recognition of their services.\" \"Didn't I tell you so when we started?\" cried Sherlock Holmes with a laugh. \"That's the result of all our Study in Scarlet: to get them a testimonial!\" \"Never mind,\" I answered, \"I have all the facts in my journal, and the public shall know them. In the meantime you must make yourself contented by the consciousness of success, like the Roman miser-- \"'Populus me sibilat, at mihi plaudo Ipse domi simul ac nummos contemplar in arca.'\" ---------- This text is provided to you \"as-is\" without any warranty. No warranties of any kind, expressed or implied, are made to you as to the text or any medium it may be on, including but not limited to warranties of merchantablity or fitness for a particular purpose. This text was formatted from various free ASCII and HTML variants. See http://sherlock-holm.es for an electronic form of this text and additional information about it. This text comes from the collection's version 3.1.</pre> In\u00a0[64]: Copied! <pre>from sklearn.datasets import fetch_20newsgroups\n\nnewsgroup_data = fetch_20newsgroups(subset='all')\n</pre> from sklearn.datasets import fetch_20newsgroups  newsgroup_data = fetch_20newsgroups(subset='all') <p>We can inspect what's inside. Feel free to play with it.</p> In\u00a0[65]: Copied! <pre>newsgroup_data.keys()\n</pre> newsgroup_data.keys() Out[65]: <pre>dict_keys(['data', 'filenames', 'target_names', 'target', 'DESCR'])</pre> In\u00a0[66]: Copied! <pre>len(newsgroup_data.filenames)\n</pre> len(newsgroup_data.filenames) Out[66]: <pre>18846</pre> In\u00a0[67]: Copied! <pre>print(newsgroup_data.DESCR)\n</pre> print(newsgroup_data.DESCR) <pre>.. _20newsgroups_dataset:\n\nThe 20 newsgroups text dataset\n------------------------------\n\nThe 20 newsgroups dataset comprises around 18000 newsgroups posts on\n20 topics split in two subsets: one for training (or development)\nand the other one for testing (or for performance evaluation). The split\nbetween the train and test set is based upon a messages posted before\nand after a specific date.\n\nThis module contains two loaders. The first one,\n:func:`sklearn.datasets.fetch_20newsgroups`,\nreturns a list of the raw texts that can be fed to text feature\nextractors such as :class:`~sklearn.feature_extraction.text.CountVectorizer`\nwith custom parameters so as to extract feature vectors.\nThe second one, :func:`sklearn.datasets.fetch_20newsgroups_vectorized`,\nreturns ready-to-use features, i.e., it is not necessary to use a feature\nextractor.\n\n**Data Set Characteristics:**\n\n    =================   ==========\n    Classes                     20\n    Samples total            18846\n    Dimensionality               1\n    Features                  text\n    =================   ==========\n\n|details-start|\n**Usage**\n|details-split|\n\nThe :func:`sklearn.datasets.fetch_20newsgroups` function is a data\nfetching / caching functions that downloads the data archive from\nthe original `20 newsgroups website`_, extracts the archive contents\nin the ``~/scikit_learn_data/20news_home`` folder and calls the\n:func:`sklearn.datasets.load_files` on either the training or\ntesting set folder, or both of them::\n\n  &gt;&gt;&gt; from sklearn.datasets import fetch_20newsgroups\n  &gt;&gt;&gt; newsgroups_train = fetch_20newsgroups(subset='train')\n\n  &gt;&gt;&gt; from pprint import pprint\n  &gt;&gt;&gt; pprint(list(newsgroups_train.target_names))\n  ['alt.atheism',\n   'comp.graphics',\n   'comp.os.ms-windows.misc',\n   'comp.sys.ibm.pc.hardware',\n   'comp.sys.mac.hardware',\n   'comp.windows.x',\n   'misc.forsale',\n   'rec.autos',\n   'rec.motorcycles',\n   'rec.sport.baseball',\n   'rec.sport.hockey',\n   'sci.crypt',\n   'sci.electronics',\n   'sci.med',\n   'sci.space',\n   'soc.religion.christian',\n   'talk.politics.guns',\n   'talk.politics.mideast',\n   'talk.politics.misc',\n   'talk.religion.misc']\n\nThe real data lies in the ``filenames`` and ``target`` attributes. The target\nattribute is the integer index of the category::\n\n  &gt;&gt;&gt; newsgroups_train.filenames.shape\n  (11314,)\n  &gt;&gt;&gt; newsgroups_train.target.shape\n  (11314,)\n  &gt;&gt;&gt; newsgroups_train.target[:10]\n  array([ 7,  4,  4,  1, 14, 16, 13,  3,  2,  4])\n\nIt is possible to load only a sub-selection of the categories by passing the\nlist of the categories to load to the\n:func:`sklearn.datasets.fetch_20newsgroups` function::\n\n  &gt;&gt;&gt; cats = ['alt.atheism', 'sci.space']\n  &gt;&gt;&gt; newsgroups_train = fetch_20newsgroups(subset='train', categories=cats)\n\n  &gt;&gt;&gt; list(newsgroups_train.target_names)\n  ['alt.atheism', 'sci.space']\n  &gt;&gt;&gt; newsgroups_train.filenames.shape\n  (1073,)\n  &gt;&gt;&gt; newsgroups_train.target.shape\n  (1073,)\n  &gt;&gt;&gt; newsgroups_train.target[:10]\n  array([0, 1, 1, 1, 0, 1, 1, 0, 0, 0])\n\n|details-end|\n\n|details-start|\n**Converting text to vectors**\n|details-split|\n\nIn order to feed predictive or clustering models with the text data,\none first need to turn the text into vectors of numerical values suitable\nfor statistical analysis. This can be achieved with the utilities of the\n``sklearn.feature_extraction.text`` as demonstrated in the following\nexample that extract `TF-IDF`_ vectors of unigram tokens\nfrom a subset of 20news::\n\n  &gt;&gt;&gt; from sklearn.feature_extraction.text import TfidfVectorizer\n  &gt;&gt;&gt; categories = ['alt.atheism', 'talk.religion.misc',\n  ...               'comp.graphics', 'sci.space']\n  &gt;&gt;&gt; newsgroups_train = fetch_20newsgroups(subset='train',\n  ...                                       categories=categories)\n  &gt;&gt;&gt; vectorizer = TfidfVectorizer()\n  &gt;&gt;&gt; vectors = vectorizer.fit_transform(newsgroups_train.data)\n  &gt;&gt;&gt; vectors.shape\n  (2034, 34118)\n\nThe extracted TF-IDF vectors are very sparse, with an average of 159 non-zero\ncomponents by sample in a more than 30000-dimensional space\n(less than .5% non-zero features)::\n\n  &gt;&gt;&gt; vectors.nnz / float(vectors.shape[0])\n  159.01327...\n\n:func:`sklearn.datasets.fetch_20newsgroups_vectorized` is a function which\nreturns ready-to-use token counts features instead of file names.\n\n.. _`20 newsgroups website`: http://people.csail.mit.edu/jrennie/20Newsgroups/\n.. _`TF-IDF`: https://en.wikipedia.org/wiki/Tf-idf\n\n|details-end|\n\n|details-start|\n**Filtering text for more realistic training**\n|details-split|\n\nIt is easy for a classifier to overfit on particular things that appear in the\n20 Newsgroups data, such as newsgroup headers. Many classifiers achieve very\nhigh F-scores, but their results would not generalize to other documents that\naren't from this window of time.\n\nFor example, let's look at the results of a multinomial Naive Bayes classifier,\nwhich is fast to train and achieves a decent F-score::\n\n  &gt;&gt;&gt; from sklearn.naive_bayes import MultinomialNB\n  &gt;&gt;&gt; from sklearn import metrics\n  &gt;&gt;&gt; newsgroups_test = fetch_20newsgroups(subset='test',\n  ...                                      categories=categories)\n  &gt;&gt;&gt; vectors_test = vectorizer.transform(newsgroups_test.data)\n  &gt;&gt;&gt; clf = MultinomialNB(alpha=.01)\n  &gt;&gt;&gt; clf.fit(vectors, newsgroups_train.target)\n  MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True)\n\n  &gt;&gt;&gt; pred = clf.predict(vectors_test)\n  &gt;&gt;&gt; metrics.f1_score(newsgroups_test.target, pred, average='macro')\n  0.88213...\n\n(The example :ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py` shuffles\nthe training and test data, instead of segmenting by time, and in that case\nmultinomial Naive Bayes gets a much higher F-score of 0.88. Are you suspicious\nyet of what's going on inside this classifier?)\n\nLet's take a look at what the most informative features are:\n\n  &gt;&gt;&gt; import numpy as np\n  &gt;&gt;&gt; def show_top10(classifier, vectorizer, categories):\n  ...     feature_names = vectorizer.get_feature_names_out()\n  ...     for i, category in enumerate(categories):\n  ...         top10 = np.argsort(classifier.coef_[i])[-10:]\n  ...         print(\"%s: %s\" % (category, \" \".join(feature_names[top10])))\n  ...\n  &gt;&gt;&gt; show_top10(clf, vectorizer, newsgroups_train.target_names)\n  alt.atheism: edu it and in you that is of to the\n  comp.graphics: edu in graphics it is for and of to the\n  sci.space: edu it that is in and space to of the\n  talk.religion.misc: not it you in is that and to of the\n\n\nYou can now see many things that these features have overfit to:\n\n- Almost every group is distinguished by whether headers such as\n  ``NNTP-Posting-Host:`` and ``Distribution:`` appear more or less often.\n- Another significant feature involves whether the sender is affiliated with\n  a university, as indicated either by their headers or their signature.\n- The word \"article\" is a significant feature, based on how often people quote\n  previous posts like this: \"In article [article ID], [name] &lt;[e-mail address]&gt;\n  wrote:\"\n- Other features match the names and e-mail addresses of particular people who\n  were posting at the time.\n\nWith such an abundance of clues that distinguish newsgroups, the classifiers\nbarely have to identify topics from text at all, and they all perform at the\nsame high level.\n\nFor this reason, the functions that load 20 Newsgroups data provide a\nparameter called **remove**, telling it what kinds of information to strip out\nof each file. **remove** should be a tuple containing any subset of\n``('headers', 'footers', 'quotes')``, telling it to remove headers, signature\nblocks, and quotation blocks respectively.\n\n  &gt;&gt;&gt; newsgroups_test = fetch_20newsgroups(subset='test',\n  ...                                      remove=('headers', 'footers', 'quotes'),\n  ...                                      categories=categories)\n  &gt;&gt;&gt; vectors_test = vectorizer.transform(newsgroups_test.data)\n  &gt;&gt;&gt; pred = clf.predict(vectors_test)\n  &gt;&gt;&gt; metrics.f1_score(pred, newsgroups_test.target, average='macro')\n  0.77310...\n\nThis classifier lost over a lot of its F-score, just because we removed\nmetadata that has little to do with topic classification.\nIt loses even more if we also strip this metadata from the training data:\n\n  &gt;&gt;&gt; newsgroups_train = fetch_20newsgroups(subset='train',\n  ...                                       remove=('headers', 'footers', 'quotes'),\n  ...                                       categories=categories)\n  &gt;&gt;&gt; vectors = vectorizer.fit_transform(newsgroups_train.data)\n  &gt;&gt;&gt; clf = MultinomialNB(alpha=.01)\n  &gt;&gt;&gt; clf.fit(vectors, newsgroups_train.target)\n  MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True)\n\n  &gt;&gt;&gt; vectors_test = vectorizer.transform(newsgroups_test.data)\n  &gt;&gt;&gt; pred = clf.predict(vectors_test)\n  &gt;&gt;&gt; metrics.f1_score(newsgroups_test.target, pred, average='macro')\n  0.76995...\n\nSome other classifiers cope better with this harder version of the task. Try the\n:ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_text_feature_extraction.py`\nexample with and without the `remove` option to compare the results.\n|details-end|\n\n.. topic:: Data Considerations\n\n  The Cleveland Indians is a major league baseball team based in Cleveland,\n  Ohio, USA. In December 2020, it was reported that \"After several months of\n  discussion sparked by the death of George Floyd and a national reckoning over\n  race and colonialism, the Cleveland Indians have decided to change their\n  name.\" Team owner Paul Dolan \"did make it clear that the team will not make\n  its informal nickname -- the Tribe -- its new team name.\" \"It's not going to\n  be a half-step away from the Indians,\" Dolan said.\"We will not have a Native\n  American-themed name.\"\n\n  https://www.mlb.com/news/cleveland-indians-team-name-change\n\n.. topic:: Recommendation\n\n  - When evaluating text classifiers on the 20 Newsgroups data, you\n    should strip newsgroup-related metadata. In scikit-learn, you can do this\n    by setting ``remove=('headers', 'footers', 'quotes')``. The F-score will be\n    lower because it is more realistic.\n  - This text dataset contains data which may be inappropriate for certain NLP\n    applications. An example is listed in the \"Data Considerations\" section\n    above. The challenge with using current text datasets in NLP for tasks such\n    as sentence completion, clustering, and other applications is that text\n    that is culturally biased and inflammatory will propagate biases. This\n    should be taken into consideration when using the dataset, reviewing the\n    output, and the bias should be documented.\n\n.. topic:: Examples\n\n   * :ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_text_feature_extraction.py`\n\n   * :ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`\n\n   * :ref:`sphx_glr_auto_examples_text_plot_hashing_vs_dict_vectorizer.py`\n\n   * :ref:`sphx_glr_auto_examples_text_plot_document_clustering.py`\n\n</pre> <p>You can look into the data as well.</p> In\u00a0[68]: Copied! <pre>print(newsgroup_data.data[0])\n</pre> print(newsgroup_data.data[0]) <pre>From: Mamatha Devineni Ratnam &lt;mr47+@andrew.cmu.edu&gt;\nSubject: Pens fans reactions\nOrganization: Post Office, Carnegie Mellon, Pittsburgh, PA\nLines: 12\nNNTP-Posting-Host: po4.andrew.cmu.edu\n\n\n\nI am sure some bashers of Pens fans are pretty confused about the lack\nof any kind of posts about the recent Pens massacre of the Devils. Actually,\nI am  bit puzzled too and a bit relieved. However, I am going to put an end\nto non-PIttsburghers' relief with a bit of praise for the Pens. Man, they\nare killing those Devils worse than I thought. Jagr just showed you why\nhe is much better than his regular season stats. He is also a lot\nfo fun to watch in the playoffs. Bowman should let JAgr have a lot of\nfun in the next couple of games since the Pens are going to beat the pulp out of Jersey anyway. I was very disappointed not to see the Islanders lose the final\nregular season game.          PENS RULE!!!\n\n\n</pre> <p>You can load a more \"clean\" data like following.</p> In\u00a0[69]: Copied! <pre>docs = fetch_20newsgroups(subset='all',  remove=('headers', 'footers', 'quotes'))['data']\n</pre> docs = fetch_20newsgroups(subset='all',  remove=('headers', 'footers', 'quotes'))['data'] In\u00a0[71]: Copied! <pre>print(docs[0])\n</pre> print(docs[0]) <pre>\n\nI am sure some bashers of Pens fans are pretty confused about the lack\nof any kind of posts about the recent Pens massacre of the Devils. Actually,\nI am  bit puzzled too and a bit relieved. However, I am going to put an end\nto non-PIttsburghers' relief with a bit of praise for the Pens. Man, they\nare killing those Devils worse than I thought. Jagr just showed you why\nhe is much better than his regular season stats. He is also a lot\nfo fun to watch in the playoffs. Bowman should let JAgr have a lot of\nfun in the next couple of games since the Pens are going to beat the pulp out of Jersey anyway. I was very disappointed not to see the Islanders lose the final\nregular season game.          PENS RULE!!!\n\n\n</pre> <p>BERTopic follows the convention of the scikit-learn API. You can fit the model with <code>fit_transform</code> method.</p> In\u00a0[73]: Copied! <pre>from bertopic import BERTopic\n\ntopic_model = BERTopic()\ntopics, probs = topic_model.fit_transform(docs)\n</pre> from bertopic import BERTopic  topic_model = BERTopic() topics, probs = topic_model.fit_transform(docs)  <pre>modules.json:   0%|          | 0.00/349 [00:00&lt;?, ?B/s]</pre> <pre>config_sentence_transformers.json:   0%|          | 0.00/116 [00:00&lt;?, ?B/s]</pre> <pre>README.md:   0%|          | 0.00/10.7k [00:00&lt;?, ?B/s]</pre> <pre>sentence_bert_config.json:   0%|          | 0.00/53.0 [00:00&lt;?, ?B/s]</pre> <pre>config.json:   0%|          | 0.00/612 [00:00&lt;?, ?B/s]</pre> <pre>model.safetensors:   0%|          | 0.00/90.9M [00:00&lt;?, ?B/s]</pre> <pre>tokenizer_config.json:   0%|          | 0.00/350 [00:00&lt;?, ?B/s]</pre> <pre>vocab.txt:   0%|          | 0.00/232k [00:00&lt;?, ?B/s]</pre> <pre>tokenizer.json:   0%|          | 0.00/466k [00:00&lt;?, ?B/s]</pre> <pre>special_tokens_map.json:   0%|          | 0.00/112 [00:00&lt;?, ?B/s]</pre> <pre>1_Pooling/config.json:   0%|          | 0.00/190 [00:00&lt;?, ?B/s]</pre> <pre>OMP: Info #276: omp_set_nested routine deprecated, please use omp_set_max_active_levels instead.\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n</pre> <p>The package also has a quick visualizer, where you can see the topics and the words that are associated with the topics.</p> In\u00a0[74]: Copied! <pre>topic_model.visualize_topics()\n</pre> topic_model.visualize_topics() <p>Another visualization we can do (see https://maartengr.github.io/BERTopic/getting_started/visualization/visualization.html#visualize-documents) is to use the sentence embedding model to embed the documents into a vector space and visualize all the documents using the UMAP algorithm, along with the topics.</p> <p>This time, I'll set the <code>min_topic_size</code> to 100 to reduce the number of topics it finds and to make the visualization simpler.</p> In\u00a0[78]: Copied! <pre>from sentence_transformers import SentenceTransformer\nfrom umap import UMAP\n\n# Prepare embeddings\nsentence_model = SentenceTransformer(\"all-MiniLM-L6-v2\")\nembeddings = sentence_model.encode(docs, show_progress_bar=False)\n\ntopic_model = BERTopic(min_topic_size=100).fit(docs, embeddings)\n\n# Run the visualization with the original embeddings\ntopic_model.visualize_documents(docs, embeddings=embeddings)\n\n# Reduce dimensionality of embeddings, this step is optional but much faster to perform iteratively:\nreduced_embeddings = UMAP(n_neighbors=10, n_components=2, min_dist=0.0, metric='cosine').fit_transform(embeddings)\ntopic_model.visualize_documents(docs, reduced_embeddings=reduced_embeddings)\n</pre> from sentence_transformers import SentenceTransformer from umap import UMAP  # Prepare embeddings sentence_model = SentenceTransformer(\"all-MiniLM-L6-v2\") embeddings = sentence_model.encode(docs, show_progress_bar=False)  topic_model = BERTopic(min_topic_size=100).fit(docs, embeddings)  # Run the visualization with the original embeddings topic_model.visualize_documents(docs, embeddings=embeddings)  # Reduce dimensionality of embeddings, this step is optional but much faster to perform iteratively: reduced_embeddings = UMAP(n_neighbors=10, n_components=2, min_dist=0.0, metric='cosine').fit_transform(embeddings) topic_model.visualize_documents(docs, reduced_embeddings=reduced_embeddings)  <pre>huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n</pre> <p>Q: Can you identify an interesting dataset of documents and apply BERTopic &amp; produce the visualization?</p>"},{"location":"m13-text/lab13/#module-13-texts","title":"Module 13: Texts\u00b6","text":""},{"location":"m13-text/lab13/#spacy-basics","title":"SpaCy basics\u00b6","text":""},{"location":"m13-text/lab13/#lets-read-a-book","title":"Let's read a book\u00b6","text":"<p>Shall we load some serious book? You can use any books that you can find as a text file.</p>"},{"location":"m13-text/lab13/#on-encodings","title":"On encodings\u00b6","text":"<p>What are we getting this error? What does it mean? It says <code>nlp</code> function expects <code>str</code> type but we passed <code>bytes</code>.</p>"},{"location":"m13-text/lab13/#lets-count","title":"Let's count!\u00b6","text":""},{"location":"m13-text/lab13/#some-wordclouds","title":"Some wordclouds?\u00b6","text":""},{"location":"m13-text/lab13/#topic-modeling","title":"Topic modeling\u00b6","text":"<p>Another basic text analysis is topic modeling. Imagine you have a bunch of documents and you want to know what are the main topics that are discussed in these documents. Topic modeling methods aim to extract these \"topics\" automatically based on the words that appear in the documents. In topic modeling, each topic can be thought of as a distribution over words. For instance, a topic can be \"politics\" and it can be represented as a probability distribution over words like \"election\", \"vote\", \"president\", etc.</p> <p>Let's do a simple topic modeling with <code>bertopic</code> package. Although there is a long history of topic modeling, with many methods such as LDA, just like many other NLP tasks, topic modeling is also being replaced by LLM-based methods like BERTopic, so we'd like to try that as well. You should already have <code>scikit-learn</code> installed. Let's install <code>bertopic</code>.</p> <pre><code>pip install bertopic\n</code></pre> <p>Let's first get the dataset included in scikit-learn.</p>"},{"location":"m14-networks/class/","title":"Networks","text":""},{"location":"m14-networks/class/#what-is-a-network","title":"What is a network?","text":"<p>What is a network and why do we want to visualize it? Probably the best example is the social network. Imagine your friends and then imagine the connections between them in addition to the connections between you and your friends. That's a network already! Now imagine the network around your friends, and then the network around your friends' friends, and so on. If we count all the connections between everyone in our society, that's our social network. </p> <p>Networks are, in fact, everywhere. </p>"},{"location":"m14-networks/class/#tree","title":"Tree","text":"<ul> <li>treevis.net - A Visual Bibliography of Tree Visualization 2.0 by Hans-J\u00f6rg Schulz</li> </ul>"},{"location":"m14-networks/lab14/","title":"Module 14: Networks","text":"Run in Google Colab View on Github View raw on Github"},{"location":"m14-networks/lab14/#module-14-networks","title":"Module 14: Networks\u00b6","text":""},{"location":"m14-networks/lab14/#gephi-and-cytospace","title":"Gephi and Cytospace\u00b6","text":"<p>We will introduce two network visualization tools. The first one is Gephi. It can perform a variety of network analysis and can produce pretty visualizations quickly. The downside is that it's currently not well maintained and as a result the installation has become problematic, particularly in the recent systems including Windows 10 and MacOS 10.12+.</p> <p>You can download and install Gephi: https://gephi.org/.</p> <p>Depending upon what version of Gephi you use the location of some buttons and tabs may vary, but the general functionality is roughly the same. If you want to know more about Gephi or what file formats it can read/write you can visit their documentation page. You can also check out some other tutorials online.</p> <p>Another tool is the Cytoscape. It's developed by biologists &amp; bioinformaticians and thus geared towards biological networks. Additionally, it does not have many network analysis functionalities. However, it is more stable and sensible in many ways than Gephi. You can download it at http://www.cytoscape.org/ and check out the tutorials at: https://github.com/cytoscape/cytoscape-tutorials/wiki.</p> <p>For this assignment, you can choose one from these two, and experiment with a small network. We'll use the Les Miserables graph, which can be downloaded from: http://www-personal.umich.edu/~mejn/netdata/. (Feel free to play with other networks too: https://github.com/gephi/gephi/wiki/Datasets)</p> <p>Once you have the Les Miserables graph,</p> <p>For Gephi users:</p> <ul> <li>Load the network into Gephi as an undirected graph</li> <li>Use a force-directed layout to obtain a good layout (also play with other layouts)</li> <li>Find communities (modules) and color nodes based on the communities</li> <li>Tweak various visual encodings to obtain a good visualization. For example - node size, node labels, edge weights etc</li> <li>Export to a PDF or a PNG file</li> <li>and upload the image file.</li> </ul> <p>For Cytospace users:</p> <ul> <li>Load the network into Cytospace</li> <li>Apply the edge-weighted spring embedded layout (also play with other layouts such as \"organic\")</li> <li>Color the nodes and tweak various visual encodings to obtain a good visualization</li> <li>Export to a PDF or a PNG file</li> <li>and upload the image file.</li> </ul>"},{"location":"m14-networks/lab14/#how-to-install-gephi-on-microsoft-windows-with-oracle-java-9-by-xuan-wang","title":"How to install Gephi on Microsoft Windows with Oracle Java 9 (by Xuan Wang)\u00b6","text":"<p>Gephi can't find java by default on Windows with JDK 9. I don't know whether others have encountered the same problem. So I am writing it down. Hope it is helpful for somebody.</p> <p>First, you need to download and install Oracle Java. We'll use Java 9. (We don't have support for Java 10.) http://www.oracle.com/technetwork/java/javase/downloads/index.html Note: You can install JRE or JDK. JRE needs 110MB space and JDK needs 610MB space.</p> <p>Second, follow the link on homework page to download and install Gephi.</p> <p>Third: Configure Gephi. Gephi by default can't find your JRE 9. You need to edit <code>C:\\Program Files\\Gephi-0.9.2\\etc\\gephi.conf</code>, add this line <code>jdkhome=\"C:\\Program Files\\Java\\jre-9.0.4</code> Change the path to your java installation path. You are good to go.</p> <p>Java 9 by default will add <code>C:\\ProgramData\\Oracle\\Java\\javapath\\</code> to <code>PATH</code> and write Windows Registry for JRE. CLASS_PATH is obsoleted in Java 9 and JAVA_HOME is not neccesary for most applications since it is reserved for private JRE. Anyway, Gephi simply doesn't buy it. It doesn't recognize JRE 9's javapath folder.</p> <p>You may try to set JAVA_HOME, it might work too.</p> <p>Well, Oracle has changed the directory structure for JRE on Windows. That is why they use javapath instead. If you are using <code>conf</code> files or <code>JRE_HOME/JAVA_HOME</code>, whenever you upgrade your JRE, the path will change and you have to set it all over again. If Gephi could use the new javapath, upgrdaing java would have no impact on setting.</p>"},{"location":"m14-networks/lab14/#interactive-visualizations","title":"Interactive visualizations\u00b6","text":""},{"location":"m14-networks/lab14/#controlling-plot-elements","title":"Controlling plot elements\u00b6","text":"<p>Let's start with this example on Vega editor: https://vega.github.io/editor/#/examples/vega/scatter-plot-null-values.</p> <p>Notice that the drop-down list allows us to choose what to plot in the <code>x</code> and <code>y</code> fields: IMDB rating, Rottentomatoes rating, worldwide gross, and so on. How to achieve this?</p>"},{"location":"m14-networks/lab14/#signals-in-vega","title":"<code>Signals</code> in Vega\u00b6","text":"<p>From the Vega documentation:</p> <p>\"Signals are dynamic variables that parameterize a visualization and can drive interactive behaviors.\"</p> <p>Let's look at the code:</p> <pre><code>\"signals\": [\n    { \"name\": \"xField\", \n      \"value\": \"IMDB_Rating\",\n      \"bind\": {\n          \"input\": \"select\", \n          \"options\": [\n          \"IMDB_Rating\", \"Rotten_Tomatoes_Rating\", \n          \"US_Gross\", \"Worldwide_Gross\"\n          ]\n      }\n    },\n      ...]\n</code></pre> <p><code>name</code> is the name of this signal. In this case, <code>yField</code> as can be seen in the plot.</p> <p><code>bind</code> creates the input, in this case, the drop-down list. It can also be a checkbox, a radio button, etc.</p> <p>Then, we want to use the input to <code>signal</code> to update the plot. In this plot, the element to be updated is the <code>marks</code>.</p> <pre><code>\"marks\": [\n      {\n      \"type\": \"symbol\",\n      \"from\": {\"data\": \"valid\"},\n      \"encode\": {\n        \"enter\": {\n          \"size\": {\"value\": 50},\n          \"tooltip\": {\"field\": \"tooltip\"}\n        },\n        \"update\": {\n            \"x\": {\"scale\": \"xscale\", \"field\": {\"signal\": \"xField\"}},\n            \"y\": {\"scale\": \"yscale\", \"field\": {\"signal\": \"yField\"}},\n            \"fill\": {\"value\": \"steelblue\"},\n            \"fillOpacity\": {\"value\": 0.5},\n            \"zindex\": {\"value\": 0}\n        },\n        \"hover\": {\n            \"fill\": {\"value\": \"firebrick\"},\n            \"fillOpacity\": {\"value\": 1},\n            \"zindex\": {\"value\": 1}\n        }\n      }\n    },\n    ...\n    ]\n</code></pre> <p>In the <code>update</code> key, we want to change the <code>field</code> of x and y. Previously, we would specify a field as:</p> <pre><code>\"x\": {\"scale\": \"xscale\", \"field\": \"IMDB_Rating\"}\n</code></pre> <p>However, here we use the input from the <code>xField</code> signal:</p> <pre><code>\"x\": {\"scale\": \"xscale\", \"field\": {\"signal\": \"xField\"}}\n</code></pre> <p>That's it!</p> <p>Assignment: add radio buttons to allow changing the color of the points. Your result should look like this:</p> <p></p> <p>Submit the URL of your work (can be obtained using the webpage's \"share\" feature).</p>"}]}